// source: cms.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var usertype_pb = require('./usertype_pb.js');
goog.object.extend(proto, usertype_pb);
var anchortype_pb = require('./anchortype_pb.js');
goog.object.extend(proto, anchortype_pb);
var cmstype_pb = require('./cmstype_pb.js');
goog.object.extend(proto, cmstype_pb);
goog.exportSymbol('proto.pb.cms.AdjustBalanceReply', null, global);
goog.exportSymbol('proto.pb.cms.AdjustBalanceRequest', null, global);
goog.exportSymbol('proto.pb.cms.AdminFileChunk', null, global);
goog.exportSymbol('proto.pb.cms.AdminListReply', null, global);
goog.exportSymbol('proto.pb.cms.AnchorFullReply', null, global);
goog.exportSymbol('proto.pb.cms.AnchorFullRequest', null, global);
goog.exportSymbol('proto.pb.cms.AnchorListReply', null, global);
goog.exportSymbol('proto.pb.cms.AnchorListRequest', null, global);
goog.exportSymbol('proto.pb.cms.AppListReply', null, global);
goog.exportSymbol('proto.pb.cms.AreaListReply', null, global);
goog.exportSymbol('proto.pb.cms.GuildListReply', null, global);
goog.exportSymbol('proto.pb.cms.LoginRequest', null, global);
goog.exportSymbol('proto.pb.cms.ProfileListReply', null, global);
goog.exportSymbol('proto.pb.cms.ProfileListRequest', null, global);
goog.exportSymbol('proto.pb.cms.UserListReply', null, global);
goog.exportSymbol('proto.pb.cms.UserListRequest', null, global);
goog.exportSymbol('proto.pb.cms.ViolationListReply', null, global);
goog.exportSymbol('proto.pb.cms.ViolationListRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.AreaListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.cms.AreaListReply.repeatedFields_, null);
};
goog.inherits(proto.pb.cms.AreaListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.AreaListReply.displayName = 'proto.pb.cms.AreaListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.LoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.cms.LoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.LoginRequest.displayName = 'proto.pb.cms.LoginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.AdminListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.cms.AdminListReply.repeatedFields_, null);
};
goog.inherits(proto.pb.cms.AdminListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.AdminListReply.displayName = 'proto.pb.cms.AdminListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.GuildListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.cms.GuildListReply.repeatedFields_, null);
};
goog.inherits(proto.pb.cms.GuildListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.GuildListReply.displayName = 'proto.pb.cms.GuildListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.AppListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.cms.AppListReply.repeatedFields_, null);
};
goog.inherits(proto.pb.cms.AppListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.AppListReply.displayName = 'proto.pb.cms.AppListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.AnchorListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.cms.AnchorListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.AnchorListRequest.displayName = 'proto.pb.cms.AnchorListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.AnchorListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.cms.AnchorListReply.repeatedFields_, null);
};
goog.inherits(proto.pb.cms.AnchorListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.AnchorListReply.displayName = 'proto.pb.cms.AnchorListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.UserListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.cms.UserListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.UserListRequest.displayName = 'proto.pb.cms.UserListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.UserListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.cms.UserListReply.repeatedFields_, null);
};
goog.inherits(proto.pb.cms.UserListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.UserListReply.displayName = 'proto.pb.cms.UserListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.AdjustBalanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.cms.AdjustBalanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.AdjustBalanceRequest.displayName = 'proto.pb.cms.AdjustBalanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.AdjustBalanceReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.cms.AdjustBalanceReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.AdjustBalanceReply.displayName = 'proto.pb.cms.AdjustBalanceReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.ProfileListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.cms.ProfileListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.ProfileListRequest.displayName = 'proto.pb.cms.ProfileListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.ProfileListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.cms.ProfileListReply.repeatedFields_, null);
};
goog.inherits(proto.pb.cms.ProfileListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.ProfileListReply.displayName = 'proto.pb.cms.ProfileListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.AnchorFullRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.cms.AnchorFullRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.AnchorFullRequest.displayName = 'proto.pb.cms.AnchorFullRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.AnchorFullReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.cms.AnchorFullReply.repeatedFields_, null);
};
goog.inherits(proto.pb.cms.AnchorFullReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.AnchorFullReply.displayName = 'proto.pb.cms.AnchorFullReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.ViolationListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.cms.ViolationListRequest.repeatedFields_, null);
};
goog.inherits(proto.pb.cms.ViolationListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.ViolationListRequest.displayName = 'proto.pb.cms.ViolationListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.ViolationListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.cms.ViolationListReply.repeatedFields_, null);
};
goog.inherits(proto.pb.cms.ViolationListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.ViolationListReply.displayName = 'proto.pb.cms.ViolationListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.cms.AdminFileChunk = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.cms.AdminFileChunk, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.cms.AdminFileChunk.displayName = 'proto.pb.cms.AdminFileChunk';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.cms.AreaListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.AreaListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.AreaListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.AreaListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AreaListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    areasList: jspb.Message.toObjectList(msg.getAreasList(),
    usertype_pb.Area.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.AreaListReply}
 */
proto.pb.cms.AreaListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.AreaListReply;
  return proto.pb.cms.AreaListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.AreaListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.AreaListReply}
 */
proto.pb.cms.AreaListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new usertype_pb.Area;
      reader.readMessage(value,usertype_pb.Area.deserializeBinaryFromReader);
      msg.addAreas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.AreaListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.AreaListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.AreaListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AreaListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAreasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      usertype_pb.Area.serializeBinaryToWriter
    );
  }
};


/**
 * repeated pb.Area areas = 1;
 * @return {!Array<!proto.pb.Area>}
 */
proto.pb.cms.AreaListReply.prototype.getAreasList = function() {
  return /** @type{!Array<!proto.pb.Area>} */ (
    jspb.Message.getRepeatedWrapperField(this, usertype_pb.Area, 1));
};


/**
 * @param {!Array<!proto.pb.Area>} value
 * @return {!proto.pb.cms.AreaListReply} returns this
*/
proto.pb.cms.AreaListReply.prototype.setAreasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.Area=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Area}
 */
proto.pb.cms.AreaListReply.prototype.addAreas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.Area, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.cms.AreaListReply} returns this
 */
proto.pb.cms.AreaListReply.prototype.clearAreasList = function() {
  return this.setAreasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.LoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.LoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.LoginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.LoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.LoginRequest}
 */
proto.pb.cms.LoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.LoginRequest;
  return proto.pb.cms.LoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.LoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.LoginRequest}
 */
proto.pb.cms.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.LoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.LoginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.LoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.LoginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.pb.cms.LoginRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.cms.LoginRequest} returns this
 */
proto.pb.cms.LoginRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.pb.cms.LoginRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.cms.LoginRequest} returns this
 */
proto.pb.cms.LoginRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.cms.AdminListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.AdminListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.AdminListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.AdminListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AdminListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    adminsList: jspb.Message.toObjectList(msg.getAdminsList(),
    cmstype_pb.Admin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.AdminListReply}
 */
proto.pb.cms.AdminListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.AdminListReply;
  return proto.pb.cms.AdminListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.AdminListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.AdminListReply}
 */
proto.pb.cms.AdminListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cmstype_pb.Admin;
      reader.readMessage(value,cmstype_pb.Admin.deserializeBinaryFromReader);
      msg.addAdmins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.AdminListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.AdminListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.AdminListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AdminListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdminsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cmstype_pb.Admin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated pb.Admin admins = 1;
 * @return {!Array<!proto.pb.Admin>}
 */
proto.pb.cms.AdminListReply.prototype.getAdminsList = function() {
  return /** @type{!Array<!proto.pb.Admin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cmstype_pb.Admin, 1));
};


/**
 * @param {!Array<!proto.pb.Admin>} value
 * @return {!proto.pb.cms.AdminListReply} returns this
*/
proto.pb.cms.AdminListReply.prototype.setAdminsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.Admin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Admin}
 */
proto.pb.cms.AdminListReply.prototype.addAdmins = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.Admin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.cms.AdminListReply} returns this
 */
proto.pb.cms.AdminListReply.prototype.clearAdminsList = function() {
  return this.setAdminsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.cms.GuildListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.GuildListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.GuildListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.GuildListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.GuildListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildsList: jspb.Message.toObjectList(msg.getGuildsList(),
    cmstype_pb.Guild.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.GuildListReply}
 */
proto.pb.cms.GuildListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.GuildListReply;
  return proto.pb.cms.GuildListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.GuildListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.GuildListReply}
 */
proto.pb.cms.GuildListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cmstype_pb.Guild;
      reader.readMessage(value,cmstype_pb.Guild.deserializeBinaryFromReader);
      msg.addGuilds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.GuildListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.GuildListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.GuildListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.GuildListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cmstype_pb.Guild.serializeBinaryToWriter
    );
  }
};


/**
 * repeated pb.Guild guilds = 1;
 * @return {!Array<!proto.pb.Guild>}
 */
proto.pb.cms.GuildListReply.prototype.getGuildsList = function() {
  return /** @type{!Array<!proto.pb.Guild>} */ (
    jspb.Message.getRepeatedWrapperField(this, cmstype_pb.Guild, 1));
};


/**
 * @param {!Array<!proto.pb.Guild>} value
 * @return {!proto.pb.cms.GuildListReply} returns this
*/
proto.pb.cms.GuildListReply.prototype.setGuildsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.Guild=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Guild}
 */
proto.pb.cms.GuildListReply.prototype.addGuilds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.Guild, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.cms.GuildListReply} returns this
 */
proto.pb.cms.GuildListReply.prototype.clearGuildsList = function() {
  return this.setGuildsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.cms.AppListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.AppListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.AppListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.AppListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AppListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    appsList: jspb.Message.toObjectList(msg.getAppsList(),
    cmstype_pb.App.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.AppListReply}
 */
proto.pb.cms.AppListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.AppListReply;
  return proto.pb.cms.AppListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.AppListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.AppListReply}
 */
proto.pb.cms.AppListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cmstype_pb.App;
      reader.readMessage(value,cmstype_pb.App.deserializeBinaryFromReader);
      msg.addApps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.AppListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.AppListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.AppListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AppListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cmstype_pb.App.serializeBinaryToWriter
    );
  }
};


/**
 * repeated pb.App apps = 1;
 * @return {!Array<!proto.pb.App>}
 */
proto.pb.cms.AppListReply.prototype.getAppsList = function() {
  return /** @type{!Array<!proto.pb.App>} */ (
    jspb.Message.getRepeatedWrapperField(this, cmstype_pb.App, 1));
};


/**
 * @param {!Array<!proto.pb.App>} value
 * @return {!proto.pb.cms.AppListReply} returns this
*/
proto.pb.cms.AppListReply.prototype.setAppsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.App=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.App}
 */
proto.pb.cms.AppListReply.prototype.addApps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.App, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.cms.AppListReply} returns this
 */
proto.pb.cms.AppListReply.prototype.clearAppsList = function() {
  return this.setAppsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.AnchorListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.AnchorListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.AnchorListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AnchorListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageNo: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    anchorId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    areaId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    guildId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    blockStatus: jspb.Message.getFieldWithDefault(msg, 6, 0),
    onlineStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    reviewStatus: jspb.Message.getFieldWithDefault(msg, 8, 0),
    createdStart: jspb.Message.getFieldWithDefault(msg, 9, 0),
    createdEnd: jspb.Message.getFieldWithDefault(msg, 10, 0),
    minOffline: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.AnchorListRequest}
 */
proto.pb.cms.AnchorListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.AnchorListRequest;
  return proto.pb.cms.AnchorListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.AnchorListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.AnchorListRequest}
 */
proto.pb.cms.AnchorListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAnchorId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAreaId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGuildId(value);
      break;
    case 6:
      var value = /** @type {!proto.pb.BlockStatus} */ (reader.readEnum());
      msg.setBlockStatus(value);
      break;
    case 7:
      var value = /** @type {!proto.pb.OnlineStatus} */ (reader.readEnum());
      msg.setOnlineStatus(value);
      break;
    case 8:
      var value = /** @type {!proto.pb.ReviewStatus} */ (reader.readEnum());
      msg.setReviewStatus(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCreatedStart(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCreatedEnd(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinOffline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.AnchorListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.AnchorListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.AnchorListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AnchorListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageNo();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAnchorId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAreaId();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getGuildId();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getBlockStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getOnlineStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getReviewStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getCreatedStart();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getCreatedEnd();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getMinOffline();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * optional uint32 page_no = 1;
 * @return {number}
 */
proto.pb.cms.AnchorListRequest.prototype.getPageNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListRequest} returns this
 */
proto.pb.cms.AnchorListRequest.prototype.setPageNo = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 page_size = 2;
 * @return {number}
 */
proto.pb.cms.AnchorListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListRequest} returns this
 */
proto.pb.cms.AnchorListRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 anchor_id = 3;
 * @return {number}
 */
proto.pb.cms.AnchorListRequest.prototype.getAnchorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListRequest} returns this
 */
proto.pb.cms.AnchorListRequest.prototype.setAnchorId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 area_id = 4;
 * @return {number}
 */
proto.pb.cms.AnchorListRequest.prototype.getAreaId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListRequest} returns this
 */
proto.pb.cms.AnchorListRequest.prototype.setAreaId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 guild_id = 5;
 * @return {number}
 */
proto.pb.cms.AnchorListRequest.prototype.getGuildId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListRequest} returns this
 */
proto.pb.cms.AnchorListRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional pb.BlockStatus block_status = 6;
 * @return {!proto.pb.BlockStatus}
 */
proto.pb.cms.AnchorListRequest.prototype.getBlockStatus = function() {
  return /** @type {!proto.pb.BlockStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.pb.BlockStatus} value
 * @return {!proto.pb.cms.AnchorListRequest} returns this
 */
proto.pb.cms.AnchorListRequest.prototype.setBlockStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional pb.OnlineStatus online_status = 7;
 * @return {!proto.pb.OnlineStatus}
 */
proto.pb.cms.AnchorListRequest.prototype.getOnlineStatus = function() {
  return /** @type {!proto.pb.OnlineStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.pb.OnlineStatus} value
 * @return {!proto.pb.cms.AnchorListRequest} returns this
 */
proto.pb.cms.AnchorListRequest.prototype.setOnlineStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional pb.ReviewStatus review_status = 8;
 * @return {!proto.pb.ReviewStatus}
 */
proto.pb.cms.AnchorListRequest.prototype.getReviewStatus = function() {
  return /** @type {!proto.pb.ReviewStatus} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.pb.ReviewStatus} value
 * @return {!proto.pb.cms.AnchorListRequest} returns this
 */
proto.pb.cms.AnchorListRequest.prototype.setReviewStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional uint32 created_start = 9;
 * @return {number}
 */
proto.pb.cms.AnchorListRequest.prototype.getCreatedStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListRequest} returns this
 */
proto.pb.cms.AnchorListRequest.prototype.setCreatedStart = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 created_end = 10;
 * @return {number}
 */
proto.pb.cms.AnchorListRequest.prototype.getCreatedEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListRequest} returns this
 */
proto.pb.cms.AnchorListRequest.prototype.setCreatedEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 min_offline = 11;
 * @return {number}
 */
proto.pb.cms.AnchorListRequest.prototype.getMinOffline = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListRequest} returns this
 */
proto.pb.cms.AnchorListRequest.prototype.setMinOffline = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.cms.AnchorListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.AnchorListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.AnchorListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.AnchorListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AnchorListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    anchorsList: jspb.Message.toObjectList(msg.getAnchorsList(),
    anchortype_pb.AnchorBasic.toObject, includeInstance),
    pageNo: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalPage: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalCount: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.AnchorListReply}
 */
proto.pb.cms.AnchorListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.AnchorListReply;
  return proto.pb.cms.AnchorListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.AnchorListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.AnchorListReply}
 */
proto.pb.cms.AnchorListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new anchortype_pb.AnchorBasic;
      reader.readMessage(value,anchortype_pb.AnchorBasic.deserializeBinaryFromReader);
      msg.addAnchors(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageNo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalPage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.AnchorListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.AnchorListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.AnchorListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AnchorListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnchorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      anchortype_pb.AnchorBasic.serializeBinaryToWriter
    );
  }
  f = message.getPageNo();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTotalPage();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * repeated pb.AnchorBasic anchors = 1;
 * @return {!Array<!proto.pb.AnchorBasic>}
 */
proto.pb.cms.AnchorListReply.prototype.getAnchorsList = function() {
  return /** @type{!Array<!proto.pb.AnchorBasic>} */ (
    jspb.Message.getRepeatedWrapperField(this, anchortype_pb.AnchorBasic, 1));
};


/**
 * @param {!Array<!proto.pb.AnchorBasic>} value
 * @return {!proto.pb.cms.AnchorListReply} returns this
*/
proto.pb.cms.AnchorListReply.prototype.setAnchorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.AnchorBasic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.AnchorBasic}
 */
proto.pb.cms.AnchorListReply.prototype.addAnchors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.AnchorBasic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.cms.AnchorListReply} returns this
 */
proto.pb.cms.AnchorListReply.prototype.clearAnchorsList = function() {
  return this.setAnchorsList([]);
};


/**
 * optional uint32 page_no = 2;
 * @return {number}
 */
proto.pb.cms.AnchorListReply.prototype.getPageNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListReply} returns this
 */
proto.pb.cms.AnchorListReply.prototype.setPageNo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 page_size = 3;
 * @return {number}
 */
proto.pb.cms.AnchorListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListReply} returns this
 */
proto.pb.cms.AnchorListReply.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 total_page = 4;
 * @return {number}
 */
proto.pb.cms.AnchorListReply.prototype.getTotalPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListReply} returns this
 */
proto.pb.cms.AnchorListReply.prototype.setTotalPage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 total_count = 5;
 * @return {number}
 */
proto.pb.cms.AnchorListReply.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorListReply} returns this
 */
proto.pb.cms.AnchorListReply.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.UserListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.UserListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.UserListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.UserListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageNo: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    areaId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    nickname: jspb.Message.getFieldWithDefault(msg, 5, ""),
    vipOnly: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    depositOnly: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    minBalance: jspb.Message.getFieldWithDefault(msg, 8, 0),
    createdStart: jspb.Message.getFieldWithDefault(msg, 9, 0),
    createdEnd: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.UserListRequest}
 */
proto.pb.cms.UserListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.UserListRequest;
  return proto.pb.cms.UserListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.UserListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.UserListRequest}
 */
proto.pb.cms.UserListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAreaId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickname(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVipOnly(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDepositOnly(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinBalance(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCreatedStart(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCreatedEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.UserListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.UserListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.UserListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.UserListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageNo();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAreaId();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getNickname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getVipOnly();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getDepositOnly();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getMinBalance();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getCreatedStart();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getCreatedEnd();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * optional uint32 page_no = 1;
 * @return {number}
 */
proto.pb.cms.UserListRequest.prototype.getPageNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.UserListRequest} returns this
 */
proto.pb.cms.UserListRequest.prototype.setPageNo = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 page_size = 2;
 * @return {number}
 */
proto.pb.cms.UserListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.UserListRequest} returns this
 */
proto.pb.cms.UserListRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 user_id = 3;
 * @return {number}
 */
proto.pb.cms.UserListRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.UserListRequest} returns this
 */
proto.pb.cms.UserListRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 area_id = 4;
 * @return {number}
 */
proto.pb.cms.UserListRequest.prototype.getAreaId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.UserListRequest} returns this
 */
proto.pb.cms.UserListRequest.prototype.setAreaId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string nickname = 5;
 * @return {string}
 */
proto.pb.cms.UserListRequest.prototype.getNickname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.cms.UserListRequest} returns this
 */
proto.pb.cms.UserListRequest.prototype.setNickname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool vip_only = 6;
 * @return {boolean}
 */
proto.pb.cms.UserListRequest.prototype.getVipOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.cms.UserListRequest} returns this
 */
proto.pb.cms.UserListRequest.prototype.setVipOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool deposit_only = 7;
 * @return {boolean}
 */
proto.pb.cms.UserListRequest.prototype.getDepositOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.cms.UserListRequest} returns this
 */
proto.pb.cms.UserListRequest.prototype.setDepositOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional uint32 min_balance = 8;
 * @return {number}
 */
proto.pb.cms.UserListRequest.prototype.getMinBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.UserListRequest} returns this
 */
proto.pb.cms.UserListRequest.prototype.setMinBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint32 created_start = 9;
 * @return {number}
 */
proto.pb.cms.UserListRequest.prototype.getCreatedStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.UserListRequest} returns this
 */
proto.pb.cms.UserListRequest.prototype.setCreatedStart = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 created_end = 10;
 * @return {number}
 */
proto.pb.cms.UserListRequest.prototype.getCreatedEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.UserListRequest} returns this
 */
proto.pb.cms.UserListRequest.prototype.setCreatedEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.cms.UserListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.UserListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.UserListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.UserListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.UserListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    usertype_pb.User.toObject, includeInstance),
    pageNo: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalPage: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalCount: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.UserListReply}
 */
proto.pb.cms.UserListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.UserListReply;
  return proto.pb.cms.UserListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.UserListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.UserListReply}
 */
proto.pb.cms.UserListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new usertype_pb.User;
      reader.readMessage(value,usertype_pb.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageNo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalPage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.UserListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.UserListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.UserListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.UserListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      usertype_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getPageNo();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTotalPage();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * repeated pb.User users = 1;
 * @return {!Array<!proto.pb.User>}
 */
proto.pb.cms.UserListReply.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.pb.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, usertype_pb.User, 1));
};


/**
 * @param {!Array<!proto.pb.User>} value
 * @return {!proto.pb.cms.UserListReply} returns this
*/
proto.pb.cms.UserListReply.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.User}
 */
proto.pb.cms.UserListReply.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.cms.UserListReply} returns this
 */
proto.pb.cms.UserListReply.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * optional uint32 page_no = 2;
 * @return {number}
 */
proto.pb.cms.UserListReply.prototype.getPageNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.UserListReply} returns this
 */
proto.pb.cms.UserListReply.prototype.setPageNo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 page_size = 3;
 * @return {number}
 */
proto.pb.cms.UserListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.UserListReply} returns this
 */
proto.pb.cms.UserListReply.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 total_page = 4;
 * @return {number}
 */
proto.pb.cms.UserListReply.prototype.getTotalPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.UserListReply} returns this
 */
proto.pb.cms.UserListReply.prototype.setTotalPage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 total_count = 5;
 * @return {number}
 */
proto.pb.cms.UserListReply.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.UserListReply} returns this
 */
proto.pb.cms.UserListReply.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.AdjustBalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.AdjustBalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.AdjustBalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AdjustBalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    entityId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sendNotify: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    desc: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.AdjustBalanceRequest}
 */
proto.pb.cms.AdjustBalanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.AdjustBalanceRequest;
  return proto.pb.cms.AdjustBalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.AdjustBalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.AdjustBalanceRequest}
 */
proto.pb.cms.AdjustBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pb.EntityType} */ (reader.readEnum());
      msg.setEntityType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEntityId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendNotify(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.AdjustBalanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.AdjustBalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.AdjustBalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AdjustBalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getEntityId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSendNotify();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDesc();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional pb.EntityType entity_type = 1;
 * @return {!proto.pb.EntityType}
 */
proto.pb.cms.AdjustBalanceRequest.prototype.getEntityType = function() {
  return /** @type {!proto.pb.EntityType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.pb.EntityType} value
 * @return {!proto.pb.cms.AdjustBalanceRequest} returns this
 */
proto.pb.cms.AdjustBalanceRequest.prototype.setEntityType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 entity_id = 2;
 * @return {number}
 */
proto.pb.cms.AdjustBalanceRequest.prototype.getEntityId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AdjustBalanceRequest} returns this
 */
proto.pb.cms.AdjustBalanceRequest.prototype.setEntityId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 amount = 3;
 * @return {number}
 */
proto.pb.cms.AdjustBalanceRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AdjustBalanceRequest} returns this
 */
proto.pb.cms.AdjustBalanceRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool send_notify = 4;
 * @return {boolean}
 */
proto.pb.cms.AdjustBalanceRequest.prototype.getSendNotify = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.cms.AdjustBalanceRequest} returns this
 */
proto.pb.cms.AdjustBalanceRequest.prototype.setSendNotify = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string desc = 5;
 * @return {string}
 */
proto.pb.cms.AdjustBalanceRequest.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.cms.AdjustBalanceRequest} returns this
 */
proto.pb.cms.AdjustBalanceRequest.prototype.setDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.AdjustBalanceReply.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.AdjustBalanceReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.AdjustBalanceReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AdjustBalanceReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    balance: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.AdjustBalanceReply}
 */
proto.pb.cms.AdjustBalanceReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.AdjustBalanceReply;
  return proto.pb.cms.AdjustBalanceReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.AdjustBalanceReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.AdjustBalanceReply}
 */
proto.pb.cms.AdjustBalanceReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.AdjustBalanceReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.AdjustBalanceReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.AdjustBalanceReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AdjustBalanceReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalance();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 balance = 1;
 * @return {number}
 */
proto.pb.cms.AdjustBalanceReply.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AdjustBalanceReply} returns this
 */
proto.pb.cms.AdjustBalanceReply.prototype.setBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.ProfileListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.ProfileListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.ProfileListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.ProfileListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageNo: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    anchorId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    areaId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.ProfileListRequest}
 */
proto.pb.cms.ProfileListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.ProfileListRequest;
  return proto.pb.cms.ProfileListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.ProfileListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.ProfileListRequest}
 */
proto.pb.cms.ProfileListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAnchorId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAreaId(value);
      break;
    case 5:
      var value = /** @type {!proto.pb.ReviewStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.ProfileListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.ProfileListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.ProfileListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.ProfileListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageNo();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAnchorId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAreaId();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional uint32 page_no = 1;
 * @return {number}
 */
proto.pb.cms.ProfileListRequest.prototype.getPageNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ProfileListRequest} returns this
 */
proto.pb.cms.ProfileListRequest.prototype.setPageNo = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 page_size = 2;
 * @return {number}
 */
proto.pb.cms.ProfileListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ProfileListRequest} returns this
 */
proto.pb.cms.ProfileListRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 anchor_id = 3;
 * @return {number}
 */
proto.pb.cms.ProfileListRequest.prototype.getAnchorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ProfileListRequest} returns this
 */
proto.pb.cms.ProfileListRequest.prototype.setAnchorId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 area_id = 4;
 * @return {number}
 */
proto.pb.cms.ProfileListRequest.prototype.getAreaId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ProfileListRequest} returns this
 */
proto.pb.cms.ProfileListRequest.prototype.setAreaId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional pb.ReviewStatus status = 5;
 * @return {!proto.pb.ReviewStatus}
 */
proto.pb.cms.ProfileListRequest.prototype.getStatus = function() {
  return /** @type {!proto.pb.ReviewStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.pb.ReviewStatus} value
 * @return {!proto.pb.cms.ProfileListRequest} returns this
 */
proto.pb.cms.ProfileListRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.cms.ProfileListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.ProfileListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.ProfileListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.ProfileListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.ProfileListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    profilesList: jspb.Message.toObjectList(msg.getProfilesList(),
    anchortype_pb.AnchorProfile.toObject, includeInstance),
    pageNo: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalPage: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalCount: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.ProfileListReply}
 */
proto.pb.cms.ProfileListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.ProfileListReply;
  return proto.pb.cms.ProfileListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.ProfileListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.ProfileListReply}
 */
proto.pb.cms.ProfileListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new anchortype_pb.AnchorProfile;
      reader.readMessage(value,anchortype_pb.AnchorProfile.deserializeBinaryFromReader);
      msg.addProfiles(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageNo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalPage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.ProfileListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.ProfileListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.ProfileListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.ProfileListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      anchortype_pb.AnchorProfile.serializeBinaryToWriter
    );
  }
  f = message.getPageNo();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTotalPage();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * repeated pb.AnchorProfile profiles = 1;
 * @return {!Array<!proto.pb.AnchorProfile>}
 */
proto.pb.cms.ProfileListReply.prototype.getProfilesList = function() {
  return /** @type{!Array<!proto.pb.AnchorProfile>} */ (
    jspb.Message.getRepeatedWrapperField(this, anchortype_pb.AnchorProfile, 1));
};


/**
 * @param {!Array<!proto.pb.AnchorProfile>} value
 * @return {!proto.pb.cms.ProfileListReply} returns this
*/
proto.pb.cms.ProfileListReply.prototype.setProfilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.AnchorProfile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.AnchorProfile}
 */
proto.pb.cms.ProfileListReply.prototype.addProfiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.AnchorProfile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.cms.ProfileListReply} returns this
 */
proto.pb.cms.ProfileListReply.prototype.clearProfilesList = function() {
  return this.setProfilesList([]);
};


/**
 * optional uint32 page_no = 2;
 * @return {number}
 */
proto.pb.cms.ProfileListReply.prototype.getPageNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ProfileListReply} returns this
 */
proto.pb.cms.ProfileListReply.prototype.setPageNo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 page_size = 3;
 * @return {number}
 */
proto.pb.cms.ProfileListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ProfileListReply} returns this
 */
proto.pb.cms.ProfileListReply.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 total_page = 4;
 * @return {number}
 */
proto.pb.cms.ProfileListReply.prototype.getTotalPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ProfileListReply} returns this
 */
proto.pb.cms.ProfileListReply.prototype.setTotalPage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 total_count = 5;
 * @return {number}
 */
proto.pb.cms.ProfileListReply.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ProfileListReply} returns this
 */
proto.pb.cms.ProfileListReply.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.AnchorFullRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.AnchorFullRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.AnchorFullRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AnchorFullRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    anchorId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.AnchorFullRequest}
 */
proto.pb.cms.AnchorFullRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.AnchorFullRequest;
  return proto.pb.cms.AnchorFullRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.AnchorFullRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.AnchorFullRequest}
 */
proto.pb.cms.AnchorFullRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAnchorId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.AnchorFullRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.AnchorFullRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.AnchorFullRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AnchorFullRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnchorId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 anchor_id = 1;
 * @return {number}
 */
proto.pb.cms.AnchorFullRequest.prototype.getAnchorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AnchorFullRequest} returns this
 */
proto.pb.cms.AnchorFullRequest.prototype.setAnchorId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.cms.AnchorFullReply.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.AnchorFullReply.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.AnchorFullReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.AnchorFullReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AnchorFullReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    basic: (f = msg.getBasic()) && anchortype_pb.AnchorBasic.toObject(includeInstance, f),
    profilesList: jspb.Message.toObjectList(msg.getProfilesList(),
    anchortype_pb.AnchorProfile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.AnchorFullReply}
 */
proto.pb.cms.AnchorFullReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.AnchorFullReply;
  return proto.pb.cms.AnchorFullReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.AnchorFullReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.AnchorFullReply}
 */
proto.pb.cms.AnchorFullReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new anchortype_pb.AnchorBasic;
      reader.readMessage(value,anchortype_pb.AnchorBasic.deserializeBinaryFromReader);
      msg.setBasic(value);
      break;
    case 2:
      var value = new anchortype_pb.AnchorProfile;
      reader.readMessage(value,anchortype_pb.AnchorProfile.deserializeBinaryFromReader);
      msg.addProfiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.AnchorFullReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.AnchorFullReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.AnchorFullReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AnchorFullReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasic();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      anchortype_pb.AnchorBasic.serializeBinaryToWriter
    );
  }
  f = message.getProfilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      anchortype_pb.AnchorProfile.serializeBinaryToWriter
    );
  }
};


/**
 * optional pb.AnchorBasic basic = 1;
 * @return {?proto.pb.AnchorBasic}
 */
proto.pb.cms.AnchorFullReply.prototype.getBasic = function() {
  return /** @type{?proto.pb.AnchorBasic} */ (
    jspb.Message.getWrapperField(this, anchortype_pb.AnchorBasic, 1));
};


/**
 * @param {?proto.pb.AnchorBasic|undefined} value
 * @return {!proto.pb.cms.AnchorFullReply} returns this
*/
proto.pb.cms.AnchorFullReply.prototype.setBasic = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.cms.AnchorFullReply} returns this
 */
proto.pb.cms.AnchorFullReply.prototype.clearBasic = function() {
  return this.setBasic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.cms.AnchorFullReply.prototype.hasBasic = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated pb.AnchorProfile profiles = 2;
 * @return {!Array<!proto.pb.AnchorProfile>}
 */
proto.pb.cms.AnchorFullReply.prototype.getProfilesList = function() {
  return /** @type{!Array<!proto.pb.AnchorProfile>} */ (
    jspb.Message.getRepeatedWrapperField(this, anchortype_pb.AnchorProfile, 2));
};


/**
 * @param {!Array<!proto.pb.AnchorProfile>} value
 * @return {!proto.pb.cms.AnchorFullReply} returns this
*/
proto.pb.cms.AnchorFullReply.prototype.setProfilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pb.AnchorProfile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.AnchorProfile}
 */
proto.pb.cms.AnchorFullReply.prototype.addProfiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pb.AnchorProfile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.cms.AnchorFullReply} returns this
 */
proto.pb.cms.AnchorFullReply.prototype.clearProfilesList = function() {
  return this.setProfilesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.cms.ViolationListRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.ViolationListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.ViolationListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.ViolationListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.ViolationListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageNo: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    areaId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dealStatusList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    reporterType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    reporterId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    reportedType: jspb.Message.getFieldWithDefault(msg, 7, 0),
    reportedId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    createdStart: jspb.Message.getFieldWithDefault(msg, 9, 0),
    createdEnd: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.ViolationListRequest}
 */
proto.pb.cms.ViolationListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.ViolationListRequest;
  return proto.pb.cms.ViolationListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.ViolationListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.ViolationListRequest}
 */
proto.pb.cms.ViolationListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAreaId(value);
      break;
    case 4:
      var values = /** @type {!Array<!proto.pb.BlockStatus>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDealStatus(values[i]);
      }
      break;
    case 5:
      var value = /** @type {!proto.pb.EntityType} */ (reader.readEnum());
      msg.setReporterType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReporterId(value);
      break;
    case 7:
      var value = /** @type {!proto.pb.EntityType} */ (reader.readEnum());
      msg.setReportedType(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReportedId(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCreatedStart(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCreatedEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.ViolationListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.ViolationListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.ViolationListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.ViolationListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageNo();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAreaId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getDealStatusList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
  f = message.getReporterType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getReporterId();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getReportedType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getReportedId();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getCreatedStart();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getCreatedEnd();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * optional uint32 page_no = 1;
 * @return {number}
 */
proto.pb.cms.ViolationListRequest.prototype.getPageNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.setPageNo = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 page_size = 2;
 * @return {number}
 */
proto.pb.cms.ViolationListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 area_id = 3;
 * @return {number}
 */
proto.pb.cms.ViolationListRequest.prototype.getAreaId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.setAreaId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated pb.BlockStatus deal_status = 4;
 * @return {!Array<!proto.pb.BlockStatus>}
 */
proto.pb.cms.ViolationListRequest.prototype.getDealStatusList = function() {
  return /** @type {!Array<!proto.pb.BlockStatus>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.pb.BlockStatus>} value
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.setDealStatusList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.pb.BlockStatus} value
 * @param {number=} opt_index
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.addDealStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.clearDealStatusList = function() {
  return this.setDealStatusList([]);
};


/**
 * optional pb.EntityType reporter_type = 5;
 * @return {!proto.pb.EntityType}
 */
proto.pb.cms.ViolationListRequest.prototype.getReporterType = function() {
  return /** @type {!proto.pb.EntityType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.pb.EntityType} value
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.setReporterType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional uint32 reporter_id = 6;
 * @return {number}
 */
proto.pb.cms.ViolationListRequest.prototype.getReporterId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.setReporterId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional pb.EntityType reported_type = 7;
 * @return {!proto.pb.EntityType}
 */
proto.pb.cms.ViolationListRequest.prototype.getReportedType = function() {
  return /** @type {!proto.pb.EntityType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.pb.EntityType} value
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.setReportedType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional uint32 reported_id = 8;
 * @return {number}
 */
proto.pb.cms.ViolationListRequest.prototype.getReportedId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.setReportedId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint32 created_start = 9;
 * @return {number}
 */
proto.pb.cms.ViolationListRequest.prototype.getCreatedStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.setCreatedStart = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 created_end = 10;
 * @return {number}
 */
proto.pb.cms.ViolationListRequest.prototype.getCreatedEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ViolationListRequest} returns this
 */
proto.pb.cms.ViolationListRequest.prototype.setCreatedEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.cms.ViolationListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.ViolationListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.ViolationListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.ViolationListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.ViolationListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    cmstype_pb.ViolationRecord.toObject, includeInstance),
    pageNo: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalPage: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalCount: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.ViolationListReply}
 */
proto.pb.cms.ViolationListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.ViolationListReply;
  return proto.pb.cms.ViolationListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.ViolationListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.ViolationListReply}
 */
proto.pb.cms.ViolationListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cmstype_pb.ViolationRecord;
      reader.readMessage(value,cmstype_pb.ViolationRecord.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageNo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalPage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.ViolationListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.ViolationListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.ViolationListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.ViolationListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cmstype_pb.ViolationRecord.serializeBinaryToWriter
    );
  }
  f = message.getPageNo();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTotalPage();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * repeated pb.ViolationRecord records = 1;
 * @return {!Array<!proto.pb.ViolationRecord>}
 */
proto.pb.cms.ViolationListReply.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.pb.ViolationRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, cmstype_pb.ViolationRecord, 1));
};


/**
 * @param {!Array<!proto.pb.ViolationRecord>} value
 * @return {!proto.pb.cms.ViolationListReply} returns this
*/
proto.pb.cms.ViolationListReply.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.ViolationRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.ViolationRecord}
 */
proto.pb.cms.ViolationListReply.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.ViolationRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.cms.ViolationListReply} returns this
 */
proto.pb.cms.ViolationListReply.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional uint32 page_no = 2;
 * @return {number}
 */
proto.pb.cms.ViolationListReply.prototype.getPageNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ViolationListReply} returns this
 */
proto.pb.cms.ViolationListReply.prototype.setPageNo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 page_size = 3;
 * @return {number}
 */
proto.pb.cms.ViolationListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ViolationListReply} returns this
 */
proto.pb.cms.ViolationListReply.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 total_page = 4;
 * @return {number}
 */
proto.pb.cms.ViolationListReply.prototype.getTotalPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ViolationListReply} returns this
 */
proto.pb.cms.ViolationListReply.prototype.setTotalPage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 total_count = 5;
 * @return {number}
 */
proto.pb.cms.ViolationListReply.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.ViolationListReply} returns this
 */
proto.pb.cms.ViolationListReply.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.cms.AdminFileChunk.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.cms.AdminFileChunk.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.cms.AdminFileChunk} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AdminFileChunk.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    filename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    content: msg.getContent_asB64(),
    areaId: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.cms.AdminFileChunk}
 */
proto.pb.cms.AdminFileChunk.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.cms.AdminFileChunk;
  return proto.pb.cms.AdminFileChunk.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.cms.AdminFileChunk} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.cms.AdminFileChunk}
 */
proto.pb.cms.AdminFileChunk.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 3:
      var value = /** @type {!proto.pb.FileType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAreaId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.cms.AdminFileChunk.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.cms.AdminFileChunk.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.cms.AdminFileChunk} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.cms.AdminFileChunk.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAreaId();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional uint32 offset = 1;
 * @return {number}
 */
proto.pb.cms.AdminFileChunk.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AdminFileChunk} returns this
 */
proto.pb.cms.AdminFileChunk.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string filename = 2;
 * @return {string}
 */
proto.pb.cms.AdminFileChunk.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.cms.AdminFileChunk} returns this
 */
proto.pb.cms.AdminFileChunk.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional pb.FileType type = 3;
 * @return {!proto.pb.FileType}
 */
proto.pb.cms.AdminFileChunk.prototype.getType = function() {
  return /** @type {!proto.pb.FileType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.pb.FileType} value
 * @return {!proto.pb.cms.AdminFileChunk} returns this
 */
proto.pb.cms.AdminFileChunk.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bytes content = 4;
 * @return {string}
 */
proto.pb.cms.AdminFileChunk.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes content = 4;
 * This is a type-conversion wrapper around `getContent()`
 * @return {string}
 */
proto.pb.cms.AdminFileChunk.prototype.getContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContent()));
};


/**
 * optional bytes content = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContent()`
 * @return {!Uint8Array}
 */
proto.pb.cms.AdminFileChunk.prototype.getContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.cms.AdminFileChunk} returns this
 */
proto.pb.cms.AdminFileChunk.prototype.setContent = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional uint32 area_id = 5;
 * @return {number}
 */
proto.pb.cms.AdminFileChunk.prototype.getAreaId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.cms.AdminFileChunk} returns this
 */
proto.pb.cms.AdminFileChunk.prototype.setAreaId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


goog.object.extend(exports, proto.pb.cms);
