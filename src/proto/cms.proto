syntax = "proto3";

package pb.cms;

import "usertype.proto";
import "anchortype.proto";
import "cmstype.proto";

service CmsSdk {
    // 获取运营区域列表，不分页
    rpc GetAreaList (Empty) returns (AreaListReply) {
    }

    // 登录
    rpc Login (LoginRequest) returns (Admin) {
    }

    // 获取当前管理员信息
    rpc GetAdminInfo (Empty) returns (Admin) {
    }

    // 获取总体实时数据
    rpc GetOverview (OverviewRequest) returns (OverviewReply) {
    }

    // 获取首页统计数据
    rpc GetHomeStat (HomeStatRequest) returns (HomeStatReply) {
    }

    // 获取区域统计数据
    rpc GetAreaStat (AreaStatRequest) returns (AreaStatReply) {
    }

    // 获取主播统计数据
    rpc GetAnchorStat (AnchorStatRequest) returns (AnchorStatReply) {
    }

    // 保存管理员，id为0时创建
    rpc SaveAdmin (Admin) returns (Admin) {
    }

    // 获取管理员列表，不分页
    rpc GetAdminList (Empty) returns (AdminListReply) {
    }

    // 保存工会，id为0时创建
    rpc SaveGuild (Guild) returns (Guild) {
    }

    // 获取工会列表，不分页
    rpc GetGuildList (Empty) returns (GuildListReply) {
    }

    // 获取主播列表
    rpc GetAnchorList (AnchorListRequest) returns (AnchorListReply) {
    }

    // 获取用户列表
    rpc GetUserList (UserListRequest) returns (UserListReply) {
    }

    // 调整余额
    rpc AdjustBalance (AdjustBalanceRequest) returns (AdjustBalanceReply) {
    }

    // 更新用户信息，目前仅支持更新vip到期时间
    rpc UpdateUser (User) returns (User) {
    }

    // 删除用户
    rpc DeleteUser (DeleteUserRequest) returns (Empty) {
    }

    // 更新主播基础信息
    rpc UpdateAnchorBasic (AnchorBasic) returns (AnchorBasic) {
    }

    // 封禁用户或主播
    rpc Block (BlockRequest) returns (Empty) {
    }

    // 解封用户或主播
    rpc Unblock (UnblockRequest) returns (Empty) {
    }

    // 迁移账号
    rpc Migrate (MigrateRequest) returns (Empty) {
    }

    // 认证主播
    rpc AuthorizeAnchor (AuthorizeAnchorRequest) returns (Empty) {
    }

    // 获取主播完整资料
    rpc GetAnchorFull (AnchorFullRequest) returns (AnchorFullReply) {
    }

    // 获取主播资料列表
    rpc GetProfileList (ProfileListRequest) returns (ProfileListReply) {
    }

    // 处理主播资料审核
    rpc ProcessProfile (ProcessProfileRequest) returns (AnchorProfile) {
    }

    // 获取举报记录
    rpc GetViolationList (ViolationListRequest) returns (ViolationListReply) {
    }

    // 处理违规
    rpc ProcessViolation (ProcessViolationRequest) returns (ViolationRecord) {
    }

    // 获取通话录制视频列表
    rpc GetLiveList (LiveListRequest) returns (LiveListReply) {
    }

    // 获取支付订单列表
    rpc GetPayList (PayListRequest) returns (PayListReply) {
    }

    // 获取机器人列表
    rpc GetRobotList (RobotListRequest) returns (RobotListReply) {
    }

    // 保存机器人，禁用时把状态置为Paused，启用时把状态置为Approved，其他状态不适用
    rpc SaveRobot (AnchorProfile) returns (AnchorProfile) {
    }

    // 获取机器人自动消息列表
    rpc GetRobotMessageList (RobotMessageListRequest) returns (RobotMessageListReply) {
    }

    // 保存机器人消息，AIA消息
    rpc SaveRobotMessage (RobotMessage) returns (RobotMessage) {
    }

    // 获取朋友圈列表
    rpc GetMomentList (MomentListRequest) returns (MomentListReply) {
    }

    // 保存朋友圈
    rpc SaveMoment (Moment) returns (Moment) {
    }

    // 获取自动消息列表，AIB消息
    rpc GetAutoMessageList (AutoMessageListRequest) returns (AutoMessageListReply) {
    }

    // 保存自动消息，AIB消息
    rpc SaveAutoMessage (AutoMessage) returns (AutoMessage) {
    }

    // 获取聊天记录列表
    rpc GetChatMessageList (ChatMessageListRequest) returns (ChatMessageListReply) {
    }

    // 获取通话记录列表
    rpc GetCallList (CallListRequest) returns (CallListReply) {
    }

    // 获取交易记录列表
    rpc GetTransactionList (TransactionListRequest) returns (TransactionListReply) {
    }

    // 生成预结算记录
    rpc CreateSettleRecord (CreateSettleRequest) returns (Empty) {
    }

    // 提交符合条件的结算记录，扣除主播余额
    rpc SubmitSettleRecord (SubmitSettleRequest) returns (Empty) {
    }

    // 查询结算记录生成或提交进度，生成和提交结算记录同一个区域同时只能进行一个，不能并发
    rpc QuerySettleProgress (SettleProgressRequest) returns (SettleProgressReply) {
    }

    // 获取结算记录，不分页
    rpc GetSettleList (SettleListRequest) returns (SettleListReply) {
    }

    // 获取应用列表，不分页
    rpc GetAppList (AppListRequest) returns (AppListReply) {
    }

    // 保存app，id不为0时创建
    rpc SaveApp (App) returns (App) {
    }

    // 获取版本列表，不分页
    rpc GetVersionList (VersionListRequest) returns (VersionListReply) {
    }

    // 保存版本，不允许创建
    rpc SaveVersion (Version) returns (Version) {
    }

    // 获取区域配置，不分页
    rpc GetAreaConfigList (AreaConfigListRequest) returns (AreaConfigListReply) {
    }

    // 保存区域配置，id不为0时创建
    rpc SaveAreaConfig (AreaConfig) returns (AreaConfig) {
    }

    // 获取国家配置，不分页
    rpc GetCountryConfigList (CountryConfigListRequest) returns (CountryConfigListReply) {
    }

    // 保存国家配置，id不为0时创建
    rpc SaveCountryConfig (CountryConfig) returns (CountryConfig) {
    }

    // 获取支付渠道配置，不分页
    rpc GetPayChannelList (PayChannelListRequest) returns (PayChannelListReply) {
    }

    // 保存支付渠道配置，id不为0时创建
    rpc SavePayChannel (PayChannel) returns (PayChannel) {
    }

    // 获取支付参数配置，不分页
    rpc GetPayConfigList (PayConfigListRequest) returns (PayConfigListReply) {
    }

    // 保存支付参数配置，id不为0时创建
    rpc SavePayConfig (PayConfig) returns (PayConfig) {
    }

    // 获取商品配置，不分页
    rpc GetCommodityList (CommodityListRequest) returns (CommodityListReply) {
    }

    // 保存商品配置，id不为0时创建
    rpc SaveCommodity (Commodity) returns (Commodity) {
    }

    // 获取签到配置
    //    rpc GetCheckinConfig ()
    //
    //    // 获取vip配置
    //    rpc GetVipConfig ()

    // 获取声网key
    rpc GetAgoraKey (AgoraKeyRequest) returns (AgoraKeyReply) {
    }
    // 上传文件
    // 同时提供http multiple-form 上传接口  /file/upload  文件的key为file 需要设置http header token, area-id, file-type 返回值为JSON格式的FileRecord，
    rpc UploadFile (stream AdminFileChunk) returns (FileRecord) {
    }
}

message AreaListReply {
    repeated Area areas = 1;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message OverviewRequest {
    uint32 area_id = 1;
    uint32 start_at = 2;
    uint32 end_at = 3;
}

message OverviewReply {
    // 总收入
    uint32 income = 1;
    // 总订单数
    uint32 pay_count = 2;
    // 新增用户
    uint32 new_user = 3;
    // 活跃用户
    uint32 active_user = 4;
    // 通话主播
    uint32 busy_anchor = 5;
    // 在线主播
    uint32 online_anchor = 6;
    // 待审核主播
    uint32 review_anchor = 7;
    // 待审核profile
    uint32 review_profile = 8;
    // 待审核视频
    uint32 review_video = 9;
    // 新充值钻石
    uint64 new_amount = 10;
    // 消费钻石
    uint64 expense_amount = 11;
    // 总余额
    uint64 total_amount = 12;
}

message HomeStatRequest {
    // 区域id
    uint32 area_id = 1;
    // 开始时间
    uint32 start_at = 2;
    // 结束时间，为0时表示到当前时间
    uint32 end_at = 3;
}

message AppStat {
    // 应用id
    uint32 app_id = 1;
    // 新增收入
    uint32 new_income = 2;
    // 总收入
    uint32 total_income = 3;
    // 新增用户
    uint32 new_user = 4;
    // google收入
    uint32 google_income = 5;
    // 苹果收入
    uint32 apple_income = 6;
    // 其他收入
    uint32 other_income = 7;
}

message HomeStatReply {
    // 应用统计数据
    repeated AppStat stats = 1;
    // 每小时活跃数据
    repeated uint32 hourly_actives = 2;
}

message AreaStatRequest {
    // 区域id
    uint32 area_id = 1;
    // 开始时间
    uint32 start_at = 2;
    // 结束时间，为0时表示到当前时间
    uint32 end_at = 3;
}

message AreaStatReply {
    repeated AreaStat stats = 1;
}

message AnchorStatRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 区域id
    uint32 area_id = 3;
    // 主播等级
    AnchorLevel level = 4;
    // 主播id
    uint32 anchor_id = 5;
    // 统计时间
    uint32 stat_at = 6;
}

message AnchorStatReply {
    repeated AnchorStat stats = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message AdminListReply {
    repeated Admin admins = 1;
}

message GuildListReply {
    repeated Guild guilds = 1;
}

message AnchorListRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 主播id
    uint32 anchor_id = 3;
    // 区域id
    uint32 area_id = 4;
    // 工会id
    uint32 guild_id = 5;
    // 封禁状态
    BlockStatus block_status = 6;
    // 在线状态
    OnlineStatus online_status = 7;
    // 审核状态
    ReviewStatus review_status = 8;
    // 创建起始时间
    uint32 created_start = 9;
    // 创建结束时间
    uint32 created_end = 10;
    // 最小离线时间，单位为秒
    uint32 min_offline = 11;
}

message AnchorListReply {
    // 主播
    repeated AnchorBasic anchors = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message UserListRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 用户id
    uint32 user_id = 3;
    // 区域id
    uint32 area_id = 4;
    // 昵称
    string nickname = 5;
    // 仅查询vip
    bool vip_only = 6;
    // 仅查询充值
    bool deposit_only = 7;
    // 最低余额
    uint32 min_balance = 8;
    // 创建起始时间
    uint32 created_start = 9;
    // 创建结束时间
    uint32 created_end = 10;
}

message UserListReply {
    // 用户
    repeated User users = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message AdjustBalanceRequest {
    // 主播或用户
    EntityType entity_type = 1;
    // 主播或用户id
    uint32 entity_id = 2;
    // 数量，正数为增加，负数为扣除
    int32 amount = 3;
    // 是否发生系统通知
    bool send_notify = 4;
    // 描述
    string desc = 5;
}

message AdjustBalanceReply {
    // 调整后余额
    uint32 balance = 1;
}

message DeleteUserRequest {
    uint32 user_id = 1;
}

message BlockRequest {
    // 用户或主播
    EntityType entity_type = 1;
    // 用户或主播id
    uint32 entity_id = 2;
    // 封禁类型
    BlockStatus block_status = 3;
    // 封禁时长，秒
    uint32 duration = 4;
    // 封禁理由
    string reason = 5;
}

message UnblockRequest {
    // 用户或主播
    EntityType entity_type = 1;
    // 用户或主播id
    uint32 entity_id = 2;
}

message MigrateRequest {
    // 迁移的实体类型，用户或主播
    EntityType entity_type = 1;
    // 源账号id
    uint32 src_id = 2;
    // 目的账号id
    uint32 dst_id = 3;
}

message AuthorizeAnchorRequest {
    // 主播id
    uint32 anchor_id = 1;
    // 区域id
    uint32 area_id = 2;
    // 工会id
    uint32 guild_id = 3;
}

message AnchorFullRequest {
    uint32 anchor_id = 1;
}

message AnchorFullReply {
    AnchorBasic basic = 1;
    repeated AnchorProfile profiles = 2;
}

message ProfileListRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 主播id
    uint32 anchor_id = 3;
    // 区域id
    uint32 area_id = 4;
    // 审核状态
    ReviewStatus status = 5;
}

message ProfileListReply {
    repeated AnchorProfile profiles = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message ProcessProfileRequest {
    uint32 profile_id = 1;
    ReviewStatus status = 2;
    // 拒绝原因
    string reason = 3;
}

message ViolationListRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 区域id
    uint32 area_id = 3;
    // 处理状态，传空时查询未处理的举报
    repeated BlockStatus deal_status = 4;
    // 举报场景
    ViolationScene Scene = 5;
    // 举报人类型
    EntityType reporter_type = 6;
    // 举报人id
    uint32 reporter_id = 7;
    // 被举报人类型
    EntityType reported_type = 8;
    // 被举报人id
    uint32 reported_id = 9;
    // 创建起始时间
    uint32 created_start = 10;
    // 创建结束时间
    uint32 created_end = 11;
}

message ViolationListReply {
    repeated ViolationRecord records = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message ProcessViolationRequest {
    uint64 violation_id = 1;
    // 处理状态
    BlockStatus deal_status = 2;
    // 处理信息
    string deal_message = 3;
    // 封禁时长，秒
    uint32 block_duration = 4;
}

message LiveListRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 区域id
    uint32 area_id = 3;
    // 主播id
    uint32 anchor_id = 4;
    // 审核状态
    ReviewStatus status = 5;
    // 创建起始时间
    uint32 created_start = 6;
    // 创建结束时间
    uint32 created_end = 7;
}

message LiveListReply {
    repeated FileRecord records = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message PayListRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 区域id
    uint32 area_id = 3;
    // 应用id
    uint32 app_id = 4;
    // 用户id
    uint32 user_id = 5;
    // 订单id
    uint64 record_id = 6;
    // 订单状态
    PayStatus status = 7;
    // 创建起始时间
    uint32 created_start = 8;
    // 创建结束时间
    uint32 created_end = 9;
}

message PayListReply {
    repeated PayRecord records = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message RobotListRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 区域id
    uint32 area_id = 3;
    // 是否启用
    bool enable = 4;
    // 机器人id
    uint32 robot_id = 5;
}

message RobotListReply {
    repeated AnchorProfile robots = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message RobotMessageListRequest {
    uint32 robot_id = 1;
}

message RobotMessageListReply {
    repeated RobotMessage messages = 1;
}

message MomentListRequest {
    // 主播或用户
    EntityType entity_type = 1;
    // 主播或用户id
    uint32 entity_id = 2;
}

message MomentListReply {
    repeated Moment moments = 1;
}

message AutoMessageListRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 区域id
    uint32 area_id = 3;
    // 是否启用
    bool enable = 4;
    // 场景动作
    ActionType action = 5;
}

message AutoMessageListReply {
    repeated AutoMessage messages = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message ChatMessageListRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 区域id
    uint32 area_id = 3;
    // 应用id
    uint32 app_id = 4;
    // 用户id
    uint32 user_id = 5;
    // 主播id
    uint32 anchor_id = 6;
    // 消息方向
    MessageDirection direction = 7;
    // 消息类型
    MessageType type = 8;
    // 关键词
    string keyword = 9;
    // 创建起始时间
    uint32 created_start = 10;
    // 创建结束时间
    uint32 created_end = 11;
}

message ChatMessageListReply {
    repeated ChatMessage messages = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message CallListRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 区域id
    uint32 area_id = 3;
    // 应用id
    uint32 app_id = 4;
    // 用户id
    uint32 user_id = 5;
    // 主播id
    uint32 anchor_id = 6;
    // 发起方式
    CallType call_type = 7;
    // 挂断方式
    HangType hang_type = 8;
    // 通话状态
    CallStatus status = 9;
    // 最小时长
    uint32 min_duration = 10;
    // 最大时长
    uint32 max_duration = 11;
    // 创建起始时间
    uint32 created_start = 12;
    // 创建结束时间
    uint32 created_end = 13;
}

message CallListReply {
    repeated CallRecord calls = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message TransactionListRequest {
    // 页号
    uint32 page_no = 1;
    // 页大小
    uint32 page_size = 2;
    // 区域id
    uint32 area_id = 3;
    // 应用id
    uint32 app_id = 4;
    // 交易者类型，只能为用户或主播
    EntityType trader_type = 5;
    // 交易者id
    uint32 trader_id = 6;
    // 交易实体类型，可以为礼物、通话、支付等
    EntityType source_type = 7;
    // 创建起始时间
    uint32 created_start = 8;
    // 创建结束时间
    uint32 created_end = 9;
}

message TransactionListReply {
    repeated Transaction transactions = 1;
    // 页号
    uint32 page_no = 2;
    // 页面大小
    uint32 page_size = 3;
    // 总页数
    uint32 total_page = 4;
    // 总记录数
    uint32 total_count = 5;
}

message CreateSettleRequest {
    // 区域id
    uint32 area_id = 1;
    // 结算时间
    uint32 settle_at = 2;
    // 最小余额，低于该余额不结算
    uint32 min_balance = 3;
}

message SubmitSettleRequest {
    // 区域id
    uint32 area_id = 1;
    // 结算记录
    repeated SettleRecord records = 2;
}

message SettleProgressRequest {
    // 区域id
    uint32 area_id = 1;
}

message SettleProgressReply {
    // 结算进度，10000表示100%
    uint32 progress = 1;
}

message SettleListRequest {
    // 区域id
    uint32 area_id = 1;
    // 工会id
    uint32 guild_id = 2;
    // 主播id
    uint32 anchor_id = 3;
    // 结算时间
    uint32 settle_at = 4;
    // 结算状态
    SettleStatus status = 5;
}

message SettleListReply {
    repeated SettleRecord records = 1;
}

message AppListRequest {
    // 区域id
    uint32 area_id = 1;
}

message AppListReply {
    repeated App apps = 1;
}

message VersionListRequest {
    // 应用id
    uint32 app_id = 1;
}

message VersionListReply {
    repeated Version versions = 1;
}

message AreaConfigListRequest {
    // 区域id
    uint32 area_id = 1;
    // 应用id
    uint32 app_id = 2;
}

message AreaConfigListReply {
    repeated AreaConfig configs = 1;
}

message CountryConfigListRequest {
    // 区域id
    uint32 area_id = 1;
}

message CountryConfigListReply {
    repeated CountryConfig configs = 1;
}

message PayChannelListRequest {
    // 区域id
    uint32 area_id = 1;
    // 支付方式
    PayType pay_type = 2;
}

message PayChannelListReply {
    repeated PayChannel channels = 1;
}

message PayConfigListRequest {
    // 区域id
    uint32 area_id = 1;
}

message PayConfigListReply {
    repeated PayConfig configs = 1;
}

message CommodityListRequest {
    // 区域id
    uint32 area_id = 1;
    // 应用id
    uint32 app_id = 2;
    // 是否为订阅
    bool is_subscription = 3;
}

message CommodityListReply {
    repeated Commodity commodities = 1;
}

message AgoraKeyRequest {
    uint64 call_id = 1;
    uint32 user_id = 2;
}

message AgoraKeyReply {
    string key = 1;
}

message AdminFileChunk {
    // 偏移，必须连续
    uint32 offset = 1;
    // 文件名，为空时自动生成
    string filename = 2;
    // 文件类型
    FileType type = 3;
    // 文件内容，单个分片大小不要大于8MB
    bytes content = 4;
    // 区域id，必选
    uint32 area_id = 5;
}
