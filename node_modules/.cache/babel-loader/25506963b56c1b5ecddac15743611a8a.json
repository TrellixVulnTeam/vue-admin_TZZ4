{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/components/Charts/ChartsBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/components/Charts/ChartsBar.vue","mtime":1633671106779},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKLy8KLy8KLy8KLy8KaW1wb3J0IGVjaGFydHMgZnJvbSAnZWNoYXJ0cyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ2hhcnRzQmFyJywKICBwcm9wczogewogICAgZGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkge30KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkb206IG51bGwKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgY29uc29sZS5sb2coIuWIneWni+WMli4uLi4iKTsKICAgIHRoaXMuZHJhd2luZygpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnJlc2l6ZSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXNpemU6IGZ1bmN0aW9uIHJlc2l6ZSgpIHsKICAgICAgdGhpcy5kb20ucmVzaXplKCk7CiAgICB9LAogICAgZHJhd2luZzogZnVuY3Rpb24gZHJhd2luZygpIHsKICAgICAgdmFyIHRpdGxlID0gdGhpcy5kYXRhLnRpdGxlOwogICAgICB2YXIgbGVnZW5kRGF0YSA9IHRoaXMuZGF0YS5sZWdlbmQ7CiAgICAgIHZhciB4QXhpc0RhdGEgPSB0aGlzLmRhdGEuZGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS50aXRsZTsKICAgICAgfSk7CiAgICAgIHZhciBzZXJpZXNEYXRhMSA9IHRoaXMuZGF0YS5kYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLnZhbDE7CiAgICAgIH0pOwogICAgICB2YXIgc2VyaWVzRGF0YTIgPSB0aGlzLmRhdGEuZGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS52YWwyOwogICAgICB9KTsKICAgICAgdmFyIHNlcmllc0RhdGEzID0gdGhpcy5kYXRhLmRhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0udmFsMzsKICAgICAgfSk7CiAgICAgIHZhciBvcHRpb25zID0gewogICAgICAgIC8vIOagh+mimAogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiB0aXRsZSwKICAgICAgICAgIHRvcDogMTUKICAgICAgICB9LAogICAgICAgIC8vIOW3peWFt+aPkOekugogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICdzaGFkb3cnCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICBmZWF0dXJlOiB7CiAgICAgICAgICAgIGRhdGFWaWV3OiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICByZWFkT25seTogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbWFnaWNUeXBlOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICB0eXBlOiBbJ2xpbmUnLCAnYmFyJ10KICAgICAgICAgICAgfSwKICAgICAgICAgICAgcmVzdG9yZTogewogICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgdG9wOiA1LAogICAgICAgICAgZGF0YTogbGVnZW5kRGF0YQogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogJzMlJywKICAgICAgICAgIHJpZ2h0OiAnNCUnLAogICAgICAgICAgYm90dG9tOiAnMyUnLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB4QXhpczogW3sKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBkYXRhOiB4QXhpc0RhdGEsCiAgICAgICAgICBheGlzVGljazogewogICAgICAgICAgICBhbGlnbldpdGhMYWJlbDogdHJ1ZQogICAgICAgICAgfQogICAgICAgIH1dLAogICAgICAgIHlBeGlzOiBbewogICAgICAgICAgdHlwZTogJ3ZhbHVlJywKICAgICAgICAgIG1heDogZnVuY3Rpb24gbWF4KHZhbHVlKSB7CiAgICAgICAgICAgIHJldHVybiBNYXRoLmNlaWwodmFsdWUubWF4IC8gMTAwKSAqIDEwMCArIDMwMDsKICAgICAgICAgIH0KICAgICAgICB9XSwKICAgICAgICAvLyDpopzoibLphY3nva4KICAgICAgICBjb2xvcjogWycjMmQ4Y2YwJ10sCiAgICAgICAgLy8g57G75Z6L6YWN572uCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogbGVnZW5kRGF0YVswXSwKICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgc3RhY2s6ICd0b3RhbCcsCiAgICAgICAgICBjb2xvcjogJyMyZDhjZjAnLAogICAgICAgICAgYmFyV2lkdGg6ICc0MCUnLAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgIGZvY3VzOiAnc2VyaWVzJwogICAgICAgICAgfSwKICAgICAgICAgIGRhdGE6IHNlcmllc0RhdGExCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogbGVnZW5kRGF0YVsxXSwKICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgc3RhY2s6ICd0b3RhbCcsCiAgICAgICAgICBjb2xvcjogJyMxOWJlNmInLAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgIGZvY3VzOiAnc2VyaWVzJwogICAgICAgICAgfSwKICAgICAgICAgIGRhdGE6IHNlcmllc0RhdGEyCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogbGVnZW5kRGF0YVsyXSwKICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgc3RhY2s6ICd0b3RhbCcsCiAgICAgICAgICBjb2xvcjogJyNmZjk5MDAnLAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgIGZvY3VzOiAnc2VyaWVzJwogICAgICAgICAgfSwKICAgICAgICAgIGRhdGE6IHNlcmllc0RhdGEzCiAgICAgICAgfV0KICAgICAgfTsKICAgICAgdGhpcy5kb20gPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5kb20pOwogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5yZXNpemUpOwogICAgfSwKICAgIHNldE9wdGlvbjogZnVuY3Rpb24gc2V0T3B0aW9uKCkgewogICAgICB0aGlzLmRvbS5zZXRPcHRpb24ob3B0aW9ucywgdHJ1ZSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ChartsBar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div ref=\"dom\" class=\"charts-bar\"/>\n</template>\n\n<script>\nimport echarts from 'echarts'\n\nexport default {\n    name: 'ChartsBar',\n    props: {\n        data: {\n            type: Object,\n            default: () => {\n            }\n        }\n    },\n    data() {\n        return {\n            dom: null\n        }\n    },\n    mounted() {\n        console.log(\"初始化....\")\n        this.drawing()\n    },\n    beforeDestroy() {\n        window.removeEventListener('resize', this.resize)\n    },\n    methods: {\n        resize() {\n            this.dom.resize()\n        },\n        drawing() {\n            const title = this.data.title\n            const legendData = this.data.legend\n            const xAxisData = this.data.data.map(item => item.title)\n            const seriesData1 = this.data.data.map(item => item.val1)\n            const seriesData2 = this.data.data.map(item => item.val2)\n            const seriesData3 = this.data.data.map(item => item.val3)\n            const options = {\n                // 标题\n                title: {\n                    text: title,\n                    top: 15\n                },\n                // 工具提示\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'shadow'\n                    }\n                },\n                toolbox: {\n                    feature: {\n                        dataView: {show: true, readOnly: false},\n                        magicType: {show: true, type: ['line', 'bar']},\n                        restore: {show: true},\n                        saveAsImage: {show: true}\n                    }\n                },\n                legend: {\n                    top: 5,\n                    data: legendData\n                },\n                grid: {\n                    left: '3%',\n                    right: '4%',\n                    bottom: '3%',\n                    containLabel: true\n                },\n                xAxis: [\n                    {\n                        type: 'category',\n                        data: xAxisData,\n                        axisTick: {\n                            alignWithLabel: true\n                        }\n                    }\n                ],\n                yAxis: [\n                    {\n                        type: 'value',\n                        max: value => {\n                            return Math.ceil(value.max / 100) * 100 + 300\n                        }\n                    }\n                ],\n                // 颜色配置\n                color: ['#2d8cf0'],\n                // 类型配置\n                series: [\n                    {\n                        name: legendData[0],\n                        type: 'bar',\n                        stack: 'total',\n                        color: '#2d8cf0',\n                        barWidth: '40%',\n                        label: {\n                            show: true\n                        },\n                        emphasis: {\n                            focus: 'series'\n                        },\n                        data: seriesData1\n                    },\n                    {\n                        name: legendData[1],\n                        type: 'bar',\n                        stack: 'total',\n                        color: '#19be6b',\n                        label: {\n                            show: true\n                        },\n                        emphasis: {\n                            focus: 'series'\n                        },\n                        data: seriesData2\n                    },\n                    {\n                        name: legendData[2],\n                        type: 'bar',\n                        stack: 'total',\n                        color: '#ff9900',\n                        label: {\n                            show: true\n                        },\n                        emphasis: {\n                            focus: 'series'\n                        },\n                        data: seriesData3\n                    }\n                ]\n            }\n            this.dom = echarts.init(this.$refs.dom)\n            window.addEventListener('resize', this.resize)\n        },\n        setOption(){\n            this.dom.setOption(options, true)\n        }\n    }\n}\n</script>\n"],"sourceRoot":"src/components/Charts"}]}