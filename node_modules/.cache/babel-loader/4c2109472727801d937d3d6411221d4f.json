{"remainingRequest":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js!/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/eslint-loader/index.js??ref--13-0!/home/mengy/Documents/iwork/kafo/vue-admin-design/src/proto/hello/hello_pb.js","dependencies":[{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/src/proto/hello/hello_pb.js","mtime":1625132836198},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/mengy/Documents/iwork/kafo/vue-admin-design/src/proto/hello/hello_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","pb","HelloRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","SonReply","HelloReply","repeatedFields_","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","name","getFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setName","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getName","length","writeString","setProto3StringField","setMessage","getMessage","son","getSon","sonsList","toObjectList","getSonsList","readMessage","setSon","addSons","writeMessage","writeRepeatedMessage","getWrapperField","setWrapperField","clearSon","hasSon","getField","getRepeatedWrapperField","setSonsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearSonsList","object","extend","exports"],"mappings":"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","sourcesContent":["// source: hello.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.pb.HelloReply', null, global);\ngoog.exportSymbol('proto.pb.HelloRequest', null, global);\ngoog.exportSymbol('proto.pb.SonReply', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.pb.HelloRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.pb.HelloRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.pb.HelloRequest.displayName = 'proto.pb.HelloRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.pb.SonReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.pb.SonReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.pb.SonReply.displayName = 'proto.pb.SonReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.pb.HelloReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.HelloReply.repeatedFields_, null);\n};\ngoog.inherits(proto.pb.HelloReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.pb.HelloReply.displayName = 'proto.pb.HelloReply';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.pb.HelloRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.pb.HelloRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.pb.HelloRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.pb.HelloRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.pb.HelloRequest}\n */\nproto.pb.HelloRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.pb.HelloRequest;\n  return proto.pb.HelloRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.pb.HelloRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.pb.HelloRequest}\n */\nproto.pb.HelloRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.pb.HelloRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.pb.HelloRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.pb.HelloRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.pb.HelloRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.pb.HelloRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.pb.HelloRequest} returns this\n */\nproto.pb.HelloRequest.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.pb.SonReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.pb.SonReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.pb.SonReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.pb.SonReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.pb.SonReply}\n */\nproto.pb.SonReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.pb.SonReply;\n  return proto.pb.SonReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.pb.SonReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.pb.SonReply}\n */\nproto.pb.SonReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.pb.SonReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.pb.SonReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.pb.SonReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.pb.SonReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message = 1;\n * @return {string}\n */\nproto.pb.SonReply.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.pb.SonReply} returns this\n */\nproto.pb.SonReply.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.pb.HelloReply.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.pb.HelloReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.pb.HelloReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.pb.HelloReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.pb.HelloReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    son: (f = msg.getSon()) && proto.pb.SonReply.toObject(includeInstance, f),\n    sonsList: jspb.Message.toObjectList(msg.getSonsList(),\n    proto.pb.SonReply.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.pb.HelloReply}\n */\nproto.pb.HelloReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.pb.HelloReply;\n  return proto.pb.HelloReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.pb.HelloReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.pb.HelloReply}\n */\nproto.pb.HelloReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 2:\n      var value = new proto.pb.SonReply;\n      reader.readMessage(value,proto.pb.SonReply.deserializeBinaryFromReader);\n      msg.setSon(value);\n      break;\n    case 3:\n      var value = new proto.pb.SonReply;\n      reader.readMessage(value,proto.pb.SonReply.deserializeBinaryFromReader);\n      msg.addSons(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.pb.HelloReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.pb.HelloReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.pb.HelloReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.pb.HelloReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getSon();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.pb.SonReply.serializeBinaryToWriter\n    );\n  }\n  f = message.getSonsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.pb.SonReply.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string message = 1;\n * @return {string}\n */\nproto.pb.HelloReply.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.pb.HelloReply} returns this\n */\nproto.pb.HelloReply.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional SonReply son = 2;\n * @return {?proto.pb.SonReply}\n */\nproto.pb.HelloReply.prototype.getSon = function() {\n  return /** @type{?proto.pb.SonReply} */ (\n    jspb.Message.getWrapperField(this, proto.pb.SonReply, 2));\n};\n\n\n/**\n * @param {?proto.pb.SonReply|undefined} value\n * @return {!proto.pb.HelloReply} returns this\n*/\nproto.pb.HelloReply.prototype.setSon = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.pb.HelloReply} returns this\n */\nproto.pb.HelloReply.prototype.clearSon = function() {\n  return this.setSon(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.pb.HelloReply.prototype.hasSon = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated SonReply sons = 3;\n * @return {!Array<!proto.pb.SonReply>}\n */\nproto.pb.HelloReply.prototype.getSonsList = function() {\n  return /** @type{!Array<!proto.pb.SonReply>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.pb.SonReply, 3));\n};\n\n\n/**\n * @param {!Array<!proto.pb.SonReply>} value\n * @return {!proto.pb.HelloReply} returns this\n*/\nproto.pb.HelloReply.prototype.setSonsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.pb.SonReply=} opt_value\n * @param {number=} opt_index\n * @return {!proto.pb.SonReply}\n */\nproto.pb.HelloReply.prototype.addSons = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.pb.SonReply, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.pb.HelloReply} returns this\n */\nproto.pb.HelloReply.prototype.clearSonsList = function() {\n  return this.setSonsList([]);\n};\n\n\ngoog.object.extend(exports, proto.pb);\n"]}]}