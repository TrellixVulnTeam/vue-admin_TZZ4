{"remainingRequest":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js!/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/eslint-loader/index.js??ref--13-0!/home/mengy/Documents/iwork/kafo/vue-admin-design/src/router/auth.js","dependencies":[{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/src/router/auth.js","mtime":1624500048821},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9tZW5neS9Eb2N1bWVudHMvaXdvcmsva2Fmby92dWUtYWRtaW4tZGVzaWduL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzIik7Cgp2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL2luZGV4IikpOwoKdmFyIF9jb29raWUgPSByZXF1aXJlKCIuLi91dGlscy9jb29raWUiKTsKCi8vIOeZveWQjeWNleWIl+ihqAp2YXIgd2hpdGVMaXN0ID0gWycvbG9naW4nXTsKCl9pbmRleC5kZWZhdWx0LmJlZm9yZUVhY2goZnVuY3Rpb24gKHRvLCBmcm9tLCBuZXh0KSB7CiAgaWYgKCgwLCBfY29va2llLmdldFRva2VuKSgpKSB7CiAgICAvLyDlt7LnmbvlvZXkuJTopoHot7PovaznmoTmmK/nmbvlvZXpobUKICAgIGlmICh0by5wYXRoID09PSAnL2xvZ2luJykgewogICAgICBuZXh0KHsKICAgICAgICBwYXRoOiAnLycKICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICBuZXh0KCk7CiAgICB9CiAgfSBlbHNlIHsKICAgIC8vIOWcqOWFjeeZu+W9leeZveWQjeWNle+8jOebtOaOpei/m+WFpQogICAgaWYgKHdoaXRlTGlzdC5pbmNsdWRlcyh0by5wYXRoKSkgewogICAgICBuZXh0KCk7CiAgICB9IGVsc2UgewogICAgICAvLyDlkKbliJnph43lrprlkJHliLDnmbvlvZXpobUKICAgICAgbmV4dCgiL2xvZ2luP3JlZGlyZWN0PSIuY29uY2F0KHRvLmZ1bGxQYXRoKSk7CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["/home/mengy/Documents/iwork/kafo/vue-admin-design/src/router/auth.js"],"names":["whiteList","router","beforeEach","to","from","next","path","includes","fullPath"],"mappings":";;;;;;AAAA;;AACA;;AAEA;AACA,IAAMA,SAAS,GAAG,CAAC,QAAD,CAAlB;;AAEAC,eAAOC,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC,MAAI,uBAAJ,EAAgB;AACd;AACA,QAAIF,EAAE,CAACG,IAAH,KAAY,QAAhB,EAA0B;AACxBD,MAAAA,IAAI,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAJ;AACD,KAFD,MAEO;AACLD,MAAAA,IAAI;AACL;AACF,GAPD,MAOO;AACL;AACA,QAAIL,SAAS,CAACO,QAAV,CAAmBJ,EAAE,CAACG,IAAtB,CAAJ,EAAiC;AAC/BD,MAAAA,IAAI;AACL,KAFD,MAEO;AACL;AACAA,MAAAA,IAAI,2BAAoBF,EAAE,CAACK,QAAvB,EAAJ;AACD;AACF;AACF,CAjBD","sourcesContent":["import router from './index'\nimport { getToken } from '../utils/cookie'\n\n// 白名单列表\nconst whiteList = ['/login']\n\nrouter.beforeEach((to, from, next) => {\n  if (getToken()) {\n    // 已登录且要跳转的是登录页\n    if (to.path === '/login') {\n      next({ path: '/' })\n    } else {\n      next()\n    }\n  } else {\n    // 在免登录白名单，直接进入\n    if (whiteList.includes(to.path)) {\n      next()\n    } else {\n      // 否则重定向到登录页\n      next(`/login?redirect=${to.fullPath}`)\n    }\n  }\n})\n"]}]}