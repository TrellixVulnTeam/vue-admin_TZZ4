{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js??ref--13-0!/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/home.js","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/home.js","mtime":1634206935107},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/home.js"],"names":["setToken","getToken","error","deps","proto","client","CmsClient","process","env","VUE_APP_GRPC_PROXY_URI","param","callback","req","OverviewRequest","setAreaId","areaId","setStartAt","startAt","setEndAt","endAt","metadata","getOverview","err","resp","HomeStatRequest","getHomeStat","AreaStatRequest","getAreaStat","AnchorStatRequest","setPageNo","page","currentPage","setPageSize","pageSize","setLevel","level","setAnchorId","anchorId","setStatAt","statAt","getAnchorStat","UserStatRequest","setAppId","appId","setInterval","interval","getUserStat"],"mappings":"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","sourcesContent":["import {setToken, getToken} from '@/utils/cookie'\nimport { error } from '@/utils/error'\n\nexport default class {\n    constructor (deps) {\n        this.proto = deps.proto\n        this.client = new deps.proto.CmsClient(process.env.VUE_APP_GRPC_PROXY_URI, null, null)\n    }\n\n    // 统计数据\n    async getOverview (param, callback) {\n        let req = new this.proto.OverviewRequest();\n        req.setAreaId(param.areaId)\n        req.setStartAt(param.startAt)\n        req.setEndAt(param.endAt)\n\n        const metadata = {'token': getToken()};\n        this.client.getOverview(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 图形统计数据\n    async getHomeStat (param, callback) {\n        let req = new this.proto.HomeStatRequest();\n        req.setAreaId(param.areaId)\n        req.setStartAt(param.startAt)\n        req.setEndAt(param.endAt)\n\n        const metadata = {'token': getToken()};\n        this.client.getHomeStat(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 实时通话/实时营收\n    async getAreaStat (param, callback) {\n        let req = new this.proto.AreaStatRequest();\n        req.setAreaId(param.areaId)\n        req.setStartAt(param.startAt)\n        req.setEndAt(param.endAt)\n\n        const metadata = {'token': getToken()};\n        this.client.getAreaStat(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n    // 主播统计\n    async getAnchorStat (param, callback) {\n        let req = new this.proto.AnchorStatRequest();\n        req.setPageNo(param.page.currentPage)\n        req.setPageSize(param.page.pageSize)\n        req.setAreaId(param.areaId)\n        req.setLevel(param.level)\n        req.setAnchorId(param.anchorId)\n        req.setStatAt(param.statAt)\n\n        const metadata = {'token': getToken()};\n        this.client.getAnchorStat(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 获取用户统计数据\n    async getUserStat (param, callback) {\n        let req = new this.proto.UserStatRequest();\n        req.setStartAt(param.startAt)\n        req.setEndAt(param.endAt)\n        req.setAreaId(param.areaId)\n        req.setAppId(param.appId)\n        req.setInterval(param.interval)\n\n        const metadata = {'token': getToken()};\n        this.client.getUserStat(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n}\n"]}]}