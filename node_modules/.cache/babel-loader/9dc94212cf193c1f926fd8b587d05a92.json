{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin-design/src/views/tree/EleTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/src/views/tree/EleTree.vue","mtime":1624500048824},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9tZW5neS9kZXZlbG9wL2l3b3JrL2thZm8vdnVlLWFkbWluLWRlc2lnbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwoKdmFyIF9IaW50cyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vLi4vY29tcG9uZW50cy9IaW50cyIpKTsKCnZhciBfZGF0YSA9IHJlcXVpcmUoIi4vZGF0YSIpOwoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIF9kZWZhdWx0ID0gewogIG5hbWU6ICdFbGVUcmVlJywKICBjb21wb25lbnRzOiB7CiAgICBIaW50czogX0hpbnRzLmRlZmF1bHQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0cmVlRGF0YTogX2RhdGEudHJlZURhdGEsCiAgICAgIHByb3BzOiB7CiAgICAgICAgbGFiZWw6ICduYW1lJywKICAgICAgICBjaGlsZHJlbjogJ3pvbmVzJywKICAgICAgICBpc0xlYWY6ICdsZWFmJwogICAgICB9LAogICAgICBkZWZhdWx0UHJvcHM6IHsKICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJywKICAgICAgICBsYWJlbDogJ2xhYmVsJwogICAgICB9LAogICAgICBjb3VudDogMQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWROb2RlOiBmdW5jdGlvbiBsb2FkTm9kZShub2RlLCByZXNvbHZlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAobm9kZS5sZXZlbCA9PT0gMCkgewogICAgICAgIHJldHVybiByZXNvbHZlKFt7CiAgICAgICAgICBuYW1lOiAncmVnaW9uMScKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAncmVnaW9uMicKICAgICAgICB9XSk7CiAgICAgIH0KCiAgICAgIGlmIChub2RlLmxldmVsID4gMikgcmV0dXJuIHJlc29sdmUoW10pOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgZGF0YSA9IFt7CiAgICAgICAgICBuYW1lOiAnem9uZScgKyBfdGhpcy5jb3VudCsrLAogICAgICAgICAgbGVhZjogdHJ1ZQogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICd6b25lJyArIF90aGlzLmNvdW50KysKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAnem9uZScgKyBfdGhpcy5jb3VudCsrLAogICAgICAgICAgbGVhZjogdHJ1ZQogICAgICAgIH1dOwogICAgICAgIHJlc29sdmUoZGF0YSk7CiAgICAgIH0sIDUwMCk7CiAgICB9LAogICAgaGFuZGxlQ2hlY2tDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUNoZWNrQ2hhbmdlKGRhdGEsIGNoZWNrZWQsIGluZGV0ZXJtaW5hdGUpIHsKICAgICAgY29uc29sZS5sb2coZGF0YSwgY2hlY2tlZCwgaW5kZXRlcm1pbmF0ZSk7CiAgICB9CiAgfQp9OwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"sources":["EleTree.vue"],"names":[],"mappings":";;;;;;;;;AA2DA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,cADA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,QAAA,EAAA,OAFA;AAGA,QAAA,MAAA,EAAA;AAHA,OAFA;AAOA,MAAA,YAAA,EAAA;AACA,QAAA,QAAA,EAAA,UADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAPA;AAWA,MAAA,KAAA,EAAA;AAXA,KAAA;AAaA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA,OADA,EACA;AAAA;;AACA,UAAA,IAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AACA,eAAA,OAAA,CAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,CAAA,CAAA;AACA;;AACA,UAAA,IAAA,CAAA,KAAA,GAAA,CAAA,EAAA,OAAA,OAAA,CAAA,EAAA,CAAA;AAEA,MAAA,UAAA,CAAA,YAAA;AACA,YAAA,IAAA,GAAA,CAAA;AACA,UAAA,IAAA,EAAA,SAAA,KAAA,CAAA,KAAA,EADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA,EAGA;AACA,UAAA,IAAA,EAAA,SAAA,KAAA,CAAA,KAAA;AADA,SAHA,EAKA;AACA,UAAA,IAAA,EAAA,SAAA,KAAA,CAAA,KAAA,EADA;AAEA,UAAA,IAAA,EAAA;AAFA,SALA,CAAA;AAUA,QAAA,OAAA,CAAA,IAAA,CAAA;AACA,OAZA,EAYA,GAZA,CAAA;AAaA,KApBA;AAqBA,IAAA,iBArBA,6BAqBA,IArBA,EAqBA,OArBA,EAqBA,aArBA,EAqBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EAAA,OAAA,EAAA,aAAA;AACA;AAvBA;AAlBA,C","sourcesContent":["<template>\n  <div class=\"ele-tree-wrapper\">\n    <Hints>\n      <template slot=\"hintName\">Tree树形控件</template>\n      <template slot=\"hintInfo\">\n        <p>element-tree：基于elementUI的Tree组件，可用于清晰的层级结构展示信息，并能展开或折叠</p>\n        <p>地址：访问 <el-link type=\"success\" href=\"https://element.eleme.cn/#/zh-CN/component/tree\" target=\"_blank\">element-tree</el-link></p>\n      </template>\n    </Hints>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"8\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">可选择节点</div>\n          <div style=\"height: 360px;\">\n            <el-tree\n              :data=\"treeData\"\n              node-key=\"id\"\n              show-checkbox\n              default-expand-all\n              :default-checked-keys=\"[5]\"\n              :props=\"defaultProps\"\n              @check-change=\"handleCheckChange\"\n            />\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">懒加载节点</div>\n          <div style=\"height: 360px;\">\n            <el-tree\n              :props=\"props\"\n              :load=\"loadNode\"\n              lazy\n              show-checkbox\n              @check-change=\"handleCheckChange\"\n            />\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">可拖拽节点</div>\n          <div style=\"height: 360px;\">\n            <el-tree\n              :data=\"treeData\"\n              node-key=\"id\"\n              default-expand-all\n              :props=\"defaultProps\"\n              draggable\n            />\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport Hints from '../../components/Hints'\nimport { treeData } from './data'\n\nexport default {\n  name: 'EleTree',\n  components: { Hints },\n  data() {\n    return {\n      treeData,\n      props: {\n        label: 'name',\n        children: 'zones',\n        isLeaf: 'leaf'\n      },\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      count: 1\n    }\n  },\n  methods: {\n    loadNode(node, resolve) {\n      if (node.level === 0) {\n        return resolve([{ name: 'region1' }, { name: 'region2' }])\n      }\n      if (node.level > 2) return resolve([])\n\n      setTimeout(() => {\n        const data = [{\n          name: 'zone' + this.count++,\n          leaf: true\n        }, {\n          name: 'zone' + this.count++\n        }, {\n          name: 'zone' + this.count++,\n          leaf: true\n        }]\n\n        resolve(data)\n      }, 500)\n    },\n    handleCheckChange(data, checked, indeterminate) {\n      console.log(data, checked, indeterminate)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/tree"}]}