{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-manage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-manage/src/views/image/ImageCropper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-manage/src/views/image/ImageCropper.vue","mtime":1626074721762},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9tZW5neS9kZXZlbG9wL2l3b3JrL2thZm8vdnVlLW1hbmFnZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwiKTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwoKdmFyIF92dWVDcm9wcGVyID0gcmVxdWlyZSgidnVlLWNyb3BwZXIiKTsKCnZhciBfSGludHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4uLy4uL2NvbXBvbmVudHMvSGludHMiKSk7Cgp2YXIgX1VwbG9hZEltYWdlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuLi8uLi9jb21wb25lbnRzL1VwbG9hZEltYWdlIikpOwoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIF9kZWZhdWx0ID0gewogIG5hbWU6ICdJbWFnZUNyb3BwZXInLAogIGNvbXBvbmVudHM6IHsKICAgIEhpbnRzOiBfSGludHMuZGVmYXVsdCwKICAgIFZ1ZUNyb3BwZXI6IF92dWVDcm9wcGVyLlZ1ZUNyb3BwZXIsCiAgICBVcGxvYWRJbWFnZTogX1VwbG9hZEltYWdlLmRlZmF1bHQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb25maWdPYmo6IHsKICAgICAgICBpbWdTcmM6ICdodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvZ2gvYmFpbWluZ3h1YW4vbWVkaWEtc3RvcmUvaW1hZ2VzL2ltZzAyLmpwZycsCiAgICAgICAgY2FuTW92ZTogZmFsc2UsCiAgICAgICAgYXV0b0Nyb3A6IHRydWUsCiAgICAgICAgY2VudGVyQm94OiB0cnVlLAogICAgICAgIGluZm9UcnVlOiB0cnVlLAogICAgICAgIGZ1bGw6IHRydWUsCiAgICAgICAgYXV0b0Nyb3BXaWR0aDogMzAwLAogICAgICAgIGF1dG9Dcm9wSGVpZ2h0OiAyMDAsCiAgICAgICAgb3V0cHV0VHlwZTogJ3BuZycKICAgICAgfSwKICAgICAgZG93bkltZzogJyMnLAogICAgICBwcmV2aWV3czoge30KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVTdWNjZXNzOiBmdW5jdGlvbiBoYW5kbGVTdWNjZXNzKGRhdGEpIHsKICAgICAgdGhpcy5jb25maWdPYmouaW1nU3JjID0gZGF0YTsKICAgIH0sCiAgICByZWFsVGltZTogZnVuY3Rpb24gcmVhbFRpbWUoZGF0YSkgewogICAgICB0aGlzLnByZXZpZXdzID0gZGF0YTsKICAgIH0sCiAgICBkb3dubG9hZEltYWdlOiBmdW5jdGlvbiBkb3dubG9hZEltYWdlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kcmVmcy5jcm9wcGVyLmdldENyb3BCbG9iKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgX3RoaXMuZG93bkltZyA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGRhdGEpOwoKICAgICAgICBpZiAod2luZG93Lm5hdmlnYXRvci5tc1NhdmVCbG9iKSB7CiAgICAgICAgICB2YXIgYmxvYk9iamVjdCA9IG5ldyBCbG9iKFtkYXRhXSk7CiAgICAgICAgICB3aW5kb3cubmF2aWdhdG9yLm1zU2F2ZUJsb2IoYmxvYk9iamVjdCwgJ2RlbW8ucG5nJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLiRyZWZzLmRvd25sb2FkRG9tLmNsaWNrKCk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},{"version":3,"sources":["ImageCropper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAAA,cAAA;AAAA,IAAA,UAAA,EAAA,sBAAA;AAAA,IAAA,WAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,MAAA,EAAA,sEADA;AAEA,QAAA,OAAA,EAAA,KAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,SAAA,EAAA,IAJA;AAKA,QAAA,QAAA,EAAA,IALA;AAMA,QAAA,IAAA,EAAA,IANA;AAOA,QAAA,aAAA,EAAA,GAPA;AAQA,QAAA,cAAA,EAAA,GARA;AASA,QAAA,UAAA,EAAA;AATA,OADA;AAYA,MAAA,OAAA,EAAA,GAZA;AAaA,MAAA,QAAA,EAAA;AAbA,KAAA;AAeA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,IADA,EACA;AACA,WAAA,SAAA,CAAA,MAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,QAJA,oBAIA,IAJA,EAIA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,KANA;AAOA,IAAA,aAPA,2BAOA;AAAA;;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,WAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,MAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA;;AACA,YAAA,MAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AACA,cAAA,UAAA,GAAA,IAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,UAAA,MAAA,CAAA,SAAA,CAAA,UAAA,CAAA,UAAA,EAAA,UAAA;AACA,SAHA,MAGA;AACA,UAAA,KAAA,CAAA,SAAA,CAAA,YAAA;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,WAAA,CAAA,KAAA;AACA,WAFA;AAGA;AACA,OAVA;AAWA;AAnBA;AApBA,C","sourcesContent":["<template>\n    <div class=\"image-cropper-wrapper\">\n        <Hints>\n            <template slot=\"hintName\">图片裁剪插件</template>\n            <template slot=\"hintInfo\">\n                <p>Vue-Cropper：一个优雅的图片裁剪插件，可实现图片裁剪、图片生成等功能，并支持生成png、jpeg、webp等图片格式</p>\n                <p>github地址：访问\n                    <el-link type=\"success\" href=\"https://github.com/xyxiao001/vue-cropper\" target=\"_blank\">\n                        Vue-Cropper\n                    </el-link>\n                </p>\n            </template>\n        </Hints>\n        <el-row :gutter=\"20\">\n            <el-col :span=\"10\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">裁剪区域</div>\n                    <div class=\"content-box\" style=\" height: 400px;\">\n                        <VueCropper\n                            ref=\"cropper\"\n                            :img=\"configObj.imgSrc\"\n                            :can-move=\"configObj.canMove\"\n                            :auto-crop=\"configObj.autoCrop\"\n                            :center-box=\"configObj.centerBox\"\n                            :info-true=\"configObj.infoTrue\"\n                            :full=\"configObj.full\"\n                            :auto-crop-width=\"configObj.autoCropWidth\"\n                            :auto-crop-height=\"configObj.autoCropHeight\"\n                            :output-type=\"configObj.outputType\"\n                            @realTime=\"realTime\"\n                        />\n                    </div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"4\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">设置区域</div>\n                    <div class=\"content-box\" style=\" height: 400px;\">\n                        <div style=\"height: 100px;\">\n                            <UploadImage @on-success=\"handleSuccess\"/>\n                            <el-button size=\"small\" type=\"primary\" style=\"margin-top: 20px\">\n                                <a @click=\"downloadImage\">生成图片</a>\n                            </el-button>\n                            <a ref=\"downloadDom\" :href=\"downImg\" download=\"demo.png\"/>\n                        </div>\n                    </div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"10\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">预览区域</div>\n                    <div class=\"content-box\" style=\"height: 400px;\">\n                        <div class=\"show-preview\"\n                             :style=\"{'width': previews.w + 'px', 'height': previews.h + 'px', 'overflow': 'hidden', 'zoom': (400 / previews.h)}\">\n                            <div :style=\"previews.div\">\n                                <img :src=\"previews.url\" :style=\"previews.img\" alt=\"预览\">\n                            </div>\n                        </div>\n                    </div>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport {VueCropper} from 'vue-cropper'\nimport Hints from '../../components/Hints'\nimport UploadImage from '../../components/UploadImage'\n\nexport default {\n    name: 'ImageCropper',\n    components: {Hints, VueCropper, UploadImage},\n    data() {\n        return {\n            configObj: {\n                imgSrc: 'https://cdn.jsdelivr.net/gh/baimingxuan/media-store/images/img02.jpg',\n                canMove: false,\n                autoCrop: true,\n                centerBox: true,\n                infoTrue: true,\n                full: true,\n                autoCropWidth: 300,\n                autoCropHeight: 200,\n                outputType: 'png'\n            },\n            downImg: '#',\n            previews: {}\n        }\n    },\n    methods: {\n        handleSuccess(data) {\n            this.configObj.imgSrc = data\n        },\n        realTime(data) {\n            this.previews = data\n        },\n        downloadImage() {\n            this.$refs.cropper.getCropBlob(data => {\n                this.downImg = window.URL.createObjectURL(data)\n                if (window.navigator.msSaveBlob) {\n                    const blobObject = new Blob([data])\n                    window.navigator.msSaveBlob(blobObject, 'demo.png')\n                } else {\n                    this.$nextTick(() => {\n                        this.$refs.downloadDom.click()\n                    })\n                }\n            })\n        }\n    }\n}\n</script>\n"],"sourceRoot":"src/views/image"}]}