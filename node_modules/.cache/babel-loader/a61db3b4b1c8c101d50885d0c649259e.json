{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/eslint-loader/index.js??ref--13-0!/home/mengy/develop/iwork/kafo/vue-admin-design/src/utils/excel.js","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/src/utils/excel.js","mtime":1624500048821},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9tZW5neS9kZXZlbG9wL2l3b3JrL2thZm8vdnVlLWFkbWluLWRlc2lnbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS1idWZmZXIuY29uc3RydWN0b3IiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQ4LWFycmF5Iik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW4iKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeSIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGwiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXIiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZiIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pbiIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2YiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXAiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHQiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0Iik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2UiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5Iik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZyIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmV4cG9ydERhdGFUb0V4Y2VsID0gZXhwb3J0RGF0YVRvRXhjZWw7CmV4cG9ydHMucmVhZERhdGFGcm9tRXhjZWwgPSByZWFkRGF0YUZyb21FeGNlbDsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwoKdmFyIF94bHN4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJ4bHN4IikpOwoKdmFyIF9maWxlU2F2ZXIgPSByZXF1aXJlKCJmaWxlLXNhdmVyIik7CgovLyDoh6rliqjlrr3luqborqHnrpcKZnVuY3Rpb24gQXV0b1dpZHRoKHdzLCBhcnIpIHsKICAvLyDorr7nva53b3Jrc2hlZXTmr4/liJfnmoTmnIDlpKflrr3luqYKICB2YXIgY29sV2lkdGggPSBhcnIubWFwKGZ1bmN0aW9uIChyb3cpIHsKICAgIHJldHVybiByb3cubWFwKGZ1bmN0aW9uICh2YWwpIHsKICAgICAgLy8g5Yik5pat5piv5ZCm5Li6bnVsbC91bmRlZmluZWQKICAgICAgaWYgKHZhbCA9PSBudWxsKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHdjaDogMTAKICAgICAgICB9OwogICAgICB9IGVsc2UgaWYgKHZhbC50b1N0cmluZygpLmNoYXJDb2RlQXQoMCkgPiAyNTUpIHsKICAgICAgICAvLyDliKTmlq3mmK/lkKbkuLrkuK3mlocKICAgICAgICByZXR1cm4gewogICAgICAgICAgd2NoOiB2YWwudG9TdHJpbmcoKS5sZW5ndGggKiAyCiAgICAgICAgfTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgd2NoOiB2YWwudG9TdHJpbmcoKS5sZW5ndGgKICAgICAgICB9OwogICAgICB9CiAgICB9KTsKICB9KTsgLy8g5Lul56ys5LiA6KGM5Li65Yid5aeL5YC8CgogIHZhciByZXN1bHQgPSBjb2xXaWR0aFswXTsKCiAgZm9yICh2YXIgaSA9IDE7IGkgPCBjb2xXaWR0aC5sZW5ndGg7IGkrKykgewogICAgZm9yICh2YXIgaiA9IDA7IGogPCBjb2xXaWR0aFtpXS5sZW5ndGg7IGorKykgewogICAgICBpZiAocmVzdWx0W2pdLndjaCA8IGNvbFdpZHRoW2ldW2pdLndjaCkgewogICAgICAgIHJlc3VsdFtqXS53Y2ggPSBjb2xXaWR0aFtpXVtqXS53Y2g7CiAgICAgIH0KICAgIH0KICB9CgogIHdzWychY29scyddID0gcmVzdWx0Owp9IC8vIOaVsOe7hOi9rOaNouaIkEpTT04KCgpmdW5jdGlvbiBmb3JtYXRKU09OKGtleSwgZGF0YSkgewogIHJldHVybiBkYXRhLm1hcChmdW5jdGlvbiAodikgewogICAgcmV0dXJuIGtleS5tYXAoZnVuY3Rpb24gKGkpIHsKICAgICAgcmV0dXJuIHZbaV07CiAgICB9KTsKICB9KTsKfSAvLyDlrZfnrKbkuLLovaxBcnJheUJ1ZmZlcgoKCmZ1bmN0aW9uIHMyYWIocykgewogIHZhciBidWYgPSBuZXcgQXJyYXlCdWZmZXIocy5sZW5ndGgpOwogIHZhciB2aWV3ID0gbmV3IFVpbnQ4QXJyYXkoYnVmKTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgIT09IHMubGVuZ3RoOyArK2kpIHsKICAgIHZpZXdbaV0gPSBzLmNoYXJDb2RlQXQoaSkgJiAweEZGOwogIH0KCiAgcmV0dXJuIGJ1ZjsKfSAvLyDlr7zlh7pFWENFTOihqOagvAoKCmZ1bmN0aW9uIGV4cG9ydERhdGFUb0V4Y2VsKCkgewogIHZhciBfcmVmID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fSwKICAgICAgaGVhZGVyID0gX3JlZi5oZWFkZXIsCiAgICAgIGtleSA9IF9yZWYua2V5LAogICAgICBkYXRhID0gX3JlZi5kYXRhLAogICAgICBmaWxlTmFtZSA9IF9yZWYuZmlsZU5hbWUsCiAgICAgIF9yZWYkYXV0b1dpZHRoID0gX3JlZi5hdXRvV2lkdGgsCiAgICAgIGF1dG9XaWR0aCA9IF9yZWYkYXV0b1dpZHRoID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiRhdXRvV2lkdGgsCiAgICAgIF9yZWYkYm9va1R5cGUgPSBfcmVmLmJvb2tUeXBlLAogICAgICBib29rVHlwZSA9IF9yZWYkYm9va1R5cGUgPT09IHZvaWQgMCA/ICd4bHN4JyA6IF9yZWYkYm9va1R5cGU7CgogIC8vIOWIm+W7uldvcmtib29r5a+56LGhCiAgdmFyIHdiID0gX3hsc3guZGVmYXVsdC51dGlscy5ib29rX25ldygpOwoKICB2YXIgYXJyID0gZm9ybWF0SlNPTihrZXksIGRhdGEpOwogIGZpbGVOYW1lID0gZmlsZU5hbWUgfHwgJ2V4Y2VsLWxpc3QnOwogIGFyci51bnNoaWZ0KGhlYWRlcik7IC8vIOWwhuaVsOe7hOaVsOaNrui9rOaNouS4undvcmtzaGVldAoKICB2YXIgd3MgPSBfeGxzeC5kZWZhdWx0LnV0aWxzLmFvYV90b19zaGVldChhcnIpOwoKICBpZiAoYXV0b1dpZHRoKSB7CiAgICBBdXRvV2lkdGgod3MsIGFycik7CiAgfSAvLyDlkJFXb3JrYm9va+WvueixoeS4rei/veWKoHdvcmtzaGVldOWSjGZpbGVOYW1lCgoKICBfeGxzeC5kZWZhdWx0LnV0aWxzLmJvb2tfYXBwZW5kX3NoZWV0KHdiLCB3cywgZmlsZU5hbWUpOyAvLyDnlJ/miJBFWENFTOeahOmFjee9rumhuQoKCiAgdmFyIHdib3V0ID0gX3hsc3guZGVmYXVsdC53cml0ZSh3YiwgewogICAgYm9va1R5cGU6IGJvb2tUeXBlLAogICAgYm9va1NTVDogZmFsc2UsCiAgICB0eXBlOiAnYmluYXJ5JwogIH0pOyAvLyDmtY/op4jlmajkuIvovb0KCgogICgwLCBfZmlsZVNhdmVyLnNhdmVBcykobmV3IEJsb2IoW3MyYWIod2JvdXQpXSwgewogICAgdHlwZTogJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScKICB9KSwgIiIuY29uY2F0KGZpbGVOYW1lLCAiLiIpLmNvbmNhdChib29rVHlwZSkpOwp9IC8vIOS7jkV4Y2Vs5paH5Lu25Lit6I635Y+W6KGo5qC85aS0CgoKZnVuY3Rpb24gZ2V0SGVhZGVyUm93KHNoZWV0KSB7CiAgdmFyIGhlYWRlcnMgPSBbXTsgLy8g5bCGIEExOkc4IOi/meenjeWtl+espuS4sui9rOaNouS4uuihjOWIl+WvueixoQoKICB2YXIgcmFuZ2UgPSBfeGxzeC5kZWZhdWx0LnV0aWxzLmRlY29kZV9yYW5nZShzaGVldFsnIXJlZiddKTsKCiAgdmFyIEM7CiAgdmFyIFIgPSByYW5nZS5zLnI7IC8vIOS7juesrOS4gOWIl+W8gOWni++8jOmBjeWOhuiMg+WbtOS4reeahOavj+S4gOWIlwoKICBmb3IgKEMgPSByYW5nZS5zLmM7IEMgPD0gcmFuZ2UuZS5jOyArK0MpIHsKICAgIC8vIOWwhuihjOWIl+Wvueixoei9rOaNouS4uiBBMSDov5nnp43lrZfnrKbkuLIKICAgIHZhciBjZWxsID0gc2hlZXRbX3hsc3guZGVmYXVsdC51dGlscy5lbmNvZGVfY2VsbCh7CiAgICAgIGM6IEMsCiAgICAgIHI6IFIKICAgIH0pXTsgLy8g55So6buY6K6k5YC85pu/5o2iCgoKICAgIHZhciBoZHIgPSAnVU5LTk9XTiAnICsgQzsKICAgIGlmIChjZWxsICYmIGNlbGwudCkgaGRyID0gX3hsc3guZGVmYXVsdC51dGlscy5mb3JtYXRfY2VsbChjZWxsKTsKICAgIGhlYWRlcnMucHVzaChoZHIpOwogIH0KCiAgcmV0dXJuIGhlYWRlcnM7Cn0gLy8g6K+75Y+WRXhjZWzmlofku7YKCgpmdW5jdGlvbiByZWFkRGF0YUZyb21FeGNlbChkYXRhLCB0eXBlKSB7CiAgLy8g6K+75Y+WRXhjZWzmlofku7blubbkv53lrZjliLBXb3JrYm9va+WvueixoQogIHZhciB3b3JrYm9vayA9IF94bHN4LmRlZmF1bHQucmVhZChkYXRhLCB7CiAgICB0eXBlOiB0eXBlCiAgfSk7CgogIHZhciBmaXJzdFNoZWV0TmFtZSA9IHdvcmtib29rLlNoZWV0TmFtZXNbMF07IC8vIOiOt+WPlldvcmtib29r5a+56LGh55qEd29ya3NoZWV0CgogIHZhciB3b3Jrc2hlZXQgPSB3b3JrYm9vay5TaGVldHNbZmlyc3RTaGVldE5hbWVdOwogIHZhciBoZWFkZXIgPSBnZXRIZWFkZXJSb3cod29ya3NoZWV0KTsgLy8g5bCGd29ya3NoZWV06L2s5YyW5oiQ5pWw57uECgogIHZhciByZXN1bHRzID0gX3hsc3guZGVmYXVsdC51dGlscy5zaGVldF90b19qc29uKHdvcmtzaGVldCk7CgogIHJldHVybiB7CiAgICBoZWFkZXI6IGhlYWRlciwKICAgIHJlc3VsdHM6IHJlc3VsdHMKICB9Owp9Cgp2YXIgX2RlZmF1bHQgPSB7CiAgZXhwb3J0RGF0YVRvRXhjZWw6IGV4cG9ydERhdGFUb0V4Y2VsLAogIHJlYWREYXRhRnJvbUV4Y2VsOiByZWFkRGF0YUZyb21FeGNlbAp9OwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"sources":["/home/mengy/develop/iwork/kafo/vue-admin-design/src/utils/excel.js"],"names":["AutoWidth","ws","arr","colWidth","map","row","val","wch","toString","charCodeAt","length","result","i","j","formatJSON","key","data","v","s2ab","s","buf","ArrayBuffer","view","Uint8Array","exportDataToExcel","header","fileName","autoWidth","bookType","wb","XLSX","utils","book_new","unshift","aoa_to_sheet","book_append_sheet","wbout","write","bookSST","type","Blob","getHeaderRow","sheet","headers","range","decode_range","C","R","r","c","e","cell","encode_cell","hdr","t","format_cell","push","readDataFromExcel","workbook","read","firstSheetName","SheetNames","worksheet","Sheets","results","sheet_to_json"],"mappings":"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","sourcesContent":["import XLSX from 'xlsx'\r\nimport { saveAs } from 'file-saver'\r\n\r\n// 自动宽度计算\r\nfunction AutoWidth(ws, arr) {\r\n  // 设置worksheet每列的最大宽度\r\n  const colWidth = arr.map(row => row.map(val => {\r\n    // 判断是否为null/undefined\r\n    if (val == null) {\r\n      return { wch: 10 }\r\n    } else if (val.toString().charCodeAt(0) > 255) { // 判断是否为中文\r\n      return { wch: val.toString().length * 2 }\r\n    } else {\r\n      return { wch: val.toString().length }\r\n    }\r\n  }))\r\n  // 以第一行为初始值\r\n  const result = colWidth[0]\r\n  for (let i = 1; i < colWidth.length; i++) {\r\n    for (let j = 0; j < colWidth[i].length; j++) {\r\n      if (result[j].wch < colWidth[i][j].wch) {\r\n        result[j].wch = colWidth[i][j].wch\r\n      }\r\n    }\r\n  }\r\n  ws['!cols'] = result\r\n}\r\n\r\n// 数组转换成JSON\r\nfunction formatJSON(key, data) {\r\n  return data.map(v => key.map(i => { return v[i] }))\r\n}\r\n\r\n// 字符串转ArrayBuffer\r\nfunction s2ab(s) {\r\n  const buf = new ArrayBuffer(s.length)\r\n  const view = new Uint8Array(buf)\r\n  for (let i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF\r\n  return buf\r\n}\r\n\r\n// 导出EXCEL表格\r\nexport function exportDataToExcel(\r\n  {\r\n    header, // 表头名数组\r\n    key, // 列对应字段数组\r\n    data, // 需要导出数据的数组\r\n    fileName, // 导出文件名\r\n    autoWidth = true, // 是否自动宽度\r\n    bookType = 'xlsx' // 导出文件格式\r\n  } = {}) {\r\n  // 创建Workbook对象\r\n  const wb = XLSX.utils.book_new()\r\n  const arr = formatJSON(key, data)\r\n  fileName = fileName || 'excel-list'\r\n  arr.unshift(header)\r\n  // 将数组数据转换为worksheet\r\n  const ws = XLSX.utils.aoa_to_sheet(arr)\r\n  if (autoWidth) {\r\n    AutoWidth(ws, arr)\r\n  }\r\n  // 向Workbook对象中追加worksheet和fileName\r\n  XLSX.utils.book_append_sheet(wb, ws, fileName)\r\n  // 生成EXCEL的配置项\r\n  const wbout = XLSX.write(wb, {\r\n    bookType: bookType,\r\n    bookSST: false,\r\n    type: 'binary'\r\n  })\r\n  // 浏览器下载\r\n  saveAs(new Blob([s2ab(wbout)], {\r\n    type: 'application/octet-stream'\r\n  }), `${fileName}.${bookType}`)\r\n}\r\n\r\n// 从Excel文件中获取表格头\r\nfunction getHeaderRow(sheet) {\r\n  const headers = []\r\n  // 将 A1:G8 这种字符串转换为行列对象\r\n  const range = XLSX.utils.decode_range(sheet['!ref'])\r\n  let C\r\n  const R = range.s.r\r\n  // 从第一列开始，遍历范围中的每一列\r\n  for (C = range.s.c; C <= range.e.c; ++C) {\r\n    // 将行列对象转换为 A1 这种字符串\r\n    const cell = sheet[XLSX.utils.encode_cell({ c: C, r: R })]\r\n    // 用默认值替换\r\n    let hdr = 'UNKNOWN ' + C\r\n    if (cell && cell.t) hdr = XLSX.utils.format_cell(cell)\r\n    headers.push(hdr)\r\n  }\r\n  return headers\r\n}\r\n\r\n// 读取Excel文件\r\nexport function readDataFromExcel(data, type) {\r\n  // 读取Excel文件并保存到Workbook对象\r\n  const workbook = XLSX.read(data, { type: type })\r\n  const firstSheetName = workbook.SheetNames[0]\r\n  // 获取Workbook对象的worksheet\r\n  const worksheet = workbook.Sheets[firstSheetName]\r\n  const header = getHeaderRow(worksheet)\r\n  // 将worksheet转化成数组\r\n  const results = XLSX.utils.sheet_to_json(worksheet)\r\n  return { header, results }\r\n}\r\n\r\nexport default {\r\n  exportDataToExcel,\r\n  readDataFromExcel\r\n}\r\n"]}]}