{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/audit/report-audit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/audit/report-audit.vue","mtime":1631273279387},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9tZW5neS9kZXZlbG9wL2l3b3JrL2thZm8vdnVlLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpLmRlZmF1bHQ7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDsKCnZhciBfUGFnaW5hdGlvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vLi4vLi4vY29tcG9uZW50cy9QYWdpbmF0aW9uIikpOwoKdmFyIF9jb21tb24gPSByZXF1aXJlKCJAL3V0aWxzL2NvbW1vbiIpOwoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIF9kZWZhdWx0ID0gewogIG5hbWU6ICdUYWJsZScsCiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbjogX1BhZ2luYXRpb24uZGVmYXVsdAogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDmlbDmja7liJfooajliqDovb3liqjnlLsKICAgICAgbGlzdExvYWRpbmc6IHRydWUsCiAgICAgIC8vIOafpeivouWIl+ihqOWPguaVsOWvueixoQogICAgICBzZWFyY2g6IHsKICAgICAgICBhcmVhSWQ6IDEsCiAgICAgICAgc2NlbmU6IDAsCiAgICAgICAgcmVwb3J0ZWRUeXBlOiAxLAogICAgICAgIHJlcG9ydFVpZDogdW5kZWZpbmVkLAogICAgICAgIHJlcG9ydGVkVGltZTogMSwKICAgICAgICBjcmVhdGVkU3RhcnQ6IHVuZGVmaW5lZCwKICAgICAgICBjcmVhdGVkRW5kOiB1bmRlZmluZWQsCiAgICAgICAgcGFnZTogewogICAgICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgICAgICBwYWdlU2l6ZTogMTAKICAgICAgICB9CiAgICAgIH0sCiAgICAgIC8vIOaVsOaNruaAu+adoeaVsAogICAgICB0b3RhbDogMCwKICAgICAgaXNDb2xsYXBzZTogdHJ1ZSwKICAgICAgYXJlYURhdGE6ICgwLCBfY29tbW9uLmdldEFyZWFMaXN0KSgpLAogICAgICByZXBvcnRlZFR5cGVzOiAoMCwgX2NvbW1vbi5nZXRSZXBvcnRlZFR5cGVzKSgpLAogICAgICByZXBvcnRlZFRpbWVzOiAoMCwgX2NvbW1vbi5nZXRSZXBvcnRlZFRpbWUpKCksCiAgICAgIHZpb2xhdGlvblNjZW5lczogKDAsIF9jb21tb24uZ2V0VmlvbGF0aW9uU2NlbmUpKCkKICAgIH07CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgfSwKCiAgbWV0aG9kczogewogICAgLy8g6I635Y+W5pWw5o2u5YiX6KGoCiAgICBmZXRjaERhdGEoKSB7CiAgICAgIGNvbnN0ICR0aGlzID0gdGhpczsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMuaGFuZGxlUmVwb3J0ZWRUaW1lKCk7CiAgICAgIHRoaXMuJHNlcnZpY2UuYXVkaXQuZ2V0VmlvbGF0aW9uTGlzdCh0aGlzLnNlYXJjaCwgZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgIGNvbnN0IGxpc3QgPSByZXN1bHQuZ2V0UmVjb3Jkc0xpc3QoKTsKICAgICAgICBjb25zdCBkYXRhID0gW107CiAgICAgICAgbGlzdC5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgICAgY29uc3QganNvbiA9IHsKICAgICAgICAgICAgImlkIjogaXRlbS5nZXRJZCgpLAogICAgICAgICAgICAicmVwb3J0ZXJJZCI6IGl0ZW0uZ2V0UmVwb3J0ZXJJZCgpLAogICAgICAgICAgICAicmVwb3J0ZWRJZCI6IGl0ZW0uZ2V0UmVwb3J0ZWRJZCgpLAogICAgICAgICAgICAidmlvbGF0aW9uVHlwZSI6IGl0ZW0uZ2V0VmlvbGF0aW9uVHlwZSgpLAogICAgICAgICAgICAidmlvbGF0aW9uU2NlbmUiOiBpdGVtLmdldFZpb2xhdGlvblNjZW5lKCksCiAgICAgICAgICAgICJyZXBvcnRNZXNzYWdlIjogaXRlbS5nZXRSZXBvcnRNZXNzYWdlKCksCiAgICAgICAgICAgICJjcmVhdGVkQXQiOiBpdGVtLmdldENyZWF0ZWRBdCgpLAogICAgICAgICAgICAiZGVhbFN0YXR1cyI6IGl0ZW0uZ2V0RGVhbFN0YXR1cygpLAogICAgICAgICAgICAiZGVhbE1lc3NhZ2UiOiBpdGVtLmdldERlYWxNZXNzYWdlKCksCiAgICAgICAgICAgICJkZWFsQXQiOiBpdGVtLmdldERlYWxBdCgpCiAgICAgICAgICB9OwogICAgICAgICAgZGF0YS5wdXNoKGpzb24pOwogICAgICAgIH0pOwogICAgICAgICR0aGlzLnRvdGFsID0gcmVzdWx0LmdldFRvdGFsQ291bnQoKTsKICAgICAgICAkdGhpcy50YWJsZURhdGEgPSBkYXRhOwogICAgICAgICR0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKCiAgICAvLyDmn6Xor6LmlbDmja4KICAgIG9uU3VibWl0KCkgewogICAgICB0aGlzLnNlYXJjaC5wYWdlLmN1cnJlbnRQYWdlID0gMTsKICAgICAgdGhpcy5mZXRjaERhdGEoKTsKICAgIH0sCgogICAgLy8g5aSa6YCJ5pON5L2cCiAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2UodmFsKSB7CiAgICAgIHRoaXMubXVsdGlwbGVTZWxlY3Rpb24gPSB2YWw7CiAgICB9LAoKICAgIC8vIOmAmui/hwogICAgaGFuZGxlUGFzc2VkKGluZGV4LCByb3cpIHsKICAgICAgY29uc3QgJHRoaXMgPSB0aGlzOwogICAgICB0aGlzLiRwcm9tcHQoJycsICfpgJrov4fljp/lm6AnLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognCiAgICAgIH0pLnRoZW4oKHsKICAgICAgICB2YWx1ZQogICAgICB9KSA9PiB7CiAgICAgICAgbGV0IHBhcmFtID0gewogICAgICAgICAgInByb2ZpbGVJZCI6IHJvdy5pZCwKICAgICAgICAgICJzdGF0dXMiOiA1LAogICAgICAgICAgInJlYXNvbiI6IHZhbHVlCiAgICAgICAgfTsKICAgICAgICB0aGlzLiRzZXJ2aWNlLmF1ZGl0LnByb2Nlc3NWaW9sYXRpb24ocGFyYW0sIGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICAgIHJlc3VsdCA/ICR0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuWuoeaguOmAmui/hyAhIikgOiAkdGhpcy4kbWVzc2FnZS5lcnJvcigi5a6h5qC45aSx6LSlICEiKTsKICAgICAgICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvLyDmi5Lnu50KICAgIGhhbmRsZVJlZnVzZShpbmRleCwgcm93KSB7CiAgICAgIGNvbnN0ICR0aGlzID0gdGhpczsKICAgICAgdGhpcy4kcHJvbXB0KCcnLCAn6YCa6L+H5Y6f5ZugJywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJwogICAgICB9KS50aGVuKCh7CiAgICAgICAgdmFsdWUKICAgICAgfSkgPT4gewogICAgICAgIGxldCBwYXJhbSA9IHsKICAgICAgICAgICJ2aW9sYXRpb25JZCI6IHJvdy5pZCwKICAgICAgICAgICJkZWFsU3RhdHVzIjogNCwKICAgICAgICAgICJkZWFsTWVzc2FnZSI6IHZhbHVlCiAgICAgICAgfTsKICAgICAgICB0aGlzLiRzZXJ2aWNlLmF1ZGl0LnByb2Nlc3NWaW9sYXRpb24ocGFyYW0sIGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICAgIHJlc3VsdCA/ICR0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuW3suaLkue7nSAhIikgOiAkdGhpcy4kbWVzc2FnZS5lcnJvcigi5ouS57ud5aSx6LSlICEiKTsKICAgICAgICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvL+mHjee9rgogICAgcmVzZXRGb3JtKCkgewogICAgICB0aGlzLiRyZWZzWydzZWFyY2hGb3JtJ10ucmVzZXRGaWVsZHMoKTsKICAgIH0sCgogICAgaGFuZGxlUmVwb3J0ZWRUaW1lKCkgewogICAgICBsZXQgcnQgPSB0aGlzLnNlYXJjaC5yZXBvcnRlZFRpbWU7CiAgICAgIGxldCBzdGFydFRpbWUxID0gdW5kZWZpbmVkOwogICAgICBsZXQgZW5kVGltZTEgPSB1bmRlZmluZWQ7CiAgICAgIGxldCBkYXlTZWNvbmQgPSAyNCAqIDYwICogNjA7CiAgICAgIGxldCBjdXJyZW50U2Vjb25kID0gbmV3IERhdGUobmV3IERhdGUoKS50b0xvY2FsZURhdGVTdHJpbmcoKSkuZ2V0VGltZSgpIC8gMTAwMDsKCiAgICAgIGlmICgnMScgPT09IHJ0KSB7CiAgICAgICAgc3RhcnRUaW1lMSA9IGN1cnJlbnRTZWNvbmQ7IC8vIOW9k+WkqTDngrkKCiAgICAgICAgZW5kVGltZTEgPSBjdXJyZW50U2Vjb25kICsgZGF5U2Vjb25kIC0gMTsgLy8g5b2T5aSpMjM6NTkKICAgICAgfSBlbHNlIGlmICgnMicgPT09IHJ0KSB7CiAgICAgICAgc3RhcnRUaW1lMSA9IGN1cnJlbnRTZWNvbmQgLSBkYXlTZWNvbmQgKiAzOwogICAgICAgIGVuZFRpbWUxID0gY3VycmVudFNlY29uZCArIGRheVNlY29uZCAtIDE7IC8vIOW9k+WkqTIzOjU5CiAgICAgIH0gZWxzZSBpZiAoJzMnID09PSBydCkgewogICAgICAgIHN0YXJ0VGltZTEgPSBjdXJyZW50U2Vjb25kIC0gZGF5U2Vjb25kICogNzsKICAgICAgICBlbmRUaW1lMSA9IGN1cnJlbnRTZWNvbmQgKyBkYXlTZWNvbmQgLSAxOyAvLyDlvZPlpKkyMzo1OQogICAgICB9CgogICAgICB0aGlzLnNlYXJjaC5jcmVhdGVkU3RhcnQgPSBzdGFydFRpbWUxOwogICAgICB0aGlzLnNlYXJjaC5jcmVhdGVkRW5kID0gZW5kVGltZTE7CiAgICB9CgogIH0KfTsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},null]}