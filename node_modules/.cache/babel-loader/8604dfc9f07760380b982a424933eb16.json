{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/audit/report-audit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/audit/report-audit.vue","mtime":1632646781913},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9tZW5neS9kZXZlbG9wL2l3b3JrL2thZm8vdnVlLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpLmRlZmF1bHQ7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDsKCnZhciBfUGFnaW5hdGlvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vLi4vLi4vY29tcG9uZW50cy9QYWdpbmF0aW9uIikpOwoKdmFyIF9jb21tb24gPSByZXF1aXJlKCJAL3V0aWxzL2NvbW1vbiIpOwoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIF9kZWZhdWx0ID0gewogIG5hbWU6ICdUYWJsZScsCiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbjogX1BhZ2luYXRpb24uZGVmYXVsdAogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDmlbDmja7liJfooajliqDovb3liqjnlLsKICAgICAgbGlzdExvYWRpbmc6IHRydWUsCiAgICAgIC8vIOafpeivouWIl+ihqOWPguaVsOWvueixoQogICAgICBzZWFyY2g6IHsKICAgICAgICBhcmVhSWQ6IDEsCiAgICAgICAgc2NlbmU6IDAsCiAgICAgICAgcmVwb3J0ZWRUeXBlOiAxLAogICAgICAgIHJlcG9ydFVpZDogdW5kZWZpbmVkLAogICAgICAgIHJlcG9ydGVkVGltZTogMSwKICAgICAgICBjcmVhdGVkU3RhcnQ6IHVuZGVmaW5lZCwKICAgICAgICBjcmVhdGVkRW5kOiB1bmRlZmluZWQsCiAgICAgICAgcGFnZTogewogICAgICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgICAgICBwYWdlU2l6ZTogMTAKICAgICAgICB9CiAgICAgIH0sCiAgICAgIC8vIOaVsOaNruaAu+adoeaVsAogICAgICB0b3RhbDogMCwKICAgICAgaXNDb2xsYXBzZTogdHJ1ZSwKICAgICAgYXJlYURhdGE6ICgwLCBfY29tbW9uLmdldEFyZWFMaXN0KSgpLAogICAgICByZXBvcnRlZFR5cGVzOiAoMCwgX2NvbW1vbi5nZXRSZXBvcnRlZFR5cGVzKSgpLAogICAgICByZXBvcnRlZFRpbWVzOiAoMCwgX2NvbW1vbi5nZXRSZXBvcnRlZFRpbWUpKCksCiAgICAgIHZpb2xhdGlvblNjZW5lczogKDAsIF9jb21tb24uZ2V0VmlvbGF0aW9uU2NlbmUpKCkKICAgIH07CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgfSwKCiAgbWV0aG9kczogewogICAgLy8g6I635Y+W5pWw5o2u5YiX6KGoCiAgICBmZXRjaERhdGEoKSB7CiAgICAgIGNvbnN0ICR0aGlzID0gdGhpczsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMuaGFuZGxlUmVwb3J0ZWRUaW1lKCk7CiAgICAgIHRoaXMuJHNlcnZpY2UuYXVkaXQuZ2V0VmlvbGF0aW9uTGlzdCh0aGlzLnNlYXJjaCwgZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgIGNvbnN0IGxpc3QgPSByZXN1bHQuZ2V0UmVjb3Jkc0xpc3QoKTsKICAgICAgICBjb25zdCBkYXRhID0gW107CiAgICAgICAgbGlzdC5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgICAgY29uc3QganNvbiA9IHsKICAgICAgICAgICAgImlkIjogaXRlbS5nZXRJZCgpLAogICAgICAgICAgICAicmVwb3J0ZXJJZCI6IGl0ZW0uZ2V0UmVwb3J0ZXJJZCgpLAogICAgICAgICAgICAicmVwb3J0ZWRJZCI6IGl0ZW0uZ2V0UmVwb3J0ZWRJZCgpLAogICAgICAgICAgICAidmlvbGF0aW9uVHlwZSI6IGl0ZW0uZ2V0VmlvbGF0aW9uVHlwZSgpLAogICAgICAgICAgICAidmlvbGF0aW9uU2NlbmUiOiBpdGVtLmdldFZpb2xhdGlvblNjZW5lKCksCiAgICAgICAgICAgICJyZXBvcnRNZXNzYWdlIjogaXRlbS5nZXRSZXBvcnRNZXNzYWdlKCksCiAgICAgICAgICAgICJjcmVhdGVkQXQiOiBuZXcgRGF0ZShpdGVtLmdldENyZWF0ZWRBdCgpICogMTAwMCkuZm9ybWF0KCd5eXl5LU1NLWRkIGhoOm1tOnNzJyksCiAgICAgICAgICAgICJkZWFsU3RhdHVzIjogaXRlbS5nZXREZWFsU3RhdHVzKCksCiAgICAgICAgICAgICJkZWFsTWVzc2FnZSI6IGl0ZW0uZ2V0RGVhbE1lc3NhZ2UoKSwKICAgICAgICAgICAgImRlYWxBdCI6IGl0ZW0uZ2V0RGVhbEF0KCkKICAgICAgICAgIH07CiAgICAgICAgICBkYXRhLnB1c2goanNvbik7CiAgICAgICAgfSk7CiAgICAgICAgJHRoaXMudG90YWwgPSByZXN1bHQuZ2V0VG90YWxDb3VudCgpOwogICAgICAgICR0aGlzLnRhYmxlRGF0YSA9IGRhdGE7CiAgICAgICAgJHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8vIOafpeivouaVsOaNrgogICAgb25TdWJtaXQoKSB7CiAgICAgIHRoaXMuc2VhcmNoLnBhZ2UuY3VycmVudFBhZ2UgPSAxOwogICAgICB0aGlzLmZldGNoRGF0YSgpOwogICAgfSwKCiAgICAvLyDlpJrpgInmk43kvZwKICAgIGhhbmRsZVNlbGVjdGlvbkNoYW5nZSh2YWwpIHsKICAgICAgdGhpcy5tdWx0aXBsZVNlbGVjdGlvbiA9IHZhbDsKICAgIH0sCgogICAgLy8g6YCa6L+HCiAgICBoYW5kbGVQYXNzZWQoaW5kZXgsIHJvdykgewogICAgICBjb25zdCAkdGhpcyA9IHRoaXM7CiAgICAgIHRoaXMuJHByb21wdCgnJywgJ+mAmui/h+WOn+WboCcsIHsKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcKICAgICAgfSkudGhlbigoewogICAgICAgIHZhbHVlCiAgICAgIH0pID0+IHsKICAgICAgICBsZXQgcGFyYW0gPSB7CiAgICAgICAgICAicHJvZmlsZUlkIjogcm93LmlkLAogICAgICAgICAgInN0YXR1cyI6IDUsCiAgICAgICAgICAicmVhc29uIjogdmFsdWUKICAgICAgICB9OwogICAgICAgIHRoaXMuJHNlcnZpY2UuYXVkaXQucHJvY2Vzc1Zpb2xhdGlvbihwYXJhbSwgZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgcmVzdWx0ID8gJHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5a6h5qC46YCa6L+HICEiKSA6ICR0aGlzLiRtZXNzYWdlLmVycm9yKCLlrqHmoLjlpLHotKUgISIpOwogICAgICAgICAgdGhpcy5mZXRjaERhdGEoKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8vIOaLkue7nQogICAgaGFuZGxlUmVmdXNlKGluZGV4LCByb3cpIHsKICAgICAgY29uc3QgJHRoaXMgPSB0aGlzOwogICAgICB0aGlzLiRwcm9tcHQoJycsICfpgJrov4fljp/lm6AnLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognCiAgICAgIH0pLnRoZW4oKHsKICAgICAgICB2YWx1ZQogICAgICB9KSA9PiB7CiAgICAgICAgbGV0IHBhcmFtID0gewogICAgICAgICAgInZpb2xhdGlvbklkIjogcm93LmlkLAogICAgICAgICAgImRlYWxTdGF0dXMiOiA0LAogICAgICAgICAgImRlYWxNZXNzYWdlIjogdmFsdWUKICAgICAgICB9OwogICAgICAgIHRoaXMuJHNlcnZpY2UuYXVkaXQucHJvY2Vzc1Zpb2xhdGlvbihwYXJhbSwgZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgcmVzdWx0ID8gJHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5bey5ouS57udICEiKSA6ICR0aGlzLiRtZXNzYWdlLmVycm9yKCLmi5Lnu53lpLHotKUgISIpOwogICAgICAgICAgdGhpcy5mZXRjaERhdGEoKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8v6YeN572uCiAgICByZXNldEZvcm0oKSB7CiAgICAgIHRoaXMuJHJlZnNbJ3NlYXJjaEZvcm0nXS5yZXNldEZpZWxkcygpOwogICAgfSwKCiAgICBoYW5kbGVSZXBvcnRlZFRpbWUoKSB7CiAgICAgIGxldCBydCA9IHRoaXMuc2VhcmNoLnJlcG9ydGVkVGltZTsKICAgICAgbGV0IHN0YXJ0VGltZTEgPSB1bmRlZmluZWQ7CiAgICAgIGxldCBlbmRUaW1lMSA9IHVuZGVmaW5lZDsKICAgICAgbGV0IGRheVNlY29uZCA9IDI0ICogNjAgKiA2MDsKICAgICAgbGV0IGN1cnJlbnRTZWNvbmQgPSBuZXcgRGF0ZShuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygpKS5nZXRUaW1lKCkgLyAxMDAwOwoKICAgICAgaWYgKCcxJyA9PT0gcnQpIHsKICAgICAgICBzdGFydFRpbWUxID0gY3VycmVudFNlY29uZDsgLy8g5b2T5aSpMOeCuQoKICAgICAgICBlbmRUaW1lMSA9IGN1cnJlbnRTZWNvbmQgKyBkYXlTZWNvbmQgLSAxOyAvLyDlvZPlpKkyMzo1OQogICAgICB9IGVsc2UgaWYgKCcyJyA9PT0gcnQpIHsKICAgICAgICBzdGFydFRpbWUxID0gY3VycmVudFNlY29uZCAtIGRheVNlY29uZCAqIDM7CiAgICAgICAgZW5kVGltZTEgPSBjdXJyZW50U2Vjb25kICsgZGF5U2Vjb25kIC0gMTsgLy8g5b2T5aSpMjM6NTkKICAgICAgfSBlbHNlIGlmICgnMycgPT09IHJ0KSB7CiAgICAgICAgc3RhcnRUaW1lMSA9IGN1cnJlbnRTZWNvbmQgLSBkYXlTZWNvbmQgKiA3OwogICAgICAgIGVuZFRpbWUxID0gY3VycmVudFNlY29uZCArIGRheVNlY29uZCAtIDE7IC8vIOW9k+WkqTIzOjU5CiAgICAgIH0KCiAgICAgIHRoaXMuc2VhcmNoLmNyZWF0ZWRTdGFydCA9IHN0YXJ0VGltZTE7CiAgICAgIHRoaXMuc2VhcmNoLmNyZWF0ZWRFbmQgPSBlbmRUaW1lMTsKICAgIH0KCiAgfQp9OwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},null]}