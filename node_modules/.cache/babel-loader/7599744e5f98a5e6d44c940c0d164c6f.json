{"remainingRequest":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js!/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/Documents/iwork/kafo/vue-admin-design/src/views/image/ImageCropper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/src/views/image/ImageCropper.vue","mtime":1624500048824},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9tZW5neS9Eb2N1bWVudHMvaXdvcmsva2Fmby92dWUtYWRtaW4tZGVzaWduL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7Cgp2YXIgX3Z1ZUNyb3BwZXIgPSByZXF1aXJlKCJ2dWUtY3JvcHBlciIpOwoKdmFyIF9IaW50cyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vLi4vY29tcG9uZW50cy9IaW50cyIpKTsKCnZhciBfVXBsb2FkSW1hZ2UgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4uLy4uL2NvbXBvbmVudHMvVXBsb2FkSW1hZ2UiKSk7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgX2RlZmF1bHQgPSB7CiAgbmFtZTogJ0ltYWdlQ3JvcHBlcicsCiAgY29tcG9uZW50czogewogICAgSGludHM6IF9IaW50cy5kZWZhdWx0LAogICAgVnVlQ3JvcHBlcjogX3Z1ZUNyb3BwZXIuVnVlQ3JvcHBlciwKICAgIFVwbG9hZEltYWdlOiBfVXBsb2FkSW1hZ2UuZGVmYXVsdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbmZpZ09iajogewogICAgICAgIGltZ1NyYzogJ2h0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9iYWltaW5neHVhbi9tZWRpYS1zdG9yZS9pbWFnZXMvaW1nMDIuanBnJywKICAgICAgICBjYW5Nb3ZlOiBmYWxzZSwKICAgICAgICBhdXRvQ3JvcDogdHJ1ZSwKICAgICAgICBjZW50ZXJCb3g6IHRydWUsCiAgICAgICAgaW5mb1RydWU6IHRydWUsCiAgICAgICAgZnVsbDogdHJ1ZSwKICAgICAgICBhdXRvQ3JvcFdpZHRoOiAzMDAsCiAgICAgICAgYXV0b0Nyb3BIZWlnaHQ6IDIwMCwKICAgICAgICBvdXRwdXRUeXBlOiAncG5nJwogICAgICB9LAogICAgICBkb3duSW1nOiAnIycsCiAgICAgIHByZXZpZXdzOiB7fQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZVN1Y2Nlc3M6IGZ1bmN0aW9uIGhhbmRsZVN1Y2Nlc3MoZGF0YSkgewogICAgICB0aGlzLmNvbmZpZ09iai5pbWdTcmMgPSBkYXRhOwogICAgfSwKICAgIHJlYWxUaW1lOiBmdW5jdGlvbiByZWFsVGltZShkYXRhKSB7CiAgICAgIHRoaXMucHJldmlld3MgPSBkYXRhOwogICAgfSwKICAgIGRvd25sb2FkSW1hZ2U6IGZ1bmN0aW9uIGRvd25sb2FkSW1hZ2UoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLiRyZWZzLmNyb3BwZXIuZ2V0Q3JvcEJsb2IoZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBfdGhpcy5kb3duSW1nID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoZGF0YSk7CgogICAgICAgIGlmICh3aW5kb3cubmF2aWdhdG9yLm1zU2F2ZUJsb2IpIHsKICAgICAgICAgIHZhciBibG9iT2JqZWN0ID0gbmV3IEJsb2IoW2RhdGFdKTsKICAgICAgICAgIHdpbmRvdy5uYXZpZ2F0b3IubXNTYXZlQmxvYihibG9iT2JqZWN0LCAnZGVtby5wbmcnKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMuJHJlZnMuZG93bmxvYWREb20uY2xpY2soKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9OwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"sources":["ImageCropper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AA6DA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAAA,cAAA;AAAA,IAAA,UAAA,EAAA,sBAAA;AAAA,IAAA,WAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,MAAA,EAAA,sEADA;AAEA,QAAA,OAAA,EAAA,KAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,SAAA,EAAA,IAJA;AAKA,QAAA,QAAA,EAAA,IALA;AAMA,QAAA,IAAA,EAAA,IANA;AAOA,QAAA,aAAA,EAAA,GAPA;AAQA,QAAA,cAAA,EAAA,GARA;AASA,QAAA,UAAA,EAAA;AATA,OADA;AAYA,MAAA,OAAA,EAAA,GAZA;AAaA,MAAA,QAAA,EAAA;AAbA,KAAA;AAeA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,IADA,EACA;AACA,WAAA,SAAA,CAAA,MAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,QAJA,oBAIA,IAJA,EAIA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,KANA;AAOA,IAAA,aAPA,2BAOA;AAAA;;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,WAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,MAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA;;AACA,YAAA,MAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AACA,cAAA,UAAA,GAAA,IAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,UAAA,MAAA,CAAA,SAAA,CAAA,UAAA,CAAA,UAAA,EAAA,UAAA;AACA,SAHA,MAGA;AACA,UAAA,KAAA,CAAA,SAAA,CAAA,YAAA;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,WAAA,CAAA,KAAA;AACA,WAFA;AAGA;AACA,OAVA;AAWA;AAnBA;AApBA,C","sourcesContent":["<template>\n  <div class=\"image-cropper-wrapper\">\n    <Hints>\n      <template slot=\"hintName\">图片裁剪插件</template>\n      <template slot=\"hintInfo\">\n        <p>Vue-Cropper：一个优雅的图片裁剪插件，可实现图片裁剪、图片生成等功能，并支持生成png、jpeg、webp等图片格式</p>\n        <p>github地址：访问 <el-link type=\"success\" href=\"https://github.com/xyxiao001/vue-cropper\" target=\"_blank\">Vue-Cropper</el-link></p>\n      </template>\n    </Hints>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"10\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">裁剪区域</div>\n          <div class=\"content-box\" style=\" height: 400px;\">\n            <VueCropper\n              ref=\"cropper\"\n              :img=\"configObj.imgSrc\"\n              :can-move=\"configObj.canMove\"\n              :auto-crop=\"configObj.autoCrop\"\n              :center-box=\"configObj.centerBox\"\n              :info-true=\"configObj.infoTrue\"\n              :full=\"configObj.full\"\n              :auto-crop-width=\"configObj.autoCropWidth\"\n              :auto-crop-height=\"configObj.autoCropHeight\"\n              :output-type=\"configObj.outputType\"\n              @realTime=\"realTime\"\n            />\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"4\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">设置区域</div>\n          <div class=\"content-box\" style=\" height: 400px;\">\n            <div style=\"height: 100px;\">\n              <UploadImage @on-success=\"handleSuccess\" />\n              <el-button size=\"small\" type=\"primary\" style=\"margin-top: 20px\">\n                <a @click=\"downloadImage\">生成图片</a>\n              </el-button>\n              <a ref=\"downloadDom\" :href=\"downImg\" download=\"demo.png\" />\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"10\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">预览区域</div>\n          <div class=\"content-box\" style=\"height: 400px;\">\n            <div class=\"show-preview\" :style=\"{'width': previews.w + 'px', 'height': previews.h + 'px', 'overflow': 'hidden', 'zoom': (400 / previews.h)}\">\n              <div :style=\"previews.div\">\n                <img :src=\"previews.url\" :style=\"previews.img\" alt=\"预览\">\n              </div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { VueCropper } from 'vue-cropper'\nimport Hints from '../../components/Hints'\nimport UploadImage from '../../components/UploadImage'\n\nexport default {\n  name: 'ImageCropper',\n  components: { Hints, VueCropper, UploadImage },\n  data() {\n    return {\n      configObj: {\n        imgSrc: 'https://cdn.jsdelivr.net/gh/baimingxuan/media-store/images/img02.jpg',\n        canMove: false,\n        autoCrop: true,\n        centerBox: true,\n        infoTrue: true,\n        full: true,\n        autoCropWidth: 300,\n        autoCropHeight: 200,\n        outputType: 'png'\n      },\n      downImg: '#',\n      previews: {}\n    }\n  },\n  methods: {\n    handleSuccess(data) {\n      this.configObj.imgSrc = data\n    },\n    realTime(data) {\n      this.previews = data\n    },\n    downloadImage() {\n      this.$refs.cropper.getCropBlob(data => {\n        this.downImg = window.URL.createObjectURL(data)\n        if (window.navigator.msSaveBlob) {\n          const blobObject = new Blob([data])\n          window.navigator.msSaveBlob(blobObject, 'demo.png')\n        } else {\n          this.$nextTick(() => {\n            this.$refs.downloadDom.click()\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/image"}]}