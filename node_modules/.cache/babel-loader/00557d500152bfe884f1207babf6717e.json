{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js??ref--13-0!/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/config.js","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/config.js","mtime":1634282839486},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1634111096329},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":1634111095606},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js","mtime":1634111096212}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/config.js"],"names":["setToken","getToken","error","OsType","deps","proto","client","CmsClient","process","env","VUE_APP_GRPC_PROXY_URI","param","callback","req","AreaConfigListRequest","setAreaId","areaId","setAppId","appId","metadata","getAreaConfigList","err","resp","struct","AreaConfig","setConvertRate","convertRate","setDepositCommission","depositCommission","setRewardCommission","rewardCommission","setCallPrice","callPrice","setFreeMessageCount","freeMessageCount","setNewUserReward","newUserReward","setHeartbeatInterval","heartbeatInterval","setPayTypesList","payTypes","setPayChannelIdsList","payChannelIds","setCdn","cdn","setDndPeriod","dndPeriod","setTagsList","tags","setAnchorExchangeRate","anchorExchangeRate","setOssConfig","ossConfig","setAgoraConfig","agoraConfig","setRongcloudConfig","rongcloudConfig","setGreenConfig","greenConfig","saveAreaConfig","PayChannelListRequest","setPayType","payType","getPayChannelList","PayChannel","setOsType","osType","setChannel","channel","setTitle","title","setName","name","setIcon","icon","setEnable","enable","setDiscount","discount","setSort","sort","setNote","note","savePayChannel","PayConfigListRequest","getPayConfigList","PayConfig","setType","type","setAppSecret","appSecret","setRedirectUrl","redirectUrl","setCallbackUrl","callbackUrl","setExtra1","extra1","setExtra2","extra2","setExtra3","extra3","savePayConfig","CountryConfigListRequest","getCountryConfigList","CountryConfig","setCountry","country","setCurrency","currency","setExchangeRate","exchangeRate","setApproximationsList","approximations","saveCountryConfig","getAppList","App","setId","id","setAppKey","appKey","setIsAnchor","isAnchor","setBundleId","bundleId","setStoreCred","storeCred","setApiAddr","apiAddr","setAreaIdsList","areaIds","saveApp","CommodityListRequest","setIsSubscription","isSubscription","getCommodityList","Commodity","setSku","sku","setPrice","price","setAmount","amount","setBonus","bonus","setVipDays","vipDays","setIsFirstReward","isFirstReward","saveCommodity","VersionListRequest","getVersionList","Version","setCode","code","setInReview","inReview","saveVersion","CheckinConfigRequest","getCheckinConfig","CheckinConfig","setMatches","matches","setWeight","weight","saveCheckinConfig","VipConfigRequest","getVipConfig","setDays","days","saveVipConfig"],"mappings":"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","sourcesContent":["import {setToken, getToken} from '@/utils/cookie'\nimport { error } from '@/utils/error'\nimport {OsType} from \"@/proto/js/usertype_pb\";\n\nexport default class {\n    constructor (deps) {\n        this.proto = deps.proto\n        this.client = new deps.proto.CmsClient(process.env.VUE_APP_GRPC_PROXY_URI, null, null)\n    }\n\n\n    // 查询区域列表\n    async getAreaConfigList (param, callback) {\n        const req = new this.proto.AreaConfigListRequest();\n        req.setAreaId(param.areaId)\n        req.setAppId(param.appId)\n\n        const metadata = {'token': getToken()};\n        this.client.getAreaConfigList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 保存区域配置\n    async saveAreaConfig (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.AreaConfig()\n        }\n        req.setAppId(param.appId)\n        req.setAreaId(param.areaId)\n        req.setConvertRate(param.convertRate)\n        req.setDepositCommission(param.depositCommission)\n        req.setRewardCommission(param.rewardCommission)\n        req.setCallPrice(param.callPrice)\n        req.setFreeMessageCount(param.freeMessageCount)\n        req.setNewUserReward(param.newUserReward)\n        req.setHeartbeatInterval(param.heartbeatInterval)\n        req.setPayTypesList(param.payTypes)\n        req.setPayChannelIdsList(param.payChannelIds)\n        req.setCdn(param.cdn)\n        req.setDndPeriod(param.dndPeriod)\n        req.setTagsList(param.tags)\n        req.setAnchorExchangeRate(param.anchorExchangeRate)\n\n        req.setOssConfig(param.ossConfig)\n        req.setAgoraConfig(param.agoraConfig)\n        req.setRongcloudConfig(param.rongcloudConfig)\n        req.setGreenConfig(param.greenConfig)\n\n        const metadata = {'token': getToken()}\n        this.client.saveAreaConfig(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(true)\n            } else {\n                callback(false)\n                error(err)\n            }\n        })\n    }\n\n\n    // 查询支付渠道\n    async getPayChannelList (param, callback) {\n        const req = new this.proto.PayChannelListRequest();\n        req.setAreaId(param.areaId)\n        req.setPayType(param.payType)\n\n        const metadata = {'token': getToken()};\n        this.client.getPayChannelList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 保存支付渠道配置\n    async savePayChannel (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.PayChannel()\n        }\n        req.setAreaId(param.areaId)\n        req.setOsType(param.osType)\n        req.setPayType(param.payType)\n        req.setChannel(param.channel)\n        req.setTitle(param.title)\n        req.setName(param.name)\n        req.setIcon(param.icon)\n        req.setEnable(param.enable)\n        req.setDiscount(param.discount)\n        req.setSort(param.sort)\n        req.setNote(param.note)\n\n        const metadata = {'token': getToken()};\n        this.client.savePayChannel(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 查询支付参数\n    async getPayConfigList (param, callback) {\n        const req = new this.proto.PayConfigListRequest();\n        req.setAreaId(param.areaId)\n\n        const metadata = {'token': getToken()};\n        this.client.getPayConfigList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 保存支付参数\n    async savePayConfig (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.PayConfig()\n        }\n        req.setAreaId(param.areaId)\n        req.setType(param.type)\n        req.setAppId(param.appId)\n        req.setAppSecret(param.appSecret)\n        req.setRedirectUrl(param.redirectUrl)\n        req.setCallbackUrl(param.callbackUrl)\n        req.setExtra1(param.extra1)\n        req.setExtra2(param.extra2)\n        req.setExtra3(param.extra3)\n\n        const metadata = {'token': getToken()};\n        this.client.savePayConfig(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 查询国家配置\n    async getCountryConfigList (param, callback) {\n        const req = new this.proto.CountryConfigListRequest();\n        req.setAreaId(param.areaId)\n\n        const metadata = {'token': getToken()};\n        this.client.getCountryConfigList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 保存国家配置\n    async saveCountryConfig (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.CountryConfig()\n        }\n        req.setAreaId(param.areaId)\n        req.setCountry(param.country)\n        req.setEnable(param.enable)\n        req.setTitle(param.title)\n        req.setName(param.name)\n        req.setCurrency(param.currency)\n        req.setIcon(param.icon)\n        req.setExchangeRate(param.exchangeRate)\n        req.setApproximationsList(param.approximations)\n        req.setPayChannelIdsList(param.payChannelIds)\n        req.setSort(param.sort)\n\n        const metadata = {'token': getToken()};\n        this.client.saveCountryConfig(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 查询应用列表\n    async getAppList (param, callback) {\n        const req = new this.proto.CountryConfigListRequest();\n        req.setAreaId(param.areaId)\n\n        const metadata = {'token': getToken()};\n        this.client.getAppList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 保存应用\n    async saveApp (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.App()\n        }\n        req.setId(param.id)\n        req.setOsType(param.osType)\n        req.setAppKey(param.appKey)\n        req.setEnable(param.enable)\n        req.setTitle(param.title)\n        req.setIsAnchor(param.isAnchor)\n        req.setBundleId(param.bundleId)\n        req.setStoreCred(param.storeCred)\n        req.setApiAddr(param.apiAddr)\n        req.setNote(param.note)\n        req.setAreaIdsList(param.areaIds)\n\n        const metadata = {'token': getToken()};\n        this.client.saveApp(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 获取商品配置\n    async getCommodityList (param, callback) {\n        const req = new this.proto.CommodityListRequest();\n        req.setAreaId(param.areaId)\n        req.setAppId(param.appId)\n        req.setIsSubscription(param.isSubscription)\n\n        const metadata = {'token': getToken()};\n        this.client.getCommodityList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 保存商品\n    async saveCommodity (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.Commodity()\n        }\n        req.setId(param.id)\n        req.setAppId(param.appId)\n        req.setAreaId(param.areaId)\n        req.setEnable(param.enable)\n        req.setTitle(param.title)\n        req.setName(param.name)\n        req.setSku(param.sku)\n        req.setPrice(param.price)\n        req.setCurrency(param.currency)\n        req.setDiscount(param.discount)\n        req.setIcon(param.icon)\n        req.setAmount(param.amount)\n        req.setBonus(param.bonus)\n        req.setVipDays(param.vipDays)\n        req.setSort(param.sort)\n        req.setIsSubscription(param.isSubscription)\n        req.setIsFirstReward(param.isFirstReward)\n\n        const metadata = {'token': getToken()};\n        this.client.saveCommodity(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 获取版本列表\n    async getVersionList (param, callback) {\n        const req = new this.proto.VersionListRequest();\n        req.setAppId(param.appId)\n\n        const metadata = {'token': getToken()};\n        this.client.getVersionList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 保存商品\n    async saveVersion (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.Version()\n        }\n        req.setId(param.id)\n        req.setAppId(param.appId)\n        req.setOsType(param.osType)\n        req.setCode(param.code)\n        req.setName(param.name)\n        req.setEnable(param.enable)\n        req.setInReview(param.inReview)\n        req.setNote(param.note)\n\n        const metadata = {'token': getToken()};\n        this.client.saveVersion(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 获取签到配置\n    async getCheckinConfig (param, callback) {\n        const req = new this.proto.CheckinConfigRequest();\n        req.setAppId(param.appId)\n        req.setAreaId(param.areaId)\n\n        const metadata = {'token': getToken()};\n        this.client.getCheckinConfig(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 保存签到配置\n    async saveCheckinConfig (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.CheckinConfig()\n        }\n        req.setId(param.id)\n        req.setAppId(param.appId)\n        req.setAreaId(param.areaId)\n        req.setBonus(param.bonus)\n        req.setVipDays(param.vipDays)\n        req.setMatches(param.matches)\n        req.setWeight(param.weight)\n        req.setSort(param.sort)\n\n        const metadata = {'token': getToken()};\n        this.client.saveCheckinConfig(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 获取vip配置\n    async getVipConfig (param, callback) {\n        const req = new this.proto.VipConfigRequest();\n        req.setAppId(param.appId)\n        req.setAreaId(param.areaId)\n\n        const metadata = {'token': getToken()};\n        this.client.getVipConfig(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 保存vip配置\n    async saveVipConfig (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.CheckinConfig()\n        }\n        req.setId(param.id)\n        req.setAppId(param.appId)\n        req.setAreaId(param.areaId)\n        req.setTitle(param.title)\n        req.setDays(param.days)\n        req.setPrice(param.price)\n        req.setDiscount(param.discount)\n        req.setEnable(param.enable)\n        req.setSort(param.sort)\n\n        const metadata = {'token': getToken()};\n        this.client.saveVipConfig(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n}\n"]}]}