{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/thread-loader/dist/cjs.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/anchor.js","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/anchor.js","mtime":1630137686918},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvbWVuZ3kvZGV2ZWxvcC9pd29yay9rYWZvL3Z1ZS1hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvbWVuZ3kvZGV2ZWxvcC9pd29yay9rYWZvL3Z1ZS1hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9ob21lL21lbmd5L2RldmVsb3AvaXdvcmsva2Fmby92dWUtYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IHsgc2V0VG9rZW4sIGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9jb29raWUnOwppbXBvcnQgeyBFbnRpdHlUeXBlIH0gZnJvbSAiQC9wcm90by9qcy91c2VydHlwZV9wYiI7Cgp2YXIgX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIF9kZWZhdWx0KGRlcHMpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBfZGVmYXVsdCk7CgogICAgdGhpcy5wcm90byA9IGRlcHMucHJvdG87CiAgICB0aGlzLmNsaWVudCA9IG5ldyBkZXBzLnByb3RvLkNtc0NsaWVudCgiaHR0cDovLzQzLjEzMi4xNjkuMjM5OjEwMDAwIiwgbnVsbCwgbnVsbCk7CiAgfQogIC8qKgogICAqIOafpeivouS4u+aSreWIl+ihqAogICAqIEBwYXJhbSBwYWdlCiAgICogQHBhcmFtIHBhcmFtCiAgICogQHBhcmFtIGNhbGxiYWNrCiAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59CiAgICovCgoKICBfY3JlYXRlQ2xhc3MoX2RlZmF1bHQsIFt7CiAgICBrZXk6ICJnZXRBbmNob3JMaXN0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0QW5jaG9yTGlzdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShwYXJhbSwgY2FsbGJhY2spIHsKICAgICAgICB2YXIgcmVxLCBtZXRhZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICByZXEgPSBuZXcgdGhpcy5wcm90by5BbmNob3JMaXN0UmVxdWVzdCgpOwogICAgICAgICAgICAgICAgcmVxLnNldFBhZ2VObyhwYXJhbS5wYWdlLmN1cnJlbnRQYWdlKTsKICAgICAgICAgICAgICAgIHJlcS5zZXRQYWdlU2l6ZShwYXJhbS5wYWdlLnBhZ2VTaXplKTsKICAgICAgICAgICAgICAgIHJlcS5zZXRBbmNob3JJZChwYXJhbS5hbmNob3JJZCk7CiAgICAgICAgICAgICAgICByZXEuc2V0QXJlYUlkKHBhcmFtLmFyZWFJZCk7CiAgICAgICAgICAgICAgICByZXEuc2V0R3VpbGRJZChwYXJhbS5ndWlsZElkKTsKICAgICAgICAgICAgICAgIHJlcS5zZXRCbG9ja1N0YXR1cyhwYXJhbS5ibG9ja1N0YXR1cyk7CiAgICAgICAgICAgICAgICByZXEuc2V0T25saW5lU3RhdHVzKHBhcmFtLm9ubGluZVN0YXR1cyk7CiAgICAgICAgICAgICAgICByZXEuc2V0Q3JlYXRlZFN0YXJ0KHBhcmFtLmNyZWF0ZWRTdGFydCk7CiAgICAgICAgICAgICAgICByZXEuc2V0Q3JlYXRlZEVuZChwYXJhbS5jcmVhdGVkRW5kKTsKICAgICAgICAgICAgICAgIG1ldGFkYXRhID0gewogICAgICAgICAgICAgICAgICAndG9rZW4nOiBnZXRUb2tlbigpCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgdGhpcy5jbGllbnQuZ2V0QW5jaG9yTGlzdChyZXEsIG1ldGFkYXRhLCBmdW5jdGlvbiAoZXJyLCByZXNwKSB7CiAgICAgICAgICAgICAgICAgIGlmICghZXJyKSB7CiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2socmVzcCk7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0QW5jaG9yTGlzdChfeCwgX3gyKSB7CiAgICAgICAgcmV0dXJuIF9nZXRBbmNob3JMaXN0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRBbmNob3JMaXN0OwogICAgfSgpCiAgICAvKioKICAgICAqIOWFheWAvAogICAgICovCgogIH0sIHsKICAgIGtleTogImFkanVzdEJhbGFuY2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9hZGp1c3RCYWxhbmNlID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihwYXJhbSwgY2FsbGJhY2spIHsKICAgICAgICB2YXIgcmVxLCBtZXRhZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgcmVxID0gbmV3IHRoaXMucHJvdG8uQWRqdXN0QmFsYW5jZVJlcXVlc3QoKTsKICAgICAgICAgICAgICAgIHJlcS5zZXRFbnRpdHlUeXBlKHRoaXMucHJvdG8uRW50aXR5VHlwZS5FTlRJVFlVU0VSKTsKICAgICAgICAgICAgICAgIHJlcS5zZXRFbnRpdHlJZChwYXJhbS5pZCk7CiAgICAgICAgICAgICAgICByZXEuc2V0QW1vdW50KHBhcmFtLmFtb3VudCk7CiAgICAgICAgICAgICAgICByZXEuc2V0U2VuZE5vdGlmeShwYXJhbS5zZW5kTm90aWZ5KTsKICAgICAgICAgICAgICAgIHJlcS5zZXREZXNjKHBhcmFtLmRlc2MpOwogICAgICAgICAgICAgICAgbWV0YWRhdGEgPSB7CiAgICAgICAgICAgICAgICAgICd0b2tlbic6IGdldFRva2VuKCkKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB0aGlzLmNsaWVudC5hZGp1c3RCYWxhbmNlKHJlcSwgbWV0YWRhdGEsIGZ1bmN0aW9uIChlcnIsIHJlc3ApIHsKICAgICAgICAgICAgICAgICAgaWYgKCFlcnIpIHsKICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhyZXNwKTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gYWRqdXN0QmFsYW5jZShfeDMsIF94NCkgewogICAgICAgIHJldHVybiBfYWRqdXN0QmFsYW5jZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gYWRqdXN0QmFsYW5jZTsKICAgIH0oKQogIH1dKTsKCiAgcmV0dXJuIF9kZWZhdWx0Owp9KCk7CgpleHBvcnQgeyBfZGVmYXVsdCBhcyBkZWZhdWx0IH07"},null]}