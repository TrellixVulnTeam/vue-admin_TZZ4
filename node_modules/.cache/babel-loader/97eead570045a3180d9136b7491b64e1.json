{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js??ref--13-0!/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/anchor.js","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/anchor.js","mtime":1635305858998},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/anchor.js"],"names":["setToken","getToken","error","deps","proto","client","CmsClient","process","env","VUE_APP_GRPC_PROXY_URI","param","callback","req","AnchorListRequest","setPageNo","page","currentPage","setPageSize","pageSize","setAnchorId","anchorId","setAreaId","areaId","setAppId","appId","setGuildId","guildId","setBlockStatus","blockStatus","setOnlineStatus","onlineStatus","setReviewStatus","reviewStatus","setCreatedStart","createdStartUint","setCreatedEnd","createdEndUint","metadata","getAnchorList","err","resp","AnchorFullRequest","id","getAnchorFull","struct","setId","setLevel","level","setNote","note","setBankName","bankName","setAccountName","accountName","setBankAccount","bankAccount","updateAnchorBasic","AuthorizeAnchorRequest","authorizeAnchor","BlockRequest","setEntityType","entityType","setEntityId","entityId","setDuration","duration","setReason","reason","block","UnblockRequest","unblock","MigrateRequest","setSrcId","srcId","setDstId","dstId","migrate"],"mappings":"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","sourcesContent":["import {setToken, getToken} from '@/utils/cookie'\nimport { error } from '@/utils/error'\n\nexport default class {\n    constructor (deps) {\n        this.proto = deps.proto\n        this.client = new deps.proto.CmsClient(process.env.VUE_APP_GRPC_PROXY_URI, null, null)\n    }\n\n\n    // 查询主播列表\n    async getAnchorList (param, callback) {\n        const req = new this.proto.AnchorListRequest()\n        req.setPageNo(param.page.currentPage)\n        req.setPageSize(param.page.pageSize)\n        req.setAnchorId(param.anchorId)\n        req.setAreaId(param.areaId)\n        req.setAppId(param.appId)\n        req.setGuildId(param.guildId)\n        req.setBlockStatus(param.blockStatus)\n        req.setOnlineStatus(param.onlineStatus)\n        req.setReviewStatus(param.reviewStatus)\n        req.setCreatedStart(param.createdStartUint)\n        req.setCreatedEnd(param.createdEndUint)\n\n        const metadata = {'token': getToken()};\n        this.client.getAnchorList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    async getAnchorFull ( param, callback) {\n        const req = new this.proto.AnchorFullRequest()\n        req.setAnchorId(param.id)\n\n        const metadata = {'token': getToken()};\n        this.client.getAnchorFull(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 更新主播基础信息\n    async updateAnchorBasic (param, callback) {\n        const req = param.struct\n        req.setId(param.id)\n        req.setGuildId(param.guildId)\n        req.setAreaId(param.areaId)\n        req.setLevel(param.level)\n        req.setNote(param.note)\n        req.setReviewStatus(param.reviewStatus)\n        req.setBankName(param.bankName)\n        req.setAccountName(param.accountName)\n        req.setBankAccount(param.bankAccount)\n\n        const metadata = {'token': getToken()};\n        this.client.updateAnchorBasic(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 认证主播\n    async authorizeAnchor (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.AuthorizeAnchorRequest()\n        }\n        req.setAnchorId(param.anchorId)\n        req.setAreaId(param.areaId)\n        req.setGuildId(param.guildId)\n\n        const metadata = {'token': getToken()};\n        this.client.authorizeAnchor(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(true)\n            } else {\n                error(err)\n                callback(false)\n            }\n        })\n    }\n\n\n    // 封禁\n    async block (param, callback) {\n        let req = new this.proto.BlockRequest()\n        req.setEntityType(param.entityType)\n        req.setEntityId(param.entityId)\n        req.setBlockStatus(param.blockStatus)\n        req.setDuration(param.duration)\n        req.setReason(param.reason)\n\n        const metadata = {'token': getToken()};\n        this.client.block(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(true)\n            } else {\n                error(err)\n                callback(false)\n            }\n        })\n    }\n\n\n    // 解封\n    async unblock (param, callback) {\n        let req = new this.proto.UnblockRequest()\n        req.setEntityType(param.entityType)\n        req.setEntityId(param.entityId)\n\n        const metadata = {'token': getToken()};\n        this.client.unblock(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(true)\n            } else {\n                error(err)\n                callback(false)\n            }\n        })\n    }\n\n\n    // 账户迁移\n    async migrate (param, callback) {\n        let req = new this.proto.MigrateRequest()\n        req.setEntityType(param.entityType)\n        req.setSrcId(param.srcId)\n        req.setDstId(param.dstId)\n\n        const metadata = {'token': getToken()};\n        this.client.migrate(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(true)\n            } else {\n                error(err)\n                callback(false)\n            }\n        })\n    }\n\n\n}\n"]}]}