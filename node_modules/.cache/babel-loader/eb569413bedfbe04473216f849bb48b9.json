{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js??ref--13-0!/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/config.js","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/config.js","mtime":1632485799851},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/config.js"],"names":["setToken","getToken","error","OsType","deps","proto","client","CmsClient","process","env","VUE_APP_GRPC_PROXY_URI","param","callback","req","AreaConfigListRequest","setAreaId","areaId","setAppId","appId","metadata","getAreaConfigList","err","resp","struct","AreaConfig","setConvertRate","convertRate","setDepositCommission","depositCommission","setRewardCommission","rewardCommission","setCallPrice","callPrice","setFreeMessageCount","freeMessageCount","setNewUserReward","newUserReward","setHeartbeatInterval","heartbeatInterval","setPayTypesList","payTypes","setPayChannelIdsList","payChannelIds","setCdn","cdn","setDndPeriod","dndPeriod","setTagsList","tags","setAnchorExchangeRate","anchorExchangeRate","saveAreaConfig","PayChannelListRequest","setPayType","payType","getPayChannelList","PayChannel","setOsType","osType","setChannel","channel","setTitle","title","setName","name","setIcon","icon","setEnable","enable","setDiscount","discount","setSort","sort","setNote","note","savePayChannel","PayConfigListRequest","getPayConfigList","setType","type","setAppSecret","appSecret","setRedirectUrl","redirectUrl","setCallbackUrl","callbackUrl","setExtea1","extra1","setExtea2","extra2","setExtea3","extra3","CountryConfigListRequest","getCountryConfigList","CountryConfig","setCountry","country","setCurrency","currency","setExchangeRate","exchangeRate","setApproximationsList","approximations","saveCountryConfig","getAppList","App","setId","id","setAppKey","appKey","setIsAnchor","isAnchor","setBundleId","bundleId","setStoreCred","storeCred","setApiAddr","apiAddr","setAreaIdsList","areaIds","saveApp","CommodityListRequest","setIsSubscription","isSubscription","getCommodityList","Commodity","setSku","sku","setPrice","price","setAmount","amount","setBonus","bonus","setVipDays","vipDays","saveCommodity","VersionListRequest","getVersionList","Version","setCode","code","setInReview","inReview","saveVersion"],"mappings":"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","sourcesContent":["import {setToken, getToken} from '@/utils/cookie'\nimport { error } from '@/utils/error'\nimport {OsType} from \"@/proto/js/usertype_pb\";\n\nexport default class {\n    constructor (deps) {\n        this.proto = deps.proto\n        this.client = new deps.proto.CmsClient(process.env.VUE_APP_GRPC_PROXY_URI, null, null)\n    }\n\n\n    // 查询区域列表\n    async getAreaConfigList (param, callback) {\n        const req = new this.proto.AreaConfigListRequest();\n        req.setAreaId(param.areaId)\n        req.setAppId(param.appId)\n\n        const metadata = {'token': getToken()};\n        this.client.getAreaConfigList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 保存区域配置\n    async saveAreaConfig (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.AreaConfig()\n        }\n        req.setAppId(param.appId)\n        req.setAreaId(param.areaId)\n        req.setConvertRate(param.convertRate)\n        req.setDepositCommission(param.depositCommission)\n        req.setRewardCommission(param.rewardCommission)\n        req.setCallPrice(param.callPrice)\n        req.setFreeMessageCount(param.freeMessageCount)\n        req.setNewUserReward(param.newUserReward)\n        req.setHeartbeatInterval(param.heartbeatInterval)\n        req.setPayTypesList(param.payTypes)\n        req.setPayChannelIdsList(param.payChannelIds)\n        req.setCdn(param.cdn)\n        req.setDndPeriod(param.dndPeriod)\n        req.setTagsList(param.tags)\n        req.setAnchorExchangeRate(param.anchorExchangeRate)\n\n        const metadata = {'token': getToken()}\n        this.client.saveAreaConfig(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(true)\n            } else {\n                callback(false)\n                error(err)\n            }\n        })\n    }\n\n\n    // 查询支付渠道\n    async getPayChannelList (param, callback) {\n        const req = new this.proto.PayChannelListRequest();\n        req.setAreaId(param.areaId)\n        req.setPayType(param.payType)\n\n        const metadata = {'token': getToken()};\n        this.client.getPayChannelList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 保存支付渠道配置\n    async savePayChannel (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.PayChannel()\n        }\n        req.setAreaId(param.areaId)\n        req.setOsType(param.osType)\n        req.setPayType(param.payType)\n        req.setChannel(param.channel)\n        req.setTitle(param.title)\n        req.setName(param.name)\n        req.setIcon(param.icon)\n        req.setEnable(param.enable)\n        req.setDiscount(param.discount)\n        req.setSort(param.sort)\n        req.setNote(param.note)\n\n        const metadata = {'token': getToken()};\n        this.client.savePayChannel(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 查询支付参数\n    async getPayConfigList (param, callback) {\n        const req = new this.proto.PayConfigListRequest();\n        req.setAreaId(param.areaId)\n\n        const metadata = {'token': getToken()};\n        this.client.getPayConfigList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 保存支付参数\n    async savePayConfig (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.PayChannel()\n        }\n        req.setAreaId(param.areaId)\n        req.setType(param.type)\n        req.setAppId(param.appId)\n        req.setTitle(param.title)\n        req.setAppSecret(param.appSecret)\n        req.setRedirectUrl(param.redirectUrl)\n        req.setCallbackUrl(param.callbackUrl)\n        req.setExtea1(param.extra1)\n        req.setExtea2(param.extra2)\n        req.setExtea3(param.extra3)\n\n        const metadata = {'token': getToken()};\n        this.client.savePayChannel(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 查询国家配置\n    async getCountryConfigList (param, callback) {\n        const req = new this.proto.CountryConfigListRequest();\n        req.setAreaId(param.areaId)\n\n        const metadata = {'token': getToken()};\n        this.client.getCountryConfigList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 保存国家配置\n    async saveCountryConfig (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.CountryConfig()\n        }\n        req.setAreaId(param.areaId)\n        req.setCountry(param.country)\n        req.setEnable(param.enable)\n        req.setTitle(param.title)\n        req.setName(param.name)\n        req.setCurrency(param.currency)\n        req.setIcon(param.icon)\n        req.setExchangeRate(param.exchangeRate)\n        req.setApproximationsList(param.approximations)\n        req.setPayChannelIdsList(param.payChannelIds)\n        req.setSort(param.sort)\n\n        const metadata = {'token': getToken()};\n        this.client.saveCountryConfig(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 查询应用列表\n    async getAppList (param, callback) {\n        const req = new this.proto.CountryConfigListRequest();\n        req.setAreaId(param.areaId)\n\n        const metadata = {'token': getToken()};\n        this.client.getAppList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    // 保存应用\n    async saveApp (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.App()\n        }\n        req.setId(param.id)\n        req.setOsType(param.osType)\n        req.setAppKey(param.appKey)\n        req.setEnable(param.enable)\n        req.setTitle(param.title)\n        req.setIsAnchor(param.isAnchor)\n        req.setBundleId(param.bundleId)\n        req.setStoreCred(param.storeCred)\n        req.setApiAddr(param.apiAddr)\n        req.setNote(param.note)\n        req.setAreaIdsList(param.areaIds)\n\n        const metadata = {'token': getToken()};\n        this.client.saveApp(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 获取商品配置\n    async getCommodityList (param, callback) {\n        const req = new this.proto.CommodityListRequest();\n        req.setAreaId(param.areaId)\n        req.setAppId(param.appId)\n        req.setIsSubscription(param.isSubscription)\n\n        const metadata = {'token': getToken()};\n        this.client.getCommodityList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 保存商品\n    async saveCommodity (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.Commodity()\n        }\n        req.setId(param.id)\n        req.setAppId(param.appId)\n        req.setAreaId(param.areaId)\n        req.setEnable(param.enable)\n        req.setTitle(param.title)\n        req.setName(param.name)\n        req.setSku(param.sku)\n        req.setPrice(param.price)\n        req.setCurrency(param.currency)\n        req.setDiscount(param.discount)\n        req.setIcon(param.icon)\n        req.setAmount(param.amount)\n        req.setBonus(param.bonus)\n        req.setVipDays(param.vipDays)\n        req.setSort(param.sort)\n        req.setIsSubscription(param.isSubscription)\n\n        const metadata = {'token': getToken()};\n        this.client.saveCommodity(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 获取版本列表\n    async getVersionList (param, callback) {\n        const req = new this.proto.VersionListRequest();\n        req.setAppId(param.appId)\n\n        const metadata = {'token': getToken()};\n        this.client.getVersionList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    // 保存商品\n    async saveVersion (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.Version()\n        }\n        req.setId(param.id)\n        req.setAppId(param.appId)\n        req.setOsType(param.osType)\n        req.setCode(param.code)\n        req.setName(param.name)\n        req.setEnable(param.enable)\n        req.setInReview(param.inReview)\n        req.setNote(param.note)\n\n        const metadata = {'token': getToken()};\n        this.client.saveVersion(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n}\n"]}]}