{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/thread-loader/dist/cjs.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/anchor.js","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/anchor.js","mtime":1630296584671},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvbWVuZ3kvZGV2ZWxvcC9pd29yay9rYWZvL3Z1ZS1hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvbWVuZ3kvZGV2ZWxvcC9pd29yay9rYWZvL3Z1ZS1hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9ob21lL21lbmd5L2RldmVsb3AvaXdvcmsva2Fmby92dWUtYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IHsgc2V0VG9rZW4sIGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9jb29raWUnOwppbXBvcnQgeyBlcnJvciB9IGZyb20gJ0AvdXRpbHMvZXJyb3InOwoKdmFyIF9kZWZhdWx0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBfZGVmYXVsdChkZXBzKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgX2RlZmF1bHQpOwoKICAgIHRoaXMucHJvdG8gPSBkZXBzLnByb3RvOwogICAgdGhpcy5jbGllbnQgPSBuZXcgZGVwcy5wcm90by5DbXNDbGllbnQoImh0dHA6Ly9sb2NhbGhvc3Q6MTAwMDAiLCBudWxsLCBudWxsKTsKICB9CiAgLyoqCiAgICog5p+l6K+i5Li75pKt5YiX6KGoCiAgICogQHBhcmFtIHBhZ2UKICAgKiBAcGFyYW0gcGFyYW0KICAgKiBAcGFyYW0gY2FsbGJhY2sKICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn0KICAgKi8KCgogIF9jcmVhdGVDbGFzcyhfZGVmYXVsdCwgW3sKICAgIGtleTogImdldEFuY2hvckxpc3QiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXRBbmNob3JMaXN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHBhcmFtLCBjYWxsYmFjaykgewogICAgICAgIHZhciByZXEsIG1ldGFkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHJlcSA9IG5ldyB0aGlzLnByb3RvLkFuY2hvckxpc3RSZXF1ZXN0KCk7CiAgICAgICAgICAgICAgICByZXEuc2V0UGFnZU5vKHBhcmFtLnBhZ2UuY3VycmVudFBhZ2UpOwogICAgICAgICAgICAgICAgcmVxLnNldFBhZ2VTaXplKHBhcmFtLnBhZ2UucGFnZVNpemUpOwogICAgICAgICAgICAgICAgcmVxLnNldEFuY2hvcklkKHBhcmFtLmFuY2hvcklkKTsKICAgICAgICAgICAgICAgIHJlcS5zZXRBcmVhSWQocGFyYW0uYXJlYUlkKTsKICAgICAgICAgICAgICAgIHJlcS5zZXRHdWlsZElkKHBhcmFtLmd1aWxkSWQpOwogICAgICAgICAgICAgICAgcmVxLnNldEJsb2NrU3RhdHVzKHBhcmFtLmJsb2NrU3RhdHVzKTsKICAgICAgICAgICAgICAgIHJlcS5zZXRPbmxpbmVTdGF0dXMocGFyYW0ub25saW5lU3RhdHVzKTsKICAgICAgICAgICAgICAgIHJlcS5zZXRDcmVhdGVkU3RhcnQocGFyYW0uY3JlYXRlZFN0YXJ0KTsKICAgICAgICAgICAgICAgIHJlcS5zZXRDcmVhdGVkRW5kKHBhcmFtLmNyZWF0ZWRFbmQpOwogICAgICAgICAgICAgICAgbWV0YWRhdGEgPSB7CiAgICAgICAgICAgICAgICAgICd0b2tlbic6IGdldFRva2VuKCkKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB0aGlzLmNsaWVudC5nZXRBbmNob3JMaXN0KHJlcSwgbWV0YWRhdGEsIGZ1bmN0aW9uIChlcnIsIHJlc3ApIHsKICAgICAgICAgICAgICAgICAgaWYgKCFlcnIpIHsKICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhyZXNwKTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBlcnJvcihlcnIpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRBbmNob3JMaXN0KF94LCBfeDIpIHsKICAgICAgICByZXR1cm4gX2dldEFuY2hvckxpc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldEFuY2hvckxpc3Q7CiAgICB9KCkKICAgIC8qKgogICAgICog5pu05paw5Li75pKt5Z+656GA5L+h5oGvCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAidXBkYXRlQW5jaG9yQmFzaWMiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF91cGRhdGVBbmNob3JCYXNpYyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocGFyYW0sIGNhbGxiYWNrKSB7CiAgICAgICAgdmFyIHJlcSwgbWV0YWRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHJlcSA9IHBhcmFtLnN0cnVjdDsKICAgICAgICAgICAgICAgIHJlcS5zZXRJZChwYXJhbS5pZCk7CiAgICAgICAgICAgICAgICByZXEuc2V0R3VpbGRJZChwYXJhbS5ndWlsZElkKTsKICAgICAgICAgICAgICAgIHJlcS5zZXRBcmVhSWQocGFyYW0uYXJlYUlkKTsKICAgICAgICAgICAgICAgIHJlcS5zZXRMZXZlbChwYXJhbS5sZXZlbCk7CiAgICAgICAgICAgICAgICByZXEuc2V0Tm90ZShwYXJhbS5ub3RlKTsKICAgICAgICAgICAgICAgIG1ldGFkYXRhID0gewogICAgICAgICAgICAgICAgICAndG9rZW4nOiBnZXRUb2tlbigpCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgdGhpcy5jbGllbnQudXBkYXRlQW5jaG9yQmFzaWMocmVxLCBtZXRhZGF0YSwgZnVuY3Rpb24gKGVyciwgcmVzcCkgewogICAgICAgICAgICAgICAgICBpZiAoIWVycikgewogICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKHJlc3ApOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGVycm9yKGVycik7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiB1cGRhdGVBbmNob3JCYXNpYyhfeDMsIF94NCkgewogICAgICAgIHJldHVybiBfdXBkYXRlQW5jaG9yQmFzaWMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHVwZGF0ZUFuY2hvckJhc2ljOwogICAgfSgpCiAgfV0pOwoKICByZXR1cm4gX2RlZmF1bHQ7Cn0oKTsKCmV4cG9ydCB7IF9kZWZhdWx0IGFzIGRlZmF1bHQgfTs="},null]}