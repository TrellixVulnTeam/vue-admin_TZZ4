{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js??ref--13-0!/home/mengy/develop/iwork/kafo/vue-admin/src/request.js","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/request.js","mtime":1631098707885},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4b2lzIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJy4vdXRpbHMvY29va2llJzsKLyoKCi8vIOWIm+W7umF4aW9z5a6e5L6LCmNvbnN0IHNlcnZpY2UgPSBheG9pcy5jcmVhdGUoewogICAgLy9iYXNlVVJMOiBwcm9jZXNzLmVudi5WVUVfQVBQX0JBU0VfQVBJLCAvLyBhcGkg55qEIGJhc2VfdXJsCiAgICB0aW1lb3V0OiAxMjAwMDAgLy8g6K+35rGC6LaF5pe25pe26Ze0Cn0pCgovLyByZXF1ZXN05oum5oiq5Zmo6K6+572uCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKAogICAgY29uZmlnID0+IHsKICAgICAgICBpZiAoZ2V0VG9rZW4oKSkgewogICAgICAgICAgICBjb25maWcuaGVhZGVyc1snQXV0aG9yaXphdGlvbiddID0gJ0JlYXJlciAnICsgZ2V0VG9rZW4oKSAvLyDor7fmsYLlpLTorr7nva7oh6rluKYgdG9rZW4KICAgICAgICB9CiAgICAgICAgY29uZmlnLmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb24nIC8vIOivt+axgueahOaVsOaNruagvOW8j+S4uiBqc29uCiAgICAgICAgcmV0dXJuIGNvbmZpZwogICAgfSwKICAgIGVycm9yID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICAgICBQcm9taXNlLnJlamVjdChlcnJvcikKICAgIH0KKQoKLy8gcmVzcG9uc2Ug5oum5oiq5Zmo6K6+572uCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZSgKICAgIHJlc3BvbnNlID0+IHsKICAgICAgICBjb25zdCBkYXRhID0gcmVzcG9uc2UuZGF0YQogICAgICAgIGNvbnN0IGNvZGUgPSBkYXRhLmNvZGUKICAgICAgICBjb25zdCBtZXNzYWdlID0gZGF0YS5tc2cKICAgICAgICBpZiAoY29kZSA9PT0gMCkgewogICAgICAgICAgICByZXR1cm4gZGF0YS5kYXRhCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgTWVzc2FnZSh7CiAgICAgICAgICAgICAgICB0eXBlOiAnZXJyb3InLAogICAgICAgICAgICAgICAgbWVzc2FnZQogICAgICAgICAgICB9KQogICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ2Vycm9yJykKICAgICAgICB9CiAgICB9LAogICAgZXJyb3IgPT4gewogICAgICAgIGNvbnN0IGNvZGUgPSBlcnJvci5yZXNwb25zZS5kYXRhLnN0YXR1cwogICAgICAgIGlmICghY29kZSkgewogICAgICAgICAgICBNZXNzYWdlKHsKICAgICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAn5o6l5Y+j6K+35rGC5aSx6LSlJwogICAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpCiAgICB9CikKCmV4cG9ydCBkZWZhdWx0IHNlcnZpY2UKKi8="},{"version":3,"sources":["/home/mengy/develop/iwork/kafo/vue-admin/src/request.js"],"names":["axois","Message","getToken"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axois from 'axios'\nimport {Message} from 'element-ui'\nimport {getToken} from './utils/cookie'\n/*\n\n// 创建axios实例\nconst service = axois.create({\n    //baseURL: process.env.VUE_APP_BASE_API, // api 的 base_url\n    timeout: 120000 // 请求超时时间\n})\n\n// request拦截器设置\nservice.interceptors.request.use(\n    config => {\n        if (getToken()) {\n            config.headers['Authorization'] = 'Bearer ' + getToken() // 请求头设置自带 token\n        }\n        config.headers['Content-Type'] = 'application/json' // 请求的数据格式为 json\n        return config\n    },\n    error => {\n        console.log(error)\n        Promise.reject(error)\n    }\n)\n\n// response 拦截器设置\nservice.interceptors.response.use(\n    response => {\n        const data = response.data\n        const code = data.code\n        const message = data.msg\n        if (code === 0) {\n            return data.data\n        } else {\n            Message({\n                type: 'error',\n                message\n            })\n            return Promise.reject('error')\n        }\n    },\n    error => {\n        const code = error.response.data.status\n        if (!code) {\n            Message({\n                type: 'error',\n                message: '接口请求失败'\n            })\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport default service\n*/\n"]}]}