{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js??ref--13-0!/home/mengy/develop/iwork/kafo/vue-admin/src/utils/excel.js","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/utils/excel.js","mtime":1626074721839},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9tZW5neS9kZXZlbG9wL2l3b3JrL2thZm8vdnVlLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LWJ1ZmZlci5jb25zdHJ1Y3RvciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXkiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbiIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5Iik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4Iik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2giKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZiIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZSIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZSIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0Iik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nIik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZXhwb3J0RGF0YVRvRXhjZWwgPSBleHBvcnREYXRhVG9FeGNlbDsKZXhwb3J0cy5yZWFkRGF0YUZyb21FeGNlbCA9IHJlYWREYXRhRnJvbUV4Y2VsOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7Cgp2YXIgX3hsc3ggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInhsc3giKSk7Cgp2YXIgX2ZpbGVTYXZlciA9IHJlcXVpcmUoImZpbGUtc2F2ZXIiKTsKCi8vIOiHquWKqOWuveW6puiuoeeulwpmdW5jdGlvbiBBdXRvV2lkdGgod3MsIGFycikgewogIC8vIOiuvue9rndvcmtzaGVldOavj+WIl+eahOacgOWkp+WuveW6pgogIHZhciBjb2xXaWR0aCA9IGFyci5tYXAoZnVuY3Rpb24gKHJvdykgewogICAgcmV0dXJuIHJvdy5tYXAoZnVuY3Rpb24gKHZhbCkgewogICAgICAvLyDliKTmlq3mmK/lkKbkuLpudWxsL3VuZGVmaW5lZAogICAgICBpZiAodmFsID09IG51bGwpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgd2NoOiAxMAogICAgICAgIH07CiAgICAgIH0gZWxzZSBpZiAodmFsLnRvU3RyaW5nKCkuY2hhckNvZGVBdCgwKSA+IDI1NSkgewogICAgICAgIC8vIOWIpOaWreaYr+WQpuS4uuS4reaWhwogICAgICAgIHJldHVybiB7CiAgICAgICAgICB3Y2g6IHZhbC50b1N0cmluZygpLmxlbmd0aCAqIDIKICAgICAgICB9OwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICB3Y2g6IHZhbC50b1N0cmluZygpLmxlbmd0aAogICAgICAgIH07CiAgICAgIH0KICAgIH0pOwogIH0pOyAvLyDku6XnrKzkuIDooYzkuLrliJ3lp4vlgLwKCiAgdmFyIHJlc3VsdCA9IGNvbFdpZHRoWzBdOwoKICBmb3IgKHZhciBpID0gMTsgaSA8IGNvbFdpZHRoLmxlbmd0aDsgaSsrKSB7CiAgICBmb3IgKHZhciBqID0gMDsgaiA8IGNvbFdpZHRoW2ldLmxlbmd0aDsgaisrKSB7CiAgICAgIGlmIChyZXN1bHRbal0ud2NoIDwgY29sV2lkdGhbaV1bal0ud2NoKSB7CiAgICAgICAgcmVzdWx0W2pdLndjaCA9IGNvbFdpZHRoW2ldW2pdLndjaDsKICAgICAgfQogICAgfQogIH0KCiAgd3NbJyFjb2xzJ10gPSByZXN1bHQ7Cn0gLy8g5pWw57uE6L2s5o2i5oiQSlNPTgoKCmZ1bmN0aW9uIGZvcm1hdEpTT04oa2V5LCBkYXRhKSB7CiAgcmV0dXJuIGRhdGEubWFwKGZ1bmN0aW9uICh2KSB7CiAgICByZXR1cm4ga2V5Lm1hcChmdW5jdGlvbiAoaSkgewogICAgICByZXR1cm4gdltpXTsKICAgIH0pOwogIH0pOwp9IC8vIOWtl+espuS4sui9rEFycmF5QnVmZmVyCgoKZnVuY3Rpb24gczJhYihzKSB7CiAgdmFyIGJ1ZiA9IG5ldyBBcnJheUJ1ZmZlcihzLmxlbmd0aCk7CiAgdmFyIHZpZXcgPSBuZXcgVWludDhBcnJheShidWYpOwoKICBmb3IgKHZhciBpID0gMDsgaSAhPT0gcy5sZW5ndGg7ICsraSkgewogICAgdmlld1tpXSA9IHMuY2hhckNvZGVBdChpKSAmIDB4RkY7CiAgfQoKICByZXR1cm4gYnVmOwp9IC8vIOWvvOWHukVYQ0VM6KGo5qC8CgoKZnVuY3Rpb24gZXhwb3J0RGF0YVRvRXhjZWwoKSB7CiAgdmFyIF9yZWYgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9LAogICAgICBoZWFkZXIgPSBfcmVmLmhlYWRlciwKICAgICAga2V5ID0gX3JlZi5rZXksCiAgICAgIGRhdGEgPSBfcmVmLmRhdGEsCiAgICAgIGZpbGVOYW1lID0gX3JlZi5maWxlTmFtZSwKICAgICAgX3JlZiRhdXRvV2lkdGggPSBfcmVmLmF1dG9XaWR0aCwKICAgICAgYXV0b1dpZHRoID0gX3JlZiRhdXRvV2lkdGggPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJGF1dG9XaWR0aCwKICAgICAgX3JlZiRib29rVHlwZSA9IF9yZWYuYm9va1R5cGUsCiAgICAgIGJvb2tUeXBlID0gX3JlZiRib29rVHlwZSA9PT0gdm9pZCAwID8gJ3hsc3gnIDogX3JlZiRib29rVHlwZTsKCiAgLy8g5Yib5bu6V29ya2Jvb2vlr7nosaEKICB2YXIgd2IgPSBfeGxzeC5kZWZhdWx0LnV0aWxzLmJvb2tfbmV3KCk7CgogIHZhciBhcnIgPSBmb3JtYXRKU09OKGtleSwgZGF0YSk7CiAgZmlsZU5hbWUgPSBmaWxlTmFtZSB8fCAnZXhjZWwtbGlzdCc7CiAgYXJyLnVuc2hpZnQoaGVhZGVyKTsgLy8g5bCG5pWw57uE5pWw5o2u6L2s5o2i5Li6d29ya3NoZWV0CgogIHZhciB3cyA9IF94bHN4LmRlZmF1bHQudXRpbHMuYW9hX3RvX3NoZWV0KGFycik7CgogIGlmIChhdXRvV2lkdGgpIHsKICAgIEF1dG9XaWR0aCh3cywgYXJyKTsKICB9IC8vIOWQkVdvcmtib29r5a+56LGh5Lit6L+95Yqgd29ya3NoZWV05ZKMZmlsZU5hbWUKCgogIF94bHN4LmRlZmF1bHQudXRpbHMuYm9va19hcHBlbmRfc2hlZXQod2IsIHdzLCBmaWxlTmFtZSk7IC8vIOeUn+aIkEVYQ0VM55qE6YWN572u6aG5CgoKICB2YXIgd2JvdXQgPSBfeGxzeC5kZWZhdWx0LndyaXRlKHdiLCB7CiAgICBib29rVHlwZTogYm9va1R5cGUsCiAgICBib29rU1NUOiBmYWxzZSwKICAgIHR5cGU6ICdiaW5hcnknCiAgfSk7IC8vIOa1j+iniOWZqOS4i+i9vQoKCiAgKDAsIF9maWxlU2F2ZXIuc2F2ZUFzKShuZXcgQmxvYihbczJhYih3Ym91dCldLCB7CiAgICB0eXBlOiAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJwogIH0pLCAiIi5jb25jYXQoZmlsZU5hbWUsICIuIikuY29uY2F0KGJvb2tUeXBlKSk7Cn0gLy8g5LuORXhjZWzmlofku7bkuK3ojrflj5booajmoLzlpLQKCgpmdW5jdGlvbiBnZXRIZWFkZXJSb3coc2hlZXQpIHsKICB2YXIgaGVhZGVycyA9IFtdOyAvLyDlsIYgQTE6Rzgg6L+Z56eN5a2X56ym5Liy6L2s5o2i5Li66KGM5YiX5a+56LGhCgogIHZhciByYW5nZSA9IF94bHN4LmRlZmF1bHQudXRpbHMuZGVjb2RlX3JhbmdlKHNoZWV0WychcmVmJ10pOwoKICB2YXIgQzsKICB2YXIgUiA9IHJhbmdlLnMucjsgLy8g5LuO56ys5LiA5YiX5byA5aeL77yM6YGN5Y6G6IyD5Zu05Lit55qE5q+P5LiA5YiXCgogIGZvciAoQyA9IHJhbmdlLnMuYzsgQyA8PSByYW5nZS5lLmM7ICsrQykgewogICAgLy8g5bCG6KGM5YiX5a+56LGh6L2s5o2i5Li6IEExIOi/meenjeWtl+espuS4sgogICAgdmFyIGNlbGwgPSBzaGVldFtfeGxzeC5kZWZhdWx0LnV0aWxzLmVuY29kZV9jZWxsKHsKICAgICAgYzogQywKICAgICAgcjogUgogICAgfSldOyAvLyDnlKjpu5jorqTlgLzmm7/mjaIKCgogICAgdmFyIGhkciA9ICdVTktOT1dOICcgKyBDOwogICAgaWYgKGNlbGwgJiYgY2VsbC50KSBoZHIgPSBfeGxzeC5kZWZhdWx0LnV0aWxzLmZvcm1hdF9jZWxsKGNlbGwpOwogICAgaGVhZGVycy5wdXNoKGhkcik7CiAgfQoKICByZXR1cm4gaGVhZGVyczsKfSAvLyDor7vlj5ZFeGNlbOaWh+S7tgoKCmZ1bmN0aW9uIHJlYWREYXRhRnJvbUV4Y2VsKGRhdGEsIHR5cGUpIHsKICAvLyDor7vlj5ZFeGNlbOaWh+S7tuW5tuS/neWtmOWIsFdvcmtib29r5a+56LGhCiAgdmFyIHdvcmtib29rID0gX3hsc3guZGVmYXVsdC5yZWFkKGRhdGEsIHsKICAgIHR5cGU6IHR5cGUKICB9KTsKCiAgdmFyIGZpcnN0U2hlZXROYW1lID0gd29ya2Jvb2suU2hlZXROYW1lc1swXTsgLy8g6I635Y+WV29ya2Jvb2vlr7nosaHnmoR3b3Jrc2hlZXQKCiAgdmFyIHdvcmtzaGVldCA9IHdvcmtib29rLlNoZWV0c1tmaXJzdFNoZWV0TmFtZV07CiAgdmFyIGhlYWRlciA9IGdldEhlYWRlclJvdyh3b3Jrc2hlZXQpOyAvLyDlsIZ3b3Jrc2hlZXTovazljJbmiJDmlbDnu4QKCiAgdmFyIHJlc3VsdHMgPSBfeGxzeC5kZWZhdWx0LnV0aWxzLnNoZWV0X3RvX2pzb24od29ya3NoZWV0KTsKCiAgcmV0dXJuIHsKICAgIGhlYWRlcjogaGVhZGVyLAogICAgcmVzdWx0czogcmVzdWx0cwogIH07Cn0KCnZhciBfZGVmYXVsdCA9IHsKICBleHBvcnREYXRhVG9FeGNlbDogZXhwb3J0RGF0YVRvRXhjZWwsCiAgcmVhZERhdGFGcm9tRXhjZWw6IHJlYWREYXRhRnJvbUV4Y2VsCn07CmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Ow=="},{"version":3,"sources":["/home/mengy/develop/iwork/kafo/vue-admin/src/utils/excel.js"],"names":["AutoWidth","ws","arr","colWidth","map","row","val","wch","toString","charCodeAt","length","result","i","j","formatJSON","key","data","v","s2ab","s","buf","ArrayBuffer","view","Uint8Array","exportDataToExcel","header","fileName","autoWidth","bookType","wb","XLSX","utils","book_new","unshift","aoa_to_sheet","book_append_sheet","wbout","write","bookSST","type","Blob","getHeaderRow","sheet","headers","range","decode_range","C","R","r","c","e","cell","encode_cell","hdr","t","format_cell","push","readDataFromExcel","workbook","read","firstSheetName","SheetNames","worksheet","Sheets","results","sheet_to_json"],"mappings":"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","sourcesContent":["import XLSX from 'xlsx'\r\nimport {saveAs} from 'file-saver'\r\n\r\n// 自动宽度计算\r\nfunction AutoWidth(ws, arr) {\r\n    // 设置worksheet每列的最大宽度\r\n    const colWidth = arr.map(row => row.map(val => {\r\n        // 判断是否为null/undefined\r\n        if (val == null) {\r\n            return {wch: 10}\r\n        } else if (val.toString().charCodeAt(0) > 255) { // 判断是否为中文\r\n            return {wch: val.toString().length * 2}\r\n        } else {\r\n            return {wch: val.toString().length}\r\n        }\r\n    }))\r\n    // 以第一行为初始值\r\n    const result = colWidth[0]\r\n    for (let i = 1; i < colWidth.length; i++) {\r\n        for (let j = 0; j < colWidth[i].length; j++) {\r\n            if (result[j].wch < colWidth[i][j].wch) {\r\n                result[j].wch = colWidth[i][j].wch\r\n            }\r\n        }\r\n    }\r\n    ws['!cols'] = result\r\n}\r\n\r\n// 数组转换成JSON\r\nfunction formatJSON(key, data) {\r\n    return data.map(v => key.map(i => {\r\n        return v[i]\r\n    }))\r\n}\r\n\r\n// 字符串转ArrayBuffer\r\nfunction s2ab(s) {\r\n    const buf = new ArrayBuffer(s.length)\r\n    const view = new Uint8Array(buf)\r\n    for (let i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF\r\n    return buf\r\n}\r\n\r\n// 导出EXCEL表格\r\nexport function exportDataToExcel(\r\n    {\r\n        header, // 表头名数组\r\n        key, // 列对应字段数组\r\n        data, // 需要导出数据的数组\r\n        fileName, // 导出文件名\r\n        autoWidth = true, // 是否自动宽度\r\n        bookType = 'xlsx' // 导出文件格式\r\n    } = {}) {\r\n    // 创建Workbook对象\r\n    const wb = XLSX.utils.book_new()\r\n    const arr = formatJSON(key, data)\r\n    fileName = fileName || 'excel-list'\r\n    arr.unshift(header)\r\n    // 将数组数据转换为worksheet\r\n    const ws = XLSX.utils.aoa_to_sheet(arr)\r\n    if (autoWidth) {\r\n        AutoWidth(ws, arr)\r\n    }\r\n    // 向Workbook对象中追加worksheet和fileName\r\n    XLSX.utils.book_append_sheet(wb, ws, fileName)\r\n    // 生成EXCEL的配置项\r\n    const wbout = XLSX.write(wb, {\r\n        bookType: bookType,\r\n        bookSST: false,\r\n        type: 'binary'\r\n    })\r\n    // 浏览器下载\r\n    saveAs(new Blob([s2ab(wbout)], {\r\n        type: 'application/octet-stream'\r\n    }), `${fileName}.${bookType}`)\r\n}\r\n\r\n// 从Excel文件中获取表格头\r\nfunction getHeaderRow(sheet) {\r\n    const headers = []\r\n    // 将 A1:G8 这种字符串转换为行列对象\r\n    const range = XLSX.utils.decode_range(sheet['!ref'])\r\n    let C\r\n    const R = range.s.r\r\n    // 从第一列开始，遍历范围中的每一列\r\n    for (C = range.s.c; C <= range.e.c; ++C) {\r\n        // 将行列对象转换为 A1 这种字符串\r\n        const cell = sheet[XLSX.utils.encode_cell({c: C, r: R})]\r\n        // 用默认值替换\r\n        let hdr = 'UNKNOWN ' + C\r\n        if (cell && cell.t) hdr = XLSX.utils.format_cell(cell)\r\n        headers.push(hdr)\r\n    }\r\n    return headers\r\n}\r\n\r\n// 读取Excel文件\r\nexport function readDataFromExcel(data, type) {\r\n    // 读取Excel文件并保存到Workbook对象\r\n    const workbook = XLSX.read(data, {type: type})\r\n    const firstSheetName = workbook.SheetNames[0]\r\n    // 获取Workbook对象的worksheet\r\n    const worksheet = workbook.Sheets[firstSheetName]\r\n    const header = getHeaderRow(worksheet)\r\n    // 将worksheet转化成数组\r\n    const results = XLSX.utils.sheet_to_json(worksheet)\r\n    return {header, results}\r\n}\r\n\r\nexport default {\r\n    exportDataToExcel,\r\n    readDataFromExcel\r\n}\r\n"]}]}