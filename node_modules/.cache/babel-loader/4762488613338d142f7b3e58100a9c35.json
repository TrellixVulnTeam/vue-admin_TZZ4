{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin-design/src/components/Charts/ChartsLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/src/components/Charts/ChartsLine.vue","mtime":1624500048818},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9tZW5neS9kZXZlbG9wL2l3b3JrL2thZm8vdnVlLWFkbWluLWRlc2lnbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC52YWx1ZXMiKTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwoKdmFyIF9lY2hhcnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJlY2hhcnRzIikpOwoKLy8KLy8KLy8KLy8KdmFyIF9kZWZhdWx0MiA9IHsKICBuYW1lOiAnQ2hhcnRzTGluZScsCiAgcHJvcHM6IHsKICAgIHRpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBkYXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7fQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRvbTogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmRyYXdpbmcoKTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5yZXNpemUpOwogIH0sCiAgbWV0aG9kczogewogICAgcmVzaXplOiBmdW5jdGlvbiByZXNpemUoKSB7CiAgICAgIHRoaXMuZG9tLnJlc2l6ZSgpOwogICAgfSwKICAgIGRyYXdpbmc6IGZ1bmN0aW9uIGRyYXdpbmcoKSB7CiAgICAgIHZhciB4QXhpc0RhdGEgPSBPYmplY3Qua2V5cyh0aGlzLmRhdGEpOwogICAgICB2YXIgc2VyaWVzRGF0YSA9IE9iamVjdC52YWx1ZXModGhpcy5kYXRhKTsKICAgICAgdmFyIG9wdGlvbnMgPSB7CiAgICAgICAgLy8g5qCH6aKYCiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6IHRoaXMudGl0bGUsCiAgICAgICAgICBsZWZ0OiAnY2VudGVyJywKICAgICAgICAgIHRvcDogMTUsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IDE2LAogICAgICAgICAgICBmb250V2VpZ2h0OiAnbm9ybWFsJwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgLy8g5bel5YW35o+Q56S6CiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgZm9ybWF0dGVyOiAne2J9IDxici8+e2F9IDoge2N9JywKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICdsaW5lJwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogJzMlJywKICAgICAgICAgIHJpZ2h0OiAnNCUnLAogICAgICAgICAgYm90dG9tOiAnMyUnLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB4QXhpczogW3sKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBkYXRhOiB4QXhpc0RhdGEsCiAgICAgICAgICBheGlzVGljazogewogICAgICAgICAgICBhbGlnbldpdGhMYWJlbDogdHJ1ZQogICAgICAgICAgfQogICAgICAgIH1dLAogICAgICAgIHlBeGlzOiBbewogICAgICAgICAgdHlwZTogJ3ZhbHVlJywKICAgICAgICAgIG1heDogZnVuY3Rpb24gbWF4KHZhbHVlKSB7CiAgICAgICAgICAgIHJldHVybiBNYXRoLmNlaWwodmFsdWUubWF4IC8gMTAwKSAqIDEwMCArIDMwMDsKICAgICAgICAgIH0KICAgICAgICB9XSwKICAgICAgICAvLyDpopzoibLphY3nva4KICAgICAgICBjb2xvcjogWycjOWE2NmU0J10sCiAgICAgICAgLy8g57G75Z6L6YWN572uCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+ebtOaOpeiuv+mXricsCiAgICAgICAgICAvLyDnsbvlnovphY3nva4KICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgIC8vIOaVsOaNrumFjee9rgogICAgICAgICAgZGF0YTogc2VyaWVzRGF0YSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICAgIGZvbnRTaXplOiAxNCwKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAndG9wJywKICAgICAgICAgICAgICAgIGZvcm1hdHRlcjogJ3tjfScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9OwogICAgICB0aGlzLmRvbSA9IF9lY2hhcnRzLmRlZmF1bHQuaW5pdCh0aGlzLiRyZWZzLmRvbSk7CiAgICAgIHRoaXMuZG9tLnNldE9wdGlvbihvcHRpb25zKTsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMucmVzaXplKTsKICAgIH0KICB9Cn07CmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Mjs="},{"version":3,"sources":["ChartsLine.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAKA;;;;;;gBAEA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AALA,GAFA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,GAAA,EAAA;AADA,KAAA;AAGA,GAhBA;AAiBA,EAAA,OAjBA,qBAiBA;AACA,SAAA,OAAA;AACA,GAnBA;AAoBA,EAAA,aApBA,2BAoBA;AACA,IAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,MAAA;AACA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,GAAA,CAAA,MAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,UAAA,SAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,IAAA,CAAA;AACA,UAAA,UAAA,GAAA,MAAA,CAAA,MAAA,CAAA,KAAA,IAAA,CAAA;AACA,UAAA,OAAA,GAAA;AACA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,KAAA,KADA;AAEA,UAAA,IAAA,EAAA,QAFA;AAGA,UAAA,GAAA,EAAA,EAHA;AAIA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,EADA;AAEA,YAAA,UAAA,EAAA;AAFA;AAJA,SAFA;AAWA;AACA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,SAAA,EAAA,oBAFA;AAGA,UAAA,WAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA;AAHA,SAZA;AAmBA,QAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,YAAA,EAAA;AAJA,SAnBA;AAyBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,IAAA,EAAA,SAFA;AAGA,UAAA,QAAA,EAAA;AACA,YAAA,cAAA,EAAA;AADA;AAHA,SADA,CAzBA;AAkCA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,GAAA,EAAA,aAAA,KAAA,EAAA;AACA,mBAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,GAAA,GAAA,IAAA,GAAA,GAAA,GAAA;AACA;AAJA,SADA,CAlCA;AA0CA;AACA,QAAA,KAAA,EAAA,CAAA,SAAA,CA3CA;AA4CA;AACA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA,MADA;AAEA;AACA,UAAA,IAAA,EAAA,MAHA;AAIA;AACA,UAAA,IAAA,EAAA,UALA;AAMA,UAAA,SAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,IAAA,EAAA,IADA;AAEA,gBAAA,QAAA,EAAA,EAFA;AAGA,gBAAA,QAAA,EAAA,KAHA;AAIA,gBAAA,SAAA,EAAA;AAJA;AADA;AADA;AANA,SADA;AA7CA,OAAA;AAiEA,WAAA,GAAA,GAAA,iBAAA,IAAA,CAAA,KAAA,KAAA,CAAA,GAAA,CAAA;AACA,WAAA,GAAA,CAAA,SAAA,CAAA,OAAA;AACA,MAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,MAAA;AACA;AA3EA;AAvBA,C","sourcesContent":["<template>\r\n  <div ref=\"dom\" class=\"charts-line\" />\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\n\r\nexport default {\r\n  name: 'ChartsLine',\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    data: {\r\n      type: Object,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      dom: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawing()\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.resize)\r\n  },\r\n  methods: {\r\n    resize() {\r\n      this.dom.resize()\r\n    },\r\n    drawing() {\r\n      const xAxisData = Object.keys(this.data)\r\n      const seriesData = Object.values(this.data)\r\n      const options = {\r\n        // 标题\r\n        title: {\r\n          text: this.title,\r\n          left: 'center',\r\n          top: 15,\r\n          textStyle: {\r\n            fontSize: 16,\r\n            fontWeight: 'normal'\r\n          }\r\n        },\r\n        // 工具提示\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b} <br/>{a} : {c}',\r\n          axisPointer: {\r\n            type: 'line'\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: xAxisData,\r\n            axisTick: {\r\n              alignWithLabel: true\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            max: value => {\r\n              return Math.ceil(value.max / 100) * 100 + 300\r\n            }\r\n          }\r\n        ],\r\n        // 颜色配置\r\n        color: ['#9a66e4'],\r\n        // 类型配置\r\n        series: [\r\n          {\r\n            name: '直接访问',\r\n            // 类型配置\r\n            type: 'line',\r\n            // 数据配置\r\n            data: seriesData,\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true,\r\n                  fontSize: 14,\r\n                  position: 'top',\r\n                  formatter: '{c}'\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.dom = echarts.init(this.$refs.dom)\r\n      this.dom.setOption(options)\r\n      window.addEventListener('resize', this.resize)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/Charts"}]}