{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/tree/EleTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/tree/EleTree.vue","mtime":1626074721152},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEhpbnRzIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvSGludHMnOwppbXBvcnQgeyB0cmVlRGF0YSB9IGZyb20gJy4vZGF0YSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRWxlVHJlZScsCiAgY29tcG9uZW50czogewogICAgSGludHM6IEhpbnRzCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdHJlZURhdGE6IHRyZWVEYXRhLAogICAgICBwcm9wczogewogICAgICAgIGxhYmVsOiAnbmFtZScsCiAgICAgICAgY2hpbGRyZW46ICd6b25lcycsCiAgICAgICAgaXNMZWFmOiAnbGVhZicKICAgICAgfSwKICAgICAgZGVmYXVsdFByb3BzOiB7CiAgICAgICAgY2hpbGRyZW46ICdjaGlsZHJlbicsCiAgICAgICAgbGFiZWw6ICdsYWJlbCcKICAgICAgfSwKICAgICAgY291bnQ6IDEKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBsb2FkTm9kZTogZnVuY3Rpb24gbG9hZE5vZGUobm9kZSwgcmVzb2x2ZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKG5vZGUubGV2ZWwgPT09IDApIHsKICAgICAgICByZXR1cm4gcmVzb2x2ZShbewogICAgICAgICAgbmFtZTogJ3JlZ2lvbjEnCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ3JlZ2lvbjInCiAgICAgICAgfV0pOwogICAgICB9CgogICAgICBpZiAobm9kZS5sZXZlbCA+IDIpIHJldHVybiByZXNvbHZlKFtdKTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGRhdGEgPSBbewogICAgICAgICAgbmFtZTogJ3pvbmUnICsgX3RoaXMuY291bnQrKywKICAgICAgICAgIGxlYWY6IHRydWUKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAnem9uZScgKyBfdGhpcy5jb3VudCsrCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ3pvbmUnICsgX3RoaXMuY291bnQrKywKICAgICAgICAgIGxlYWY6IHRydWUKICAgICAgICB9XTsKICAgICAgICByZXNvbHZlKGRhdGEpOwogICAgICB9LCA1MDApOwogICAgfSwKICAgIGhhbmRsZUNoZWNrQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDaGVja0NoYW5nZShkYXRhLCBjaGVja2VkLCBpbmRldGVybWluYXRlKSB7CiAgICAgIGNvbnNvbGUubG9nKGRhdGEsIGNoZWNrZWQsIGluZGV0ZXJtaW5hdGUpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["EleTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA,OAAA,KAAA,MAAA,wBAAA;AACA,SAAA,QAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,QAAA,EAAA,OAFA;AAGA,QAAA,MAAA,EAAA;AAHA,OAFA;AAOA,MAAA,YAAA,EAAA;AACA,QAAA,QAAA,EAAA,UADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAPA;AAWA,MAAA,KAAA,EAAA;AAXA,KAAA;AAaA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA,OADA,EACA;AAAA;;AACA,UAAA,IAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AACA,eAAA,OAAA,CAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,CAAA,CAAA;AACA;;AACA,UAAA,IAAA,CAAA,KAAA,GAAA,CAAA,EAAA,OAAA,OAAA,CAAA,EAAA,CAAA;AAEA,MAAA,UAAA,CAAA,YAAA;AACA,YAAA,IAAA,GAAA,CAAA;AACA,UAAA,IAAA,EAAA,SAAA,KAAA,CAAA,KAAA,EADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA,EAGA;AACA,UAAA,IAAA,EAAA,SAAA,KAAA,CAAA,KAAA;AADA,SAHA,EAKA;AACA,UAAA,IAAA,EAAA,SAAA,KAAA,CAAA,KAAA,EADA;AAEA,UAAA,IAAA,EAAA;AAFA,SALA,CAAA;AAUA,QAAA,OAAA,CAAA,IAAA,CAAA;AACA,OAZA,EAYA,GAZA,CAAA;AAaA,KApBA;AAqBA,IAAA,iBArBA,6BAqBA,IArBA,EAqBA,OArBA,EAqBA,aArBA,EAqBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EAAA,OAAA,EAAA,aAAA;AACA;AAvBA;AAlBA,CAAA","sourcesContent":["<template>\n    <div class=\"ele-tree-wrapper\">\n        <Hints>\n            <template slot=\"hintName\">Tree树形控件</template>\n            <template slot=\"hintInfo\">\n                <p>element-tree：基于elementUI的Tree组件，可用于清晰的层级结构展示信息，并能展开或折叠</p>\n                <p>地址：访问\n                    <el-link type=\"success\" href=\"https://element.eleme.cn/#/zh-CN/component/tree\" target=\"_blank\">\n                        element-tree\n                    </el-link>\n                </p>\n            </template>\n        </Hints>\n        <el-row :gutter=\"20\">\n            <el-col :span=\"8\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">可选择节点</div>\n                    <div style=\"height: 360px;\">\n                        <el-tree\n                            :data=\"treeData\"\n                            node-key=\"id\"\n                            show-checkbox\n                            default-expand-all\n                            :default-checked-keys=\"[5]\"\n                            :props=\"defaultProps\"\n                            @check-change=\"handleCheckChange\"\n                        />\n                    </div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"8\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">懒加载节点</div>\n                    <div style=\"height: 360px;\">\n                        <el-tree\n                            :props=\"props\"\n                            :load=\"loadNode\"\n                            lazy\n                            show-checkbox\n                            @check-change=\"handleCheckChange\"\n                        />\n                    </div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"8\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">可拖拽节点</div>\n                    <div style=\"height: 360px;\">\n                        <el-tree\n                            :data=\"treeData\"\n                            node-key=\"id\"\n                            default-expand-all\n                            :props=\"defaultProps\"\n                            draggable\n                        />\n                    </div>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport Hints from '../../components/Hints'\nimport {treeData} from './data'\n\nexport default {\n    name: 'EleTree',\n    components: {Hints},\n    data() {\n        return {\n            treeData,\n            props: {\n                label: 'name',\n                children: 'zones',\n                isLeaf: 'leaf'\n            },\n            defaultProps: {\n                children: 'children',\n                label: 'label'\n            },\n            count: 1\n        }\n    },\n    methods: {\n        loadNode(node, resolve) {\n            if (node.level === 0) {\n                return resolve([{name: 'region1'}, {name: 'region2'}])\n            }\n            if (node.level > 2) return resolve([])\n\n            setTimeout(() => {\n                const data = [{\n                    name: 'zone' + this.count++,\n                    leaf: true\n                }, {\n                    name: 'zone' + this.count++\n                }, {\n                    name: 'zone' + this.count++,\n                    leaf: true\n                }]\n\n                resolve(data)\n            }, 500)\n        },\n        handleCheckChange(data, checked, indeterminate) {\n            console.log(data, checked, indeterminate)\n        }\n    }\n}\n</script>\n"],"sourceRoot":"src/views/tree"}]}