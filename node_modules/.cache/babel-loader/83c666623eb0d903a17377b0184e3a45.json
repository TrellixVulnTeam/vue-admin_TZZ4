{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js??ref--13-0!/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/audit.js","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/audit.js","mtime":1635157906775},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/mengy/develop/iwork/kafo/vue-admin/src/api/services/audit.js"],"names":["getToken","error","deps","proto","client","CmsClient","process","env","VUE_APP_GRPC_PROXY_URI","param","callback","req","ProfileListRequest","setPageNo","page","currentPage","setPageSize","pageSize","setAnchorId","anchorId","setAreaId","areaId","setStatus","reviewStatus","metadata","getProfileList","err","resp","struct","AnchorProfile","setId","profileId","setNickname","nickname","setSignature","signature","setGender","gender","saveProfile","status","setRejectReason","reason","ViolationListRequest","setScene","scene","setReportedType","EntityType","ENTITYUSER","setCreatedStart","createdStart","setCreatedEnd","createdEnd","setReportedId","reporterId","getViolationList","ProcessViolationRequest","setViolationId","violationId","setDealStatus","dealStatus","setDealMessage","dealMessage","setBlockDuration","blockDuration","processViolation","LiveListRequest","createdStartUint","createdEndUint","getLiveList","FileRecord","id","processLive"],"mappings":"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","sourcesContent":["import { getToken } from '@/utils/cookie'\nimport { error } from '@/utils/error'\n\nexport default class {\n    constructor (deps) {\n        this.proto = deps.proto\n        this.client = new deps.proto.CmsClient(process.env.VUE_APP_GRPC_PROXY_URI, null, null)\n    }\n\n\n    /**\n     * 获取主播资料列表\n     */\n    async getProfileList (param, callback) {\n        const req = new this.proto.ProfileListRequest()\n        req.setPageNo(param.page.currentPage)\n        req.setPageSize(param.page.pageSize)\n        req.setAnchorId(param.anchorId)\n        req.setAreaId(param.areaId)\n        req.setStatus(param.reviewStatus)\n\n        const metadata = {'token': getToken()};\n        this.client.getProfileList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n\n    /**\n     * 处理主播资料审核\n     */\n    async saveProfile (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.AnchorProfile()\n        }\n        req.setId(param.profileId)\n        req.setNickname(param.nickname)\n        req.setSignature(param.signature)\n        req.setGender(param.gender)\n\n        const metadata = {'token': getToken()}\n        this.client.saveProfile(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(true)\n            } else {\n                callback(false)\n                error(err)\n            }\n        })\n    }\n\n    async processProfile (param, callback) {\n        let req = param.struct\n        if(typeof(req) == \"undefined\"){\n            req = new this.proto.AnchorProfile()\n        }\n        req.setId(param.profileId)\n        req.setStatus(param.status)\n        req.setRejectReason(param.reason)\n\n        const metadata = {'token': getToken()}\n        this.client.saveProfile(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(true)\n            } else {\n                callback(false)\n                error(err)\n            }\n        })\n    }\n\n\n\n\n    /**\n     * 待审核举报\n     */\n    async getViolationList (param, callback) {\n        const req = new this.proto.ViolationListRequest()\n        req.setPageNo(param.page.currentPage)\n        req.setPageSize(param.page.pageSize)\n        req.setScene(param.scene)\n        req.setAreaId(param.areaId)\n        req.setReportedType(this.proto.EntityType.ENTITYUSER)\n        req.setCreatedStart(param.createdStart)\n        req.setCreatedEnd(param.createdEnd)\n        req.setReportedId(param.reporterId)\n\n        const metadata = {'token': getToken()};\n        this.client.getViolationList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n\n    /**\n     * 处理违规\n     */\n    async processViolation (param, callback) {\n        let req = new this.proto.ProcessViolationRequest()\n        req.setViolationId(param.violationId)\n        req.setDealStatus(param.dealStatus)\n        req.setDealMessage(param.dealMessage)\n        req.setBlockDuration(param.blockDuration)\n\n        const metadata = {'token': getToken()}\n        this.client.processViolation(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(true)\n            } else {\n                callback(false)\n                error(err)\n            }\n        })\n    }\n\n\n\n    /**\n     * 待审核视频\n     */\n    async getLiveList (param, callback) {\n        const req = new this.proto.LiveListRequest()\n        req.setPageNo(param.page.currentPage)\n        req.setPageSize(param.page.pageSize)\n        req.setAreaId(param.areaId)\n        req.setAnchorId(param.anchorId)\n        req.setStatus(param.reviewStatus)\n        req.setCreatedStart(param.createdStartUint)\n        req.setCreatedEnd(param.createdEndUint)\n\n        const metadata = {'token': getToken()};\n        this.client.getLiveList(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(resp)\n            } else {\n                error(err)\n            }\n        })\n    }\n\n    /**\n     * 处理通话录制视频列表\n     */\n    async processLive (param, callback) {\n        const req = new this.proto.FileRecord()\n        req.setId(param.id)\n        req.setStatus(param.status)\n\n        const metadata = {'token': getToken()}\n        this.client.processLive(req, metadata, (err, resp) => {\n            if (!err) {\n                callback(true)\n            } else {\n                callback(false)\n                error(err)\n            }\n        })\n    }\n\n\n}\n"]}]}