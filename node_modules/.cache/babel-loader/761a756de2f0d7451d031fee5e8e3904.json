{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/aia/dialog/add-robot.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/aia/dialog/add-robot.vue","mtime":1635158842305},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9tZW5neS9kZXZlbG9wL2l3b3JrL2thZm8vdnVlLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpLmRlZmF1bHQ7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDsKCnZhciBfY29va2llID0gcmVxdWlyZSgiQC91dGlscy9jb29raWUiKTsKCnZhciBfZGlzdCA9IHJlcXVpcmUoIkAvdXRpbHMvZGlzdCIpOwoKdmFyIF9heGlvcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiYXhpb3MiKSk7Cgp2YXIgX0ltZ1VwZGF0ZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQC9jb21wb25lbnRzL0ltZ1VwZGF0ZSIpKTsKCnZhciBfdXRpbCA9IHJlcXVpcmUoIkAvdXRpbHMvdXRpbCIpOwoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIF9kZWZhdWx0ID0gewogIGNvbXBvbmVudHM6IHsKICAgIEltZ1VwZGF0ZTogX0ltZ1VwZGF0ZS5kZWZhdWx0CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvcm06IHsKICAgICAgICBhcmVhSWQ6ICgwLCBfZGlzdC5nZXRDdXJyZW50VXNlckFyZWFJZCkoKSwKICAgICAgICBwaG90b0lkczogW10sCiAgICAgICAgcGhvdG9zOiBbXSwKICAgICAgICBwaG90b1VyaXM6IFtdLAogICAgICAgIHZpZGVvSWRzOiBbXSwKICAgICAgICB2aWRlb3M6IFtdLAogICAgICAgIHN0YXR1c0Jvb2w6IHRydWUKICAgICAgfSwKICAgICAgdGl0bGU6ICfmlrDlop7mnLrlmajkuronLAogICAgICBmb3JtTG9hZGluZzogZmFsc2UsCiAgICAgIGRpYWxvZ0ltYWdlVXJsOiAnJywKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGltZ0RpYWxvZzogZmFsc2UsCiAgICAgIGltZ1VyaTogdW5kZWZpbmVkLAogICAgICBhdXRoQXJlYUlkOiAoMCwgX2Rpc3QuZ2V0Q3VycmVudFVzZXJBcmVhSWQpKCksCiAgICAgIGFyZWFEYXRhOiAoMCwgX2Rpc3QuZ2V0QXJlYUxpc3QpKHRydWUpLAogICAgICBvY2N1cGF0aW9uVHlwZXM6ICgwLCBfZGlzdC5nZXRPY2N1cGF0aW9uVHlwZSkoKSwKICAgICAgYXBwTGlzdDogKDAsIF9kaXN0LmdldEFwcExpc3QpKCksCiAgICAgIGF2YXRhckFycjogW10sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbmlja25hbWU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICflhoXlrrnkuI3og73kuLrnqbonLAogICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScKICAgICAgICB9XSwKICAgICAgICBhcmVhSWQ6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICflhoXlrrnkuI3og73kuLrnqbonLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBpbml0KHJvdykgewogICAgICBpZiAodHlwZW9mIHJvdy5hbmNob3JJZCAhPSAidW5kZWZpbmVkIikgewogICAgICAgIHRoaXMudGl0bGUgPSAi57yW6L6R5py65Zmo5Lq6IjsKICAgICAgICB0aGlzLmZvcm0gPSByb3c7CiAgICAgICAgdGhpcy5hdmF0YXJBcnIucHVzaCh7CiAgICAgICAgICAidXJsIjogcm93LmF2YXRhcgogICAgICAgIH0pOwogICAgICAgIHRoaXMuZm9ybS5waG90b1VyaXMgPSBbXTsKICAgICAgICB0aGlzLmZvcm0ucGhvdG9zLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICB0aGlzLmZvcm0ucGhvdG9VcmlzLnB1c2goewogICAgICAgICAgICBuYW1lOiBpdGVtLmdldElkKCksCiAgICAgICAgICAgIHVybDogaXRlbS5nZXRVcmkoKQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5mb3JtLnZpZGVvVXJpcyA9IFtdOwogICAgICAgIHRoaXMuZm9ybS52aWRlb3MuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgIHRoaXMuZm9ybS52aWRlb1VyaXMucHVzaCh7CiAgICAgICAgICAgIG5hbWU6IGl0ZW0uZ2V0SWQoKSwKICAgICAgICAgICAgdXJsOiBpdGVtLmdldFVyaSgpCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLmZvcm0uYmlydGhkYXkgPSBuZXcgRGF0ZShyb3cuYmlydGhkYXkgKiAxMDAwKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmNoYW5nZUFyZWEodGhpcy5mb3JtLmFyZWFJZCk7CiAgICAgICAgdGhpcy5mb3JtLmJpcnRoZGF5ID0gKDAsIF91dGlsLmdldEN1cnJlbnREYXRlKSgpOwogICAgICB9CiAgICB9LAoKICAgIHN1Ym1pdEZvcm0oKSB7CiAgICAgIGNvbnN0ICR0aGlzID0gdGhpczsKICAgICAgdGhpcy4kcmVmcy5ydWxlRm9ybS52YWxpZGF0ZSh2YWxpZCA9PiB7CiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICBsZXQgcGFyYW0gPSB0aGlzLmZvcm07CiAgICAgICAgICBwYXJhbS5iaXJ0aGRheVRpbWUgPSBwYXJhbS5iaXJ0aGRheS5nZXRUaW1lKCkgLyAxMDAwOwogICAgICAgICAgcGFyYW0uc3RhdHVzID0gdGhpcy5mb3JtLnN0YXR1c0Jvb2wgPyA1IDogNjsKICAgICAgICAgIHRoaXMuJHNlcnZpY2Uucm9ib3Quc2F2ZVJvYm90KHBhcmFtLCBmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgICAgIGlmIChyZXN1bHQpIHsKICAgICAgICAgICAgICAkdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLkv53lrZjmiJDlip8hIik7CiAgICAgICAgICAgICAgJHRoaXMuY2xvc2VEaWFsb2coKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAkdGhpcy4kbWVzc2FnZS5lcnJvcigi5L+d5a2Y5aSx6LSlISIpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKCiAgICByZXNldEZvcm0oKSB7CiAgICAgIHRoaXMuZm9ybS5waG90b0lkcyA9IFtdOwogICAgICB0aGlzLmZvcm0ucGhvdG9zID0gW107CiAgICAgIHRoaXMuZm9ybS5waG90b1VyaXMgPSBbXTsKICAgICAgdGhpcy5mb3JtLnZpZGVvSWRzID0gW107CiAgICAgIHRoaXMuZm9ybS52aWRlb3MgPSBbXTsKICAgICAgdGhpcy5mb3JtLnZpZGVvVXJpcyA9IFtdOwogICAgICB0aGlzLiRyZWZzLnJ1bGVGb3JtLnJlc2V0RmllbGRzKCk7CiAgICB9LAoKICAgIGNsb3NlRGlhbG9nKCkgewogICAgICB0aGlzLmZvcm1Mb2FkaW5nID0gZmFsc2U7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLmF2YXRhckFyciA9IFtdOwogICAgICB0aGlzLmZvcm0gPSB7fTsKICAgICAgdGhpcy5yZXNldEZvcm0oKTsKICAgICAgdGhpcy4kZW1pdCgnZmV0Y2hEYXRhJyk7CiAgICB9LAoKICAgIGltZ1ByZXZpZXcoZmlsZSkgewogICAgICB0aGlzLmltZ0RpYWxvZyA9IHRydWU7CiAgICAgIHRoaXMuaW1nVXJpID0gZmlsZS51cmw7CiAgICB9LAoKICAgIHN1Y2Nlc3NBdmF0YXIoZmlsZSkgewogICAgICBjb25zdCAkdGhpcyA9IHRoaXM7CiAgICAgIHRoaXMuZm9ybUxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLmltZ1VwbG9hZChmaWxlLnJhdywgMSwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAkdGhpcy5mb3JtLmF2YXRhciA9IGRhdGEudXJpOwogICAgICAgICR0aGlzLmZvcm1Mb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKCiAgICBzdWNjZXNzUGhvdG8oZmlsZSkgewogICAgICBsZXQgJHRoaXMgPSB0aGlzOwogICAgICB0aGlzLmZvcm1Mb2FkaW5nID0gdHJ1ZTsKICAgICAgdGhpcy5pbWdVcGxvYWQoZmlsZS5yYXcsIDEsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgJHRoaXMuZm9ybS5waG90b0lkcy5wdXNoKGRhdGEuaWQpOwogICAgICAgICR0aGlzLmZvcm1Mb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKCiAgICBzdWNjZXNzVmlkZW8oZmlsZSkgewogICAgICBjb25zdCAkdGhpcyA9IHRoaXM7CiAgICAgIHRoaXMuZm9ybUxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLmltZ1VwbG9hZChmaWxlLnJhdywgMiwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAkdGhpcy5mb3JtLnZpZGVvSWRzLnB1c2goZGF0YS5pZCk7CiAgICAgICAgJHRoaXMuZm9ybS52aWRlbyA9IGRhdGEuaWQ7CiAgICAgICAgJHRoaXMuZm9ybUxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAoKICAgIHJlbW92ZVBob3RvKGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIGxldCBhcnIgPSB0aGlzLmZvcm0ucGhvdG9JZHM7CiAgICAgIGxldCB2YWwgPSBmaWxlLm5hbWU7CgogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICAgIGlmIChhcnJbaV0gPT09IHZhbCkgewogICAgICAgICAgYXJyLnNwbGljZShpLCAxKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICByZW1vdmVWaWRlbyhmaWxlLCBmaWxlTGlzdCkgewogICAgICBsZXQgYXJyID0gdGhpcy5mb3JtLnZpZGVvSWRzOwogICAgICBsZXQgdmFsID0gZmlsZS5uYW1lOwoKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoYXJyW2ldID09PSB2YWwpIHsKICAgICAgICAgIGFyci5zcGxpY2UoaSwgMSk7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCgogICAgaW1nVXBsb2FkKGZpbGUsIHR5cGUsIGNhbGxiYWNrKSB7CiAgICAgIGxldCBoZWFkZXJzID0gewogICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScsCiAgICAgICAgInRva2VuIjogKDAsIF9jb29raWUuZ2V0VG9rZW4pKCksCiAgICAgICAgImFyZWEtaWQiOiAxLAogICAgICAgICJmaWxlLXR5cGUiOiB0eXBlCiAgICAgIH07CiAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIGZpbGUpOwogICAgICAoMCwgX2F4aW9zLmRlZmF1bHQpKHsKICAgICAgICB1cmw6IHByb2Nlc3MuZW52LlZVRV9BUFBfVVBMT0FEX1VSSSwKICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICBkYXRhOiBmb3JtRGF0YSwKICAgICAgICBoZWFkZXJzOiBoZWFkZXJzCiAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGE7CiAgICAgICAgY2FsbGJhY2soZGF0YSk7CiAgICAgIH0pOwogICAgfSwKCiAgICBjaGFuZ2VBcmVhKHZhbCkgewogICAgICBsZXQgYXJyID0gKDAsIF9kaXN0LmdldEFwcExpc3RCeUFyZWFJZCkodmFsLCB0cnVlKTsKICAgICAgYXJyLnNwbGljZSgwLCAxKTsKICAgICAgdGhpcy5hcHBMaXN0ID0gYXJyOwogICAgfQoKICB9Cn07CmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Ow=="},null]}