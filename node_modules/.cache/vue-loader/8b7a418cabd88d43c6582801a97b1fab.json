{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/tree/EleTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/tree/EleTree.vue","mtime":1626074721152},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBIaW50cyBmcm9tICcuLi8uLi9jb21wb25lbnRzL0hpbnRzJwppbXBvcnQge3RyZWVEYXRhfSBmcm9tICcuL2RhdGEnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnRWxlVHJlZScsCiAgICBjb21wb25lbnRzOiB7SGludHN9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICB0cmVlRGF0YSwKICAgICAgICAgICAgcHJvcHM6IHsKICAgICAgICAgICAgICAgIGxhYmVsOiAnbmFtZScsCiAgICAgICAgICAgICAgICBjaGlsZHJlbjogJ3pvbmVzJywKICAgICAgICAgICAgICAgIGlzTGVhZjogJ2xlYWYnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRlZmF1bHRQcm9wczogewogICAgICAgICAgICAgICAgY2hpbGRyZW46ICdjaGlsZHJlbicsCiAgICAgICAgICAgICAgICBsYWJlbDogJ2xhYmVsJwogICAgICAgICAgICB9LAogICAgICAgICAgICBjb3VudDogMQogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgbG9hZE5vZGUobm9kZSwgcmVzb2x2ZSkgewogICAgICAgICAgICBpZiAobm9kZS5sZXZlbCA9PT0gMCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoW3tuYW1lOiAncmVnaW9uMSd9LCB7bmFtZTogJ3JlZ2lvbjInfV0pCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKG5vZGUubGV2ZWwgPiAyKSByZXR1cm4gcmVzb2x2ZShbXSkKCiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IFt7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3pvbmUnICsgdGhpcy5jb3VudCsrLAogICAgICAgICAgICAgICAgICAgIGxlYWY6IHRydWUKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnem9uZScgKyB0aGlzLmNvdW50KysKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnem9uZScgKyB0aGlzLmNvdW50KyssCiAgICAgICAgICAgICAgICAgICAgbGVhZjogdHJ1ZQogICAgICAgICAgICAgICAgfV0KCiAgICAgICAgICAgICAgICByZXNvbHZlKGRhdGEpCiAgICAgICAgICAgIH0sIDUwMCkKICAgICAgICB9LAogICAgICAgIGhhbmRsZUNoZWNrQ2hhbmdlKGRhdGEsIGNoZWNrZWQsIGluZGV0ZXJtaW5hdGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSwgY2hlY2tlZCwgaW5kZXRlcm1pbmF0ZSkKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["EleTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EleTree.vue","sourceRoot":"src/views/tree","sourcesContent":["<template>\n    <div class=\"ele-tree-wrapper\">\n        <Hints>\n            <template slot=\"hintName\">Tree树形控件</template>\n            <template slot=\"hintInfo\">\n                <p>element-tree：基于elementUI的Tree组件，可用于清晰的层级结构展示信息，并能展开或折叠</p>\n                <p>地址：访问\n                    <el-link type=\"success\" href=\"https://element.eleme.cn/#/zh-CN/component/tree\" target=\"_blank\">\n                        element-tree\n                    </el-link>\n                </p>\n            </template>\n        </Hints>\n        <el-row :gutter=\"20\">\n            <el-col :span=\"8\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">可选择节点</div>\n                    <div style=\"height: 360px;\">\n                        <el-tree\n                            :data=\"treeData\"\n                            node-key=\"id\"\n                            show-checkbox\n                            default-expand-all\n                            :default-checked-keys=\"[5]\"\n                            :props=\"defaultProps\"\n                            @check-change=\"handleCheckChange\"\n                        />\n                    </div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"8\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">懒加载节点</div>\n                    <div style=\"height: 360px;\">\n                        <el-tree\n                            :props=\"props\"\n                            :load=\"loadNode\"\n                            lazy\n                            show-checkbox\n                            @check-change=\"handleCheckChange\"\n                        />\n                    </div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"8\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">可拖拽节点</div>\n                    <div style=\"height: 360px;\">\n                        <el-tree\n                            :data=\"treeData\"\n                            node-key=\"id\"\n                            default-expand-all\n                            :props=\"defaultProps\"\n                            draggable\n                        />\n                    </div>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport Hints from '../../components/Hints'\nimport {treeData} from './data'\n\nexport default {\n    name: 'EleTree',\n    components: {Hints},\n    data() {\n        return {\n            treeData,\n            props: {\n                label: 'name',\n                children: 'zones',\n                isLeaf: 'leaf'\n            },\n            defaultProps: {\n                children: 'children',\n                label: 'label'\n            },\n            count: 1\n        }\n    },\n    methods: {\n        loadNode(node, resolve) {\n            if (node.level === 0) {\n                return resolve([{name: 'region1'}, {name: 'region2'}])\n            }\n            if (node.level > 2) return resolve([])\n\n            setTimeout(() => {\n                const data = [{\n                    name: 'zone' + this.count++,\n                    leaf: true\n                }, {\n                    name: 'zone' + this.count++\n                }, {\n                    name: 'zone' + this.count++,\n                    leaf: true\n                }]\n\n                resolve(data)\n            }, 500)\n        },\n        handleCheckChange(data, checked, indeterminate) {\n            console.log(data, checked, indeterminate)\n        }\n    }\n}\n</script>\n"]}]}