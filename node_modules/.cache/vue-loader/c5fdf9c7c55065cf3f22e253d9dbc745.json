{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-manage/src/components/VueDrr/index.vue?vue&type=style&index=0&id=3dcf2171&lang=less&scoped=true&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-manage/src/components/VueDrr/index.vue","mtime":1626074721475},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAnLi4vLi4vYXNzZXRzL2xlc3MvdmFyaWFibGVzJzsNCg0KQG1haW4tY29sb3I6ICMyZTk1ZmY7DQpAY2lyY2xlLXNpemU6IDhweDsNCg0KLnotZHJyLWNvbnRhaW5lciB7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGJvcmRlcjogMXB4IGRhc2hlZCB0cmFuc3BhcmVudDsNCg0KICAgICosICo6YmVmb3JlLCAqOmFmdGVyIHsNCiAgICAgICAgcGFkZGluZzogMDsNCiAgICAgICAgbWFyZ2luOiAwOw0KICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KICAgICAgICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7DQogICAgfQ0KfQ0KDQouei1kcmFnZ2FibGU6aG92ZXIgew0KICAgIGN1cnNvcjogbW92ZTsNCn0NCg0KLmNpcmNsZShAYmdjOiAjZmZmKSB7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIHdpZHRoOiBAY2lyY2xlLXNpemU7DQogICAgaGVpZ2h0OiBAY2lyY2xlLXNpemU7DQogICAgYm9yZGVyOiAxcHggc29saWQgQG1haW4tY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogNTAlOw0KICAgIGJhY2tncm91bmQ6IEBiZ2M7DQp9DQoNCi56LXJvdGF0ZWFibGUtaGFuZGxlIHsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgbGVmdDogNTAlOw0KICAgIHRvcDogLUBjaXJjbGUtc2l6ZSAqIDM7DQogICAgd2lkdGg6IDFweDsNCiAgICBoZWlnaHQ6IEBjaXJjbGUtc2l6ZSAqIDM7DQogICAgbWFyZ2luLWxlZnQ6IC0uNXB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6IEBtYWluLWNvbG9yOw0KICAgIGN1cnNvcjogdXJsKC4uLy4uL2Fzc2V0cy9pbWcvbW91c2Utcm90YXRlLnBuZykgOCA4LCBkZWZhdWx0Ow0KDQogICAgJjphZnRlciB7DQogICAgICAgIGNvbnRlbnQ6ICcgJzsNCiAgICAgICAgdG9wOiAwOw0KICAgICAgICBsZWZ0OiAwOw0KICAgICAgICBtYXJnaW4tbGVmdDogLShAY2lyY2xlLXNpemUgLSAxKS8yOw0KICAgICAgICAuY2lyY2xlKEBtYWluLWNvbG9yKTsNCiAgICB9DQp9DQoNCi56LXJlc2l6ZWFibGUtaGFuZGxlIHsNCiAgICBkaXNwbGF5OiBub25lOw0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCn0NCg0KLnotaGFuZGxlLW53LA0KLnotaGFuZGxlLW5lLA0KLnotaGFuZGxlLXN3LA0KLnotaGFuZGxlLXNlIHsNCiAgICAuY2lyY2xlOw0KfQ0KDQouei1oYW5kbGUtbncgew0KICAgIHRvcDogLUBjaXJjbGUtc2l6ZS8yOw0KICAgIGxlZnQ6IC1AY2lyY2xlLXNpemUvMjsNCiAgICBjdXJzb3I6IG53LXJlc2l6ZTsNCn0NCg0KLnotaGFuZGxlLW5lIHsNCiAgICB0b3A6IC1AY2lyY2xlLXNpemUvMjsNCiAgICByaWdodDogLUBjaXJjbGUtc2l6ZS8yOw0KICAgIGN1cnNvcjogbmUtcmVzaXplOw0KfQ0KDQouei1oYW5kbGUtc3cgew0KICAgIGJvdHRvbTogLUBjaXJjbGUtc2l6ZS8yOw0KICAgIGxlZnQ6IC1AY2lyY2xlLXNpemUvMjsNCiAgICBjdXJzb3I6IHN3LXJlc2l6ZTsNCn0NCg0KLnotaGFuZGxlLXNlIHsNCiAgICBib3R0b206IC1AY2lyY2xlLXNpemUvMjsNCiAgICByaWdodDogLUBjaXJjbGUtc2l6ZS8yOw0KICAgIGN1cnNvcjogc2UtcmVzaXplOw0KfQ0KDQouei1oYW5kbGUtbiwNCi56LWhhbmRsZS13LA0KLnotaGFuZGxlLWUsDQouei1oYW5kbGUtcyB7DQogICAgJjphZnRlciB7DQogICAgICAgIGNvbnRlbnQ6ICcgJzsNCiAgICAgICAgLmNpcmNsZTsNCiAgICB9DQp9DQoNCi56LWhhbmRsZS1uIHsNCiAgICB0b3A6IDA7DQogICAgbGVmdDogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBoZWlnaHQ6IEBjaXJjbGUtc2l6ZS8yOw0KICAgIGN1cnNvcjogbi1yZXNpemU7DQoNCiAgICAmOmFmdGVyIHsNCiAgICAgICAgYm90dG9tOiAwOw0KICAgICAgICBsZWZ0OiA1MCU7DQogICAgICAgIG1hcmdpbi1sZWZ0OiAtQGNpcmNsZS1zaXplLzI7DQogICAgfQ0KfQ0KDQouei1oYW5kbGUtdyB7DQogICAgdG9wOiAwOw0KICAgIGxlZnQ6IDA7DQogICAgd2lkdGg6IEBjaXJjbGUtc2l6ZS8yOw0KICAgIGhlaWdodDogMTAwJTsNCiAgICBjdXJzb3I6IHctcmVzaXplOw0KDQogICAgJjphZnRlciB7DQogICAgICAgIHRvcDogNTAlOw0KICAgICAgICByaWdodDogMDsNCiAgICAgICAgbWFyZ2luLXRvcDogLUBjaXJjbGUtc2l6ZS8yOw0KICAgIH0NCn0NCg0KLnotaGFuZGxlLWUgew0KICAgIHRvcDogMDsNCiAgICByaWdodDogMDsNCiAgICB3aWR0aDogQGNpcmNsZS1zaXplLzI7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIGN1cnNvcjogZS1yZXNpemU7DQoNCiAgICAmOmFmdGVyIHsNCiAgICAgICAgdG9wOiA1MCU7DQogICAgICAgIGxlZnQ6IDA7DQogICAgICAgIG1hcmdpbi10b3A6IC1AY2lyY2xlLXNpemUvMjsNCiAgICB9DQp9DQoNCi56LWhhbmRsZS1zIHsNCiAgICBib3R0b206IDA7DQogICAgbGVmdDogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBoZWlnaHQ6IEBjaXJjbGUtc2l6ZS8yOw0KICAgIGN1cnNvcjogcy1yZXNpemU7DQoNCiAgICAmOmFmdGVyIHsNCiAgICAgICAgdG9wOiAwOw0KICAgICAgICBsZWZ0OiA1MCU7DQogICAgICAgIG1hcmdpbi1sZWZ0OiAtQGNpcmNsZS1zaXplLzI7DQogICAgfQ0KfQ0KDQouei1hY3RpdmUgew0KICAgIGJvcmRlcjogMXB4IGRhc2hlZCBAbWFpbi1jb2xvcjsNCiAgICB6LWluZGV4OiA5OTk7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsmjfile":"index.vue","sourceRoot":"src/components/VueDrr","sourcesContent":["<template>\r\n    <div\r\n        class=\"z-drr-container\"\r\n        :style=\"style\"\r\n        :class=\"{\r\n      'z-draggable': draggable,\r\n      'z-resizable': resizable,\r\n      'z-rotatable': rotatable,\r\n      'z-active': enabled,\r\n      'z-dragging': dragging,\r\n      'z-resizing': resizing,\r\n      'z-rotating': rotating\r\n    }\"\r\n        @mousedown=\"elmDown\"\r\n    >\r\n        <div\r\n            v-if=\"rotatable\"\r\n            class=\"z-rotateable-handle\"\r\n            :style=\"{ display: enabled ? 'block' : 'none'}\"\r\n            @touchstart.prevent.stop=\"elmDown\"\r\n            @mousedown.stop.prevent=\"rotating = true\"\r\n            @dblclick=\"fillParent\"\r\n        />\r\n        <div\r\n            v-for=\"handle in handles\"\r\n            v-if=\"resizable\"\r\n            :key=\"handle\"\r\n            class=\"z-resizeable-handle\"\r\n            :class=\"'z-handle-' + handle\"\r\n            :style=\"{ display: enabled ? 'block' : 'none'}\"\r\n            @touchstart.stop.prevent=\"handleDown(handle, $event)\"\r\n            @mousedown.stop.prevent=\"handleResizeStart(handle, $event)\"\r\n        />\r\n        <slot/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {matchesSelectorToParentElements} from './utils/dom'\r\n\r\nexport default {\r\n    name: 'VueDrr',\r\n    props: {\r\n        active: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        draggable: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        resizable: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        rotatable: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        canDeactive: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        w: {\r\n            type: [Number],\r\n            default: 200\r\n        },\r\n        h: {\r\n            type: [Number, String],\r\n            default: 28,\r\n            validator: function (val) {\r\n                const valid = (typeof val === 'string') ? val === 'auto' : val >= 0\r\n                return valid\r\n            }\r\n        },\r\n        ratio: {\r\n            type: [Number, String]\r\n        },\r\n        contains: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        minw: {\r\n            type: Number,\r\n            default: 28,\r\n            validator(val) {\r\n                return val > 0\r\n            }\r\n        },\r\n        minh: {\r\n            type: Number,\r\n            default: 28,\r\n            validator(val) {\r\n                return val > 0\r\n            }\r\n        },\r\n        angle: {\r\n            type: Number,\r\n            default: 0,\r\n            validator(val) {\r\n                return typeof val === 'number'\r\n            }\r\n        },\r\n        x: {\r\n            type: Number,\r\n            default: 0,\r\n            validator(val) {\r\n                return typeof val === 'number'\r\n            }\r\n        },\r\n        y: {\r\n            type: Number,\r\n            default: 0,\r\n            validator(val) {\r\n                return typeof val === 'number'\r\n            }\r\n        },\r\n        z: {\r\n            type: [String, Number],\r\n            default: 'auto',\r\n            validator: function (val) {\r\n                const valid = (typeof val === 'string') ? val === 'auto' : val >= 0\r\n                return valid\r\n            }\r\n        },\r\n        handles: {\r\n            type: Array,\r\n            default() {\r\n                return ['n', 'e', 's', 'w', 'nw', 'ne', 'se', 'sw']\r\n            },\r\n            validator: function (val) {\r\n                const s = new Set(['n', 'e', 's', 'w', 'nw', 'ne', 'se', 'sw'])\r\n\r\n                return new Set(val.filter(h => s.has(h))).size === val.length\r\n            }\r\n        },\r\n        dragHandle: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        dragCancel: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        axis: {\r\n            type: String,\r\n            default: 'both',\r\n            validator(val) {\r\n                return ['x', 'y', 'both'].indexOf(val) !== -1\r\n            }\r\n        },\r\n        grid: {\r\n            type: Array,\r\n            default() {\r\n                return [1, 1]\r\n            }\r\n        },\r\n        parent: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        overflowY: {\r\n            type: String,\r\n            default: ''\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            top: this.y,\r\n            left: this.x,\r\n            width: this.w,\r\n            height: this.h,\r\n            rotateAngle: this.angle,\r\n            resizing: false,\r\n            dragging: false,\r\n            rotating: false,\r\n            enabled: this.active,\r\n            handle: null,\r\n            zIndex: this.z,\r\n            parentW: 9999,\r\n            parentH: 9999,\r\n            mouseX: 0,\r\n            mouseY: 0,\r\n            lastMouseX: 0,\r\n            lastMouseY: 0,\r\n            mouseOffX: 0,\r\n            mouseOffY: 0,\r\n            elmX: 0,\r\n            elmY: 0,\r\n            elmW: 0,\r\n            elmH: 0\r\n        }\r\n    },\r\n    computed: {\r\n        style() {\r\n            return {\r\n                top: this.top + 'px',\r\n                left: this.left + 'px',\r\n                width: this.width + 'px',\r\n                height: this.height + 'px',\r\n                transform: 'rotate(' + this.rotateAngle + 'deg)',\r\n                zIndex: this.zIndex,\r\n                overflowY: this.overflowY,\r\n                overflowX: ''\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        active(val) {\r\n            this.enabled = val\r\n        },\r\n        x(val) {\r\n            this.left = val\r\n            this.elmX = val\r\n        },\r\n        y(val) {\r\n            this.top = val\r\n            this.elmY = val\r\n        },\r\n        z: function (val) {\r\n            if (val >= 0 || val === 'auto') {\r\n                this.zIndex = val\r\n            }\r\n        },\r\n        w(val) {\r\n            this.width = val\r\n            this.elmW = val\r\n        },\r\n        h(val) {\r\n            this.height = val\r\n            this.elmH = val\r\n        },\r\n        angle(val) {\r\n            this.rotateAngle = val\r\n        }\r\n    },\r\n    mounted() {\r\n        const container = document.querySelector('.editor-mask') || document.documentElement\r\n        container.addEventListener('mousedown', this.deselect, false)\r\n        container.addEventListener('mousemove', this.handleMove, false)\r\n        container.addEventListener('mouseup', this.handleUp, false)\r\n\r\n        // touch events bindings\r\n        container.addEventListener('touchmove', this.handleMove, false)\r\n        container.addEventListener('touchend touchcancel', this.deselect, false)\r\n        container.addEventListener('touchstart', this.handleUp, false)\r\n\r\n        this.elmX = parseInt(this.$el.style.left)\r\n        this.elmY = parseInt(this.$el.style.top)\r\n        this.elmW = this.$el.offsetWidth || this.$el.clientWidth\r\n        this.elmH = this.$el.offsetHeight || this.$el.clientHeight\r\n\r\n        this.reviewDimensions()\r\n    },\r\n    beforeDestroy() {\r\n        const container = document.querySelector('.editor-mask') || document.documentElement\r\n        container.removeEventListener('mousedown', this.deselect, false)\r\n        container.removeEventListener('mousemove', this.handleMove, false)\r\n        container.removeEventListener('mouseup', this.handleUp, false)\r\n\r\n        // touch events bindings removed\r\n        container.addEventListener('touchmove', this.handleMove, false)\r\n        container.addEventListener('touchend touchcancel', this.deselect, false)\r\n        container.addEventListener('touchstart', this.handleUp, false)\r\n    },\r\n    methods: {\r\n        reviewDimensions() {\r\n            if (this.minw > this.w) {\r\n                this.width = this.minw\r\n            }\r\n\r\n            if (this.minh > this.h) {\r\n                this.height = this.minh\r\n            }\r\n\r\n            if (this.parent) {\r\n                const parentW = parseInt(this.$el.parentNode.clientWidth, 10)\r\n                const parentH = parseInt(this.$el.parentNode.clientHeight, 10)\r\n\r\n                this.parentW = parentW\r\n                this.parentH = parentH\r\n\r\n                if (this.w > this.parentW) {\r\n                    this.width = parentW\r\n                }\r\n\r\n                if (this.h > this.parentH) {\r\n                    this.height = parentH\r\n                }\r\n\r\n                if ((this.x + this.w) > this.parentW) {\r\n                    this.width = parentW - this.x\r\n                }\r\n\r\n                if ((this.y + this.h) > this.parentH) {\r\n                    this.height = parentH - this.y\r\n                }\r\n\r\n                this.elmW = this.width\r\n                this.elmH = this.height\r\n            }\r\n\r\n            this.$emit('resizing', this.left, this.top, this.width, this.height)\r\n        },\r\n        elmDown(e) {\r\n            const target = e.target || e.srcElement\r\n            if (this.$el.contains(target)) {\r\n                if (\r\n                    (this.dragHandle && !matchesSelectorToParentElements(target, this.dragHandle, this.$el)) ||\r\n                    (this.dragCancel && matchesSelectorToParentElements(target, this.dragCancel, this.$el))) {\r\n                    return\r\n                }\r\n                this.reviewDimensions()\r\n\r\n                if (!this.enabled) {\r\n                    this.enabled = true\r\n                    this.$emit('activated')\r\n                    this.$emit('update:active', true)\r\n                }\r\n                if (this.draggable) {\r\n                    this.dragging = true\r\n                }\r\n            }\r\n        },\r\n        deselect(e) {\r\n            if (e.type.indexOf('touch') !== -1) {\r\n                this.mouseX = e.changedTouches[0].clientX\r\n                this.mouseY = e.changedTouches[0].clientY\r\n            } else {\r\n                this.mouseX = e.pageX || e.clientX + document.documentElement.scrollLeft\r\n                this.mouseY = e.pageY || e.clientY + document.documentElement.scrollTop\r\n            }\r\n\r\n            this.lastMouseX = this.mouseX\r\n            this.lastMouseY = this.mouseY\r\n\r\n            const target = e.target || e.srcElement\r\n            const regex = new RegExp('z-handle-([nesw]{1, 2})', '')\r\n            // 点击在当前组件外，取消active状态\r\n            if (!this.$el.contains(target) && !regex.test(target.className)) {\r\n                if (this.enabled) {\r\n                    if (this.canDeactive) {\r\n                        this.enabled = false\r\n                        this.$emit('deactivated')\r\n                        this.$emit('update:active', false)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        handleResizeStart(handle, e) {\r\n            this.handle = handle\r\n\r\n            if (e.stopPropagation) e.stopPropagation()\r\n            if (e.preventDefault) e.preventDefault()\r\n\r\n            this.resizing = true\r\n        },\r\n\r\n        handleDown: function (handle, e) {\r\n            this.handle = handle\r\n\r\n            if (e.stopPropagation) e.stopPropagation()\r\n            if (e.preventDefault) e.preventDefault()\r\n\r\n            this.resizing = true\r\n        },\r\n        fillParent: function (e) {\r\n            if (!this.parent || !this.resizable || !this.maximize) return\r\n\r\n            let done = false\r\n\r\n            const animate = () => {\r\n                if (!done) {\r\n                    window.requestAnimationFrame(animate)\r\n                }\r\n\r\n                if (this.axis === 'x') {\r\n                    if (\r\n                        this.width === this.parentW && this.left === 0\r\n                    ) {\r\n                        done = true\r\n                    }\r\n                } else if (this.axis === 'y') {\r\n                    if (\r\n                        this.height === this.parentH && this.top === 0\r\n                    ) {\r\n                        done = true\r\n                    }\r\n                } else if (this.axis === 'both') {\r\n                    if (\r\n                        this.width === this.parentW &&\r\n                        this.height === this.parentH &&\r\n                        this.top === 0 &&\r\n                        this.left === 0\r\n                    ) {\r\n                        done = true\r\n                    }\r\n                }\r\n\r\n                if (this.axis === 'x' || this.axis === 'both') {\r\n                    if (this.width < this.parentW) {\r\n                        this.width++\r\n                        this.elmW++\r\n                    }\r\n\r\n                    if (this.left > 0) {\r\n                        this.left--\r\n                        this.elmX--\r\n                    }\r\n                }\r\n\r\n                if (this.axis === 'y' || this.axis === 'both') {\r\n                    if (this.height < this.parentH) {\r\n                        this.height++\r\n                        this.elmH++\r\n                    }\r\n\r\n                    if (this.top > 0) {\r\n                        this.top--\r\n                        this.elmY--\r\n                    }\r\n                }\r\n\r\n                this.$emit('resizing', this.left, this.top, this.width, this.height)\r\n            }\r\n\r\n            window.requestAnimationFrame(animate)\r\n        },\r\n        getOrigin() {\r\n            const rect = this.$el.getBoundingClientRect()\r\n            return {\r\n                x: (rect.left + rect.right) / 2,\r\n                y: (rect.bottom + rect.top) / 2\r\n            }\r\n        },\r\n        handleMove(e) {\r\n            const lastMouseX = this.lastMouseX\r\n            const lastMouseY = this.lastMouseY\r\n            const isTouchMove = e.type.indexOf('touchmove') !== -1\r\n            this.mouseX = isTouchMove\r\n                ? e.touches[0].clientX\r\n                : e.pageX || e.clientX + document.documentElement.scrollLeft\r\n            this.mouseY = isTouchMove\r\n                ? e.touches[0].clientY\r\n                : e.pageY || e.clientY + document.documentElement.scrollTop\r\n\r\n            let diffX = this.mouseX - this.lastMouseX + this.mouseOffX\r\n            let diffY = this.mouseY - this.lastMouseY + this.mouseOffY\r\n\r\n            this.mouseOffX = this.mouseOffY = 0\r\n\r\n            this.lastMouseX = this.mouseX\r\n            this.lastMouseY = this.mouseY\r\n\r\n            const dX = diffX\r\n            const dY = diffY\r\n\r\n            if (this.resizing) {\r\n                if (this.handle.indexOf('n') >= 0) {\r\n                    if (this.elmH - dY < this.minh) {\r\n                        this.mouseOffY = (dY - (diffY = this.elmH - this.minh))\r\n                    } else if (this.parent && this.elmY + dY < 0) {\r\n                        this.mouseOffY = dY - (diffY = -this.elmY)\r\n                    }\r\n                    this.elmY += diffY\r\n                    this.elmH -= diffY\r\n                }\r\n\r\n                if (this.handle.indexOf('s') >= 0) {\r\n                    if (this.elmH + dY < this.minh) {\r\n                        this.mouseOffY = (dY - (diffY = this.minh - this.elmH))\r\n                    } else if (this.parent && this.elmY + this.elmH + dY > this.parentH) {\r\n                        this.mouseOffY = (dY - (diffY = this.parentH - this.elmY - this.elmH))\r\n                    }\r\n                    this.elmH += diffY\r\n                }\r\n\r\n                if (this.handle.indexOf('w') >= 0) {\r\n                    if (this.elmW - dX < this.minw) {\r\n                        this.mouseOffX = (dX - (diffX = this.elmW - this.minw))\r\n                    } else if (this.parent && this.elmX + dX < 0) {\r\n                        this.mouseOffX = dX - (diffX = -this.elmX)\r\n                    }\r\n                    this.elmX += diffX\r\n                    this.elmW -= diffX\r\n                }\r\n\r\n                if (this.handle.indexOf('e') >= 0) {\r\n                    if (this.elmW + dX < this.minw) {\r\n                        this.mouseOffX = (dX - (diffX = this.minw - this.elmW))\r\n                    } else if (this.parent && this.elmX + this.elmW + dX > this.parentW) {\r\n                        this.mouseOffX = (dX - (diffX = this.parentW - this.elmX - this.elmW))\r\n                    }\r\n                    this.elmW += diffX\r\n                }\r\n\r\n                this.left = (Math.round(this.elmX / this.grid[0]) * this.grid[0])\r\n                this.top = (Math.round(this.elmY / this.grid[1]) * this.grid[1])\r\n\r\n                this.width = (Math.round(this.elmW / this.grid[0]) * this.grid[0])\r\n                this.height = (Math.round(this.elmH / this.grid[1]) * this.grid[1])\r\n                this.$emit('resizing', this.left, this.top, this.width, this.height)\r\n            } else if (this.dragging) {\r\n                if (this.parent) {\r\n                    if (this.elmX + dX < 0) {\r\n                        this.mouseOffX = dX - (diffX = -this.elmX)\r\n                    } else if (this.elmX + this.elmW + dX > this.parentW) {\r\n                        this.mouseOffX = (dX - (diffX = this.parentW - this.elmX - this.elmW))\r\n                    }\r\n                    if (this.elmY + dY < 0) {\r\n                        this.mouseOffY = dY - (diffY = -this.elmY)\r\n                    } else if (this.elmY + this.elmH + dY > this.parentH) {\r\n                        this.mouseOffY = dY - (diffY = this.parentH - this.elmY - this.elmH)\r\n                    }\r\n                }\r\n\r\n                this.elmX += diffX\r\n                this.elmY += diffY\r\n                if (this.axis === 'x' || this.axis === 'both') {\r\n                    // 四舍五入取得当前所在格子数 * 每个格子的单位像素，保证每一个点子在格子上\r\n                    this.left = (Math.round(this.elmX / this.grid[0]) * this.grid[0])\r\n                }\r\n                if (this.axis === 'y' || this.axis === 'both') {\r\n                    this.top = (Math.round(this.elmY / this.grid[1]) * this.grid[1])\r\n                }\r\n\r\n                this.$emit('dragging', this.left, this.top)\r\n            } else if (this.rotating) {\r\n                const origin = this.getOrigin()\r\n                const lastAngle = Math.atan2(lastMouseY - origin.y, lastMouseX - origin.x)\r\n                const currentAngle = Math.atan2(this.mouseY - origin.y, this.mouseX - origin.x)\r\n                this.rotateAngle += Math.round((currentAngle - lastAngle) * 180 / Math.PI)\r\n                this.$emit('rotating', this.rotateAngle)\r\n            }\r\n        },\r\n        handleUp(e) {\r\n            if (e.type.indexOf('touch') !== -1) {\r\n                this.lastMouseX = e.changedTouches[0].clientX\r\n                this.lastMouseY = e.changedTouches[0].clientY\r\n            }\r\n            this.handle = null\r\n            if (this.resizing) {\r\n                this.resizing = false\r\n                this.$emit('resizestop', this.left, this.top, this.width, this.height)\r\n            }\r\n            if (this.dragging) {\r\n                this.dragging = false\r\n                this.$emit('dragstop', this.left, this.top)\r\n            }\r\n\r\n            if (this.rotating) {\r\n                this.rotating = false\r\n                this.$emit('rotatestop', this.rotateAngle)\r\n            }\r\n\r\n            this.elmX = this.left\r\n            this.elmY = this.top\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n@import '../../assets/less/variables';\r\n\r\n@main-color: #2e95ff;\r\n@circle-size: 8px;\r\n\r\n.z-drr-container {\r\n    position: absolute;\r\n    border: 1px dashed transparent;\r\n\r\n    *, *:before, *:after {\r\n        padding: 0;\r\n        margin: 0;\r\n        box-sizing: border-box;\r\n        -moz-box-sizing: border-box;\r\n    }\r\n}\r\n\r\n.z-draggable:hover {\r\n    cursor: move;\r\n}\r\n\r\n.circle(@bgc: #fff) {\r\n    position: absolute;\r\n    width: @circle-size;\r\n    height: @circle-size;\r\n    border: 1px solid @main-color;\r\n    border-radius: 50%;\r\n    background: @bgc;\r\n}\r\n\r\n.z-rotateable-handle {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: -@circle-size * 3;\r\n    width: 1px;\r\n    height: @circle-size * 3;\r\n    margin-left: -.5px;\r\n    background-color: @main-color;\r\n    cursor: url(../../assets/img/mouse-rotate.png) 8 8, default;\r\n\r\n    &:after {\r\n        content: ' ';\r\n        top: 0;\r\n        left: 0;\r\n        margin-left: -(@circle-size - 1)/2;\r\n        .circle(@main-color);\r\n    }\r\n}\r\n\r\n.z-resizeable-handle {\r\n    display: none;\r\n    position: absolute;\r\n}\r\n\r\n.z-handle-nw,\r\n.z-handle-ne,\r\n.z-handle-sw,\r\n.z-handle-se {\r\n    .circle;\r\n}\r\n\r\n.z-handle-nw {\r\n    top: -@circle-size/2;\r\n    left: -@circle-size/2;\r\n    cursor: nw-resize;\r\n}\r\n\r\n.z-handle-ne {\r\n    top: -@circle-size/2;\r\n    right: -@circle-size/2;\r\n    cursor: ne-resize;\r\n}\r\n\r\n.z-handle-sw {\r\n    bottom: -@circle-size/2;\r\n    left: -@circle-size/2;\r\n    cursor: sw-resize;\r\n}\r\n\r\n.z-handle-se {\r\n    bottom: -@circle-size/2;\r\n    right: -@circle-size/2;\r\n    cursor: se-resize;\r\n}\r\n\r\n.z-handle-n,\r\n.z-handle-w,\r\n.z-handle-e,\r\n.z-handle-s {\r\n    &:after {\r\n        content: ' ';\r\n        .circle;\r\n    }\r\n}\r\n\r\n.z-handle-n {\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: @circle-size/2;\r\n    cursor: n-resize;\r\n\r\n    &:after {\r\n        bottom: 0;\r\n        left: 50%;\r\n        margin-left: -@circle-size/2;\r\n    }\r\n}\r\n\r\n.z-handle-w {\r\n    top: 0;\r\n    left: 0;\r\n    width: @circle-size/2;\r\n    height: 100%;\r\n    cursor: w-resize;\r\n\r\n    &:after {\r\n        top: 50%;\r\n        right: 0;\r\n        margin-top: -@circle-size/2;\r\n    }\r\n}\r\n\r\n.z-handle-e {\r\n    top: 0;\r\n    right: 0;\r\n    width: @circle-size/2;\r\n    height: 100%;\r\n    cursor: e-resize;\r\n\r\n    &:after {\r\n        top: 50%;\r\n        left: 0;\r\n        margin-top: -@circle-size/2;\r\n    }\r\n}\r\n\r\n.z-handle-s {\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: @circle-size/2;\r\n    cursor: s-resize;\r\n\r\n    &:after {\r\n        top: 0;\r\n        left: 50%;\r\n        margin-left: -@circle-size/2;\r\n    }\r\n}\r\n\r\n.z-active {\r\n    border: 1px dashed @main-color;\r\n    z-index: 999;\r\n}\r\n</style>\r\n"]}]}