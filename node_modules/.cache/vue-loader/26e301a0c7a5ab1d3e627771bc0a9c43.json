{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/config/dialog/commodityConfig.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/config/dialog/commodityConfig.vue","mtime":1632384454805},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZWwtZGlhbG9nIHsNCiAgICB3aWR0aDogMzAlOw0KfQ0K"},{"version":3,"sources":["commodityConfig.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA","file":"commodityConfig.vue","sourceRoot":"src/views/manage/config/dialog","sourcesContent":["<template>\r\n    <el-dialog title=\"\" :visible.sync=\"dialogVisible\" append-to-body :before-close=\"closeDialog\">\r\n        <el-button v-for=\"item in areaList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" @click=\"closeDialog\">\r\n            <router-link :to=\"{path:'./app-commodity-list',query: {appId: appId, areaId: item.value,appName: appName}}\">{{ item.label }}</router-link>\r\n        </el-button>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport {getAreaList} from \"@/utils/common\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            areaList:[],\r\n            appId: undefined,\r\n            appName: undefined,\r\n            dialogVisible: false\r\n        }\r\n    },\r\n    methods: {\r\n        init(row){\r\n            let arr = []\r\n            getAreaList().forEach(item => {\r\n                if(row.areaIds.indexOf(item.value) >= 0){\r\n                    arr.push(item)\r\n                }\r\n            })\r\n            this.areaList = arr\r\n            this.appId = row.id\r\n            this.appName = row.app.label\r\n        },\r\n        resetForm() {\r\n            this.$refs.ruleForm.resetFields()\r\n        },\r\n        closeDialog() {\r\n            this.iconArr = []\r\n            this.dialogVisible = false\r\n            this.resetForm()\r\n            this.$emit('fetchData');\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.el-dialog {\r\n    width: 30%;\r\n}\r\n</style>\r\n"]}]}