{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/home/Home.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/home/Home.vue","mtime":1631791695619},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9sZXNzL2hvbWUiOwo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4QA","file":"Home.vue","sourceRoot":"src/views/home","sourcesContent":["<template>\n    <div class=\"home-wrapper\" v-loading=\"listLoading\">\n        <div class=\"date-row\">\n            <div v-for=\"(item, index) in cardInfoData\" :key=\"index\" class=\"data-col\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '0px'}\">\n                    <div class=\"date-block\">\n                        <div class=\"date-cont\">\n                            <div v-if=\"item.num === 3\" style=\"display: inline\">\n                                <CountTo class=\"count-min\" :start-val=\"0\" :end-val=\"item.count\" :duration=\"3000\"/>\n                                /<CountTo class=\"count-min\" :start-val=\"0\" :end-val=\"item.count2\" :duration=\"3000\"/>\n                                /<CountTo class=\"count-min\" :start-val=\"0\" :end-val=\"item.count3\" :duration=\"3000\"/>\n                            </div>\n                            <div v-else-if=\"item.num === 2\" style=\"display: inline\">\n                                <CountTo class=\"count-min\" :start-val=\"0\" :end-val=\"item.count\" :duration=\"3000\"/>\n                                /<CountTo class=\"count-min\" :start-val=\"0\" :end-val=\"item.count2\" :duration=\"3000\"/>\n                            </div>\n                            <div v-else-if=\"item.num === 1\" style=\"display: inline\">\n                                <CountTo class=\"count-min\" :start-val=\"0\" :end-val=\"item.count\" :duration=\"3000\"/>\n                            </div>\n                            <p class=\"title\">{{ item.title }}</p>\n                        </div>\n                    </div>\n                </el-card>\n            </div>\n        </div>\n\n        <el-row class=\"date-box\" :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <el-form\n                        ref=\"searchForm\"\n                        :inline=\"true\"\n                        :model=\"search\"\n                        label-width=\"90px\"\n                        class=\"search-form\"\n                    >\n                        <template>\n                            <el-form-item label=\"区域\">\n                                <el-select v-model=\"search.areaId\" placeholder=\"请选择\">\n                                    <el-option v-for=\"item in areaList\"\n                                               :key=\"item.value\"\n                                               :label=\"item.label\"\n                                               :value=\"item.value\">\n                                    </el-option>\n                                </el-select>\n                            </el-form-item>\n                            <el-form-item label=\"时间\">\n                                <el-date-picker\n                                    v-model=\"search.date\"\n                                    type=\"date\"\n                                    placeholder=\"选择日期\">\n                                </el-date-picker>\n                            </el-form-item>\n                            <el-form-item>\n                                <el-button type=\"danger\" @click=\"onSearch\" icon=\"el-icon-refresh\">刷 新</el-button>\n                        </el-form-item>\n                        </template>\n                    </el-form>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsBarLine :data=\"incomeData\" v-if=\"incomeData.data\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsBarLine :data=\"totalDate\" v-if=\"totalDate.data\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsBar title=\"新增用户\" :data=\"userDate\" v-if=\"userDate.data\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsLine :data=\"activeData\" v-if=\"activeData.data\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsBar title=\"充值渠道\" :data=\"channelData\" v-if=\"channelData.data\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport CountTo from 'vue-count-to'\nimport ChartsBarLine from '../../components/Charts/ChartsBarLine'\nimport ChartsBar from '../../components/Charts/ChartsBar'\nimport ChartsLine from '../../components/Charts/ChartsLine'\nimport {getAreaList, getAppList, getAppName} from \"@/utils/common\"\n\nexport default {\n    name: 'Home',\n    components: {CountTo, ChartsBar, ChartsBarLine, ChartsLine},\n    data() {\n        return {\n            listLoading: false,\n            search: {\n                areaId: 1,\n                date: new Date(new Date().format('yyyy-MM-dd')),\n                startAt: undefined,\n                endAt: undefined\n            },\n            areaList: getAreaList(),\n            appList: getAppList(),\n            cardInfoData: [],\n            incomeData: {\n                title: '新增收入',\n                legend: ['新增收入'],\n                data: undefined\n            },\n            totalDate: {\n                title: '全部收入',\n                legend: ['总收入'],\n                data: undefined\n            },\n            userDate: {\n                title: '新增用户',\n                legend: ['新增用户'],\n                data: undefined\n            },\n            activeData: {\n                title: '活跃用户',\n                legend: ['活跃用户'],\n                keys: ['14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00'],\n                values: [\n                    [120, 132, 101, 134, 90, 230, 210]\n                ]\n            },\n            channelData: {\n                title: '充值渠道',\n                legend: ['google', 'apple', '其他'],\n                data: undefined\n            }\n        }\n    },\n    created() {\n        this.initCard()\n        this.initData()\n    },\n    methods: {\n        onSearch() {\n            this.listLoading = true\n            this.initCard()\n            this.initData()\n        },\n        initCard(){\n\n            const $this = this\n            this.cardInfoData = []\n            this.$service.home.getOverview(this.handleSearch(), function (result){\n                let inc = {\n                    title: '大盘实时收入', num: 2, count: result.getIncome(), count2: result.getPayCount()\n                }\n                let user = {\n                    title: '新增/活跃用户', num: 2, count: result.getNewUser(), count2: result.getActiveUser()\n                }\n                let anchor = {\n                    title: '通话/在线主播', num: 2, count: result.getBusyAnchor(), count2: result.getOnlineAnchor()\n                }\n                let review = {\n                    title: '待审核主播/profile/视频', num: 3, count: result.getReviewAnchor(), count2: result.getReviewProfile(), count3: result.getReviewVideo()\n                }\n                let amount = {\n                    title: '新充值/消费/总余额', num: 3, count: result.getNewAmount(), count2: result.getExpenseAmount(), count3: result.getTotalAmount()\n                }\n                $this.cardInfoData.push(inc)\n                $this.cardInfoData.push(user)\n                $this.cardInfoData.push(anchor)\n                $this.cardInfoData.push(review)\n                $this.cardInfoData.push(amount)\n            });\n\n\n        },\n        initData(){\n            const $this = this\n            this.$service.home.getHomeStat(this.handleSearch(), function (result){\n                let statList = result.getStatsList()\n\n                let newArr = []\n                let totalArr = []\n                let userArr = []\n                let channelArr = []\n                statList.forEach(item => {\n                    let app = getAppName($this.appList, item.getAppId())\n                    let osStr = app.os === 1 ? \"🤖\" : \"\";\n                    let title = app.label + osStr\n\n                    newArr.push({\n                        title: title,\n                        val1: item.getNewIncome()\n                    })\n\n                    totalArr.push({\n                        title: title,\n                        val1: item.getTotalIncome()\n                    })\n\n                    userArr.push({\n                        title: title,\n                        val1: item.getNewUser()\n                    })\n\n                    channelArr.push({\n                        title: title,\n                        val1: item.getGoogleIncome(),\n                        val2: item.getAppleIncome(),\n                        val3: item.getOtherIncome()\n                    })\n                })\n                $this.incomeData.data = newArr\n                $this.totalDate.data = totalArr\n                $this.userDate.data = userArr\n                $this.channelData.data = channelArr\n\n                let activeList = result.getHourlyActivesList()\n                $this.handleActiveData(activeList)\n                $this.listLoading = false\n            });\n\n        },\n        handleSearch(){\n            let date = this.search.date\n            this.search.startAt = this.startUnix(date)\n            this.search.endAt = this.endUnix(date)\n            return this.search\n        },\n        handleActiveData(statList){\n            let data = []\n            statList.forEach((item, index) => {\n                this.activeData.keys.push(index + \":00\")\n                data.push(item)\n            })\n            this.activeData.values.push(data)\n        },\n        startUnix($date) {\n            return new Date($date.toLocaleDateString()).getTime() / 1000\n        },\n        endUnix($date) {\n            return this.startUnix($date) + 24 * 60 * 60 - 1\n        }\n    }\n}\n</script>\n\n<style lang=\"less\">\n@import \"../../assets/less/home\";\n</style>\n"]}]}