{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-manage/src/views/tools/Drag/DragList.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-manage/src/views/tools/Drag/DragList.vue","mtime":1626074721795},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kcmFnLWxpc3Qtd3JhcHBlciB7CiAgICAubGlzdC1jb250IHsKICAgICAgICBoZWlnaHQ6IDUxMHB4OwoKICAgICAgICAuZWwtY2FyZCB7CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CgogICAgICAgICAgICAuZWwtY2FyZF9fYm9keSB7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNHB4IDIwcHg7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["DragList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"DragList.vue","sourceRoot":"src/views/tools/Drag","sourcesContent":["<template>\n    <div class=\"drag-list-wrapper\">\n        <Hints>\n            <template slot=\"hintName\">拖拽列表</template>\n            <template slot=\"hintInfo\">\n                <p>Vue.Draggable：基于Sortable.js的vue组件，用以实现拖拽功能</p>\n                <p>github地址：访问\n                    <el-link type=\"success\" href=\"https://github.com/SortableJS/Vue.Draggable\" target=\"_blank\">\n                        Vue.Draggable\n                    </el-link>\n                </p>\n            </template>\n        </Hints>\n        <el-row :gutter=\"20\">\n            <el-col :span=\"5\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">列表1事项</div>\n                    <Draggable v-model=\"listOne\" group=\"list\" class=\"list-cont list1\"\n                               @end=\"handleChange($event, '列表1')\">\n                        <el-card v-for=\"(item, index) in listOne\" :key=\"index\" shadow=\"hover\">{{ item.name }}</el-card>\n                    </Draggable>\n                </el-card>\n            </el-col>\n            <el-col :span=\"5\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">列表2事项</div>\n                    <Draggable v-model=\"listTwo\" group=\"list\" class=\"list-cont list2\"\n                               @end=\"handleChange($event, '列表2')\">\n                        <el-card v-for=\"(item, index) in listTwo\" :key=\"index\" shadow=\"hover\">{{ item.name }}</el-card>\n                    </Draggable>\n                </el-card>\n            </el-col>\n            <el-col :span=\"4\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">操作记录</div>\n                    <div class=\"list-cont\">\n                        <p v-for=\"(item, index) in handleList\" :key=\"index\">{{ item }}</p>\n                    </div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"5\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">列表1数据</div>\n                    <pre class=\"list-cont\">{{ listOne }}</pre>\n                </el-card>\n            </el-col>\n            <el-col :span=\"5\">\n                <el-card shadow=\"always\">\n                    <div slot=\"header\" class=\"title\">列表2数据</div>\n                    <pre class=\"list-cont\">{{ listTwo }}</pre>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport Draggable from 'vuedraggable'\nimport Hints from '../../../components/Hints'\n\nconst message = [\n    'ECMAScript6',\n    'VueJS',\n    'ReactJS',\n    'AngularJS',\n    'Webpack',\n    'NodeJS',\n    'TypeScript'\n]\n\nexport default {\n    name: 'DragList',\n    components: {Draggable, Hints},\n    data() {\n        return {\n            listOne: message.map((name, index) => {\n                return {name, order: index + 1}\n            }),\n            listTwo: [],\n            handleList: []\n        }\n    },\n    methods: {\n        handleChange(event, type) {\n            const srcClassName = event.from.classList[1]\n            const targetClassName = event.to.classList[1]\n            let from = ''\n            let to = ''\n            if (srcClassName === targetClassName) {\n                if (type === '列表1') {\n                    from = '列表1'\n                    to = '列表1'\n                } else {\n                    from = '列表2'\n                    to = '列表2'\n                }\n            } else {\n                if (type === '列表1') {\n                    from = '列表1'\n                    to = '列表2'\n                } else {\n                    from = '列表2'\n                    to = '列表1'\n                }\n            }\n            this.handleList.push(`${from} => ${to}, ${event.oldIndex} => ${event.newIndex}`)\n        }\n    }\n}\n</script>\n\n<style lang=\"less\">\n.drag-list-wrapper {\n    .list-cont {\n        height: 510px;\n\n        .el-card {\n            margin-bottom: 10px;\n\n            .el-card__body {\n                padding: 14px 20px;\n            }\n        }\n    }\n}\n</style>\n"]}]}