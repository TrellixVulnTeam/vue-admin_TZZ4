{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/aia/robot-dynamic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/aia/robot-dynamic.vue","mtime":1635405307769},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvUGFnaW5hdGlvbicKaW1wb3J0IGFkZFJvYm90RHluYW1pYyBmcm9tICcuL2RpYWxvZy9hZGQtcm9ib3QtZHluYW1pYycKaW1wb3J0IEhpbnRzIGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvSGludHMnCmltcG9ydCB7Z2V0QXJyTmFtZSwgZ2V0QXJlYUxpc3QsIGdldFJldmlld1N0YXR1c30gZnJvbSAiQC91dGlscy9kaXN0IjsKaW1wb3J0IHt0b1RpbWV9IGZyb20gIkAvdXRpbHMvdXRpbCI7CmltcG9ydCBWdWVWaWRlb1BsYXllciBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL1Z1ZVZpZGVvUGxheWVyJwppbXBvcnQge2lzRW1wdHl9IGZyb20gIkAvYXBpL2FwaSI7CgoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1RhYmxlJywKICAgIGNvbXBvbmVudHM6IHtQYWdpbmF0aW9uLCBIaW50cywgYWRkUm9ib3REeW5hbWljLCBWdWVWaWRlb1BsYXllcn0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIC8vIOaVsOaNruWIl+ihqOWKoOi9veWKqOeUuwogICAgICAgICAgICBsaXN0TG9hZGluZzogdHJ1ZSwKICAgICAgICAgICAgLy8g5p+l6K+i5YiX6KGo5Y+C5pWw5a+56LGhCiAgICAgICAgICAgIHNlYXJjaDogewogICAgICAgICAgICAgICAgZW50aXR5VHlwZTogMiwKICAgICAgICAgICAgICAgIGVudGl0eUlkOiAiIiwKICAgICAgICAgICAgICAgIHBhZ2U6ewogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiAxMAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICB0b3RhbDogMCwKICAgICAgICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgICAgICAgbXVsdGlwbGVTZWxlY3Rpb246IFtdLAogICAgICAgICAgICBmb3JtVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIHBsYXlWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgYXJlYUxpc3Q6IGdldEFyZWFMaXN0KHRydWUpLAogICAgICAgICAgICBhcHBMaXN0OiBbXQogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuc2VhcmNoLmVudGl0eUlkID0gdGhpcy4kcm91dGUucXVlcnkucm9ib3RJZAogICAgICAgIHRoaXMuc2VhcmNoLm5pY2tuYW1lID0gdGhpcy4kcm91dGUucXVlcnkubmlja25hbWUKICAgICAgICB0aGlzLmZldGNoRGF0YSgpCiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICAkcm91dGU6IHsKICAgICAgICAgICAgaGFuZGxlcihuZXdOYW1lLCBvbGROYW1lKSB7CiAgICAgICAgICAgICAgICBsZXQgcm9ib3RJZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnJvYm90SWQKICAgICAgICAgICAgICAgIGxldCBuaWNrbmFtZSA9IHRoaXMuJHJvdXRlLnF1ZXJ5Lm5pY2tuYW1lCiAgICAgICAgICAgICAgICBpZighaXNFbXB0eShyb2JvdElkKSl7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWFyY2guZW50aXR5SWQgPSByb2JvdElkCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWFyY2gubmlja25hbWUgPSBuaWNrbmFtZQogICAgICAgICAgICAgICAgICAgIHRoaXMuZmV0Y2hEYXRhKCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGVlcDogdHJ1ZQogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLy8g6I635Y+W5pWw5o2u5YiX6KGoCiAgICAgICAgZmV0Y2hEYXRhKCkgewogICAgICAgICAgICBjb25zdCAkdGhpcyA9IHRoaXMKICAgICAgICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWUKICAgICAgICAgICAgdGhpcy4kc2VydmljZS5yb2JvdC5nZXRNb21lbnRMaXN0KHRoaXMuc2VhcmNoLCBmdW5jdGlvbiAocmVzdWx0KXsKICAgICAgICAgICAgICAgIGNvbnN0IGxpc3QgPSByZXN1bHQuZ2V0TW9tZW50c0xpc3QoKQogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IFtdCiAgICAgICAgICAgICAgICBsaXN0LmZvckVhY2goKGl0ZW0sIGluZGV4KT0+ewogICAgICAgICAgICAgICAgICAgIGNvbnN0IGpzb24gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICJpZCIgOiBpdGVtLmdldElkKCksCiAgICAgICAgICAgICAgICAgICAgICAgICJhcHBJZCIgOiBpdGVtLmdldEFwcElkKCksCiAgICAgICAgICAgICAgICAgICAgICAgICJhcmVhSWQiIDogaXRlbS5nZXRBcmVhSWQoKSwKICAgICAgICAgICAgICAgICAgICAgICAgImFyZWFTdHIiIDogZ2V0QXJyTmFtZSgkdGhpcy5hcmVhTGlzdCwgaXRlbS5nZXRBcmVhSWQoKSksCiAgICAgICAgICAgICAgICAgICAgICAgICJlbnRpdHlUeXBlIiA6IGl0ZW0uZ2V0RW50aXR5VHlwZSgpLAogICAgICAgICAgICAgICAgICAgICAgICAiZW50aXR5SWQiIDogaXRlbS5nZXRFbnRpdHlJZCgpLAogICAgICAgICAgICAgICAgICAgICAgICAic3RhdHVzIiA6IGdldFJldmlld1N0YXR1cyhpdGVtLmdldFN0YXR1cygpKSwKICAgICAgICAgICAgICAgICAgICAgICAgImNvbnRlbnQiIDogaXRlbS5nZXRDb250ZW50KCksCiAgICAgICAgICAgICAgICAgICAgICAgICJpbWFnZXMiOiBpdGVtLmdldEltYWdlc0xpc3QoKSwKICAgICAgICAgICAgICAgICAgICAgICAgInZpZGVvIjogaXRlbS5nZXRWaWRlbygpLAogICAgICAgICAgICAgICAgICAgICAgICAidGh1bWIiOiBpdGVtLmdldFRodW1iKCksCiAgICAgICAgICAgICAgICAgICAgICAgICJsaWtlcyI6IGl0ZW0uZ2V0TGlrZXMoKSwKICAgICAgICAgICAgICAgICAgICAgICAgInB1Ymxpc2hBdFRpbWUiOiB0b1RpbWUoaXRlbS5nZXRQdWJsaXNoQXQoKSksCiAgICAgICAgICAgICAgICAgICAgICAgICJuaWNrbmFtZSI6IGl0ZW0uZ2V0Tmlja25hbWUoKSwKICAgICAgICAgICAgICAgICAgICAgICAgImF2YXRhciI6IGl0ZW0uZ2V0QXZhdGFyKCksCiAgICAgICAgICAgICAgICAgICAgICAgICJzdHJ1Y3QiOiBpdGVtCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGRhdGEucHVzaChqc29uKQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC8vICR0aGlzLnRvdGFsID0gcmVzdWx0LmdldFRvdGFsQ291bnQoKQogICAgICAgICAgICAgICAgJHRoaXMudGFibGVEYXRhID0gZGF0YQogICAgICAgICAgICAgICAgJHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZQogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIG9uU3VibWl0KCkgewogICAgICAgICAgICB0aGlzLnNlYXJjaC5wYWdlLmN1cnJlbnRQYWdlID0gMQogICAgICAgICAgICB0aGlzLmZldGNoRGF0YSgpCiAgICAgICAgfSwKICAgICAgICB0b0RpYWxvZyhjb21wb25lbnQsIHJvdywgZW50aXR5SWQpewogICAgICAgICAgICB0aGlzLiRyZWZzW2NvbXBvbmVudF0uZGlhbG9nVmlzaWJsZSA9IHRydWUKICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PnsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnNbY29tcG9uZW50XS5pbml0KHJvdywgZW50aXR5SWQpCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBwbGF5KHJvdykgewogICAgICAgICAgICB0aGlzLnBsYXlWaXNpYmxlID0gdHJ1ZTsKICAgICAgICAgICAgbGV0IHNyYyA9IHJvdy52aWRlbwogICAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+ewogICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5teVZpZGVvUGxheWVyLmluaXRTcmMoc3JjKTsKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGNsb3NlVmlkZW8oKXsKICAgICAgICAgICAgdGhpcy5wbGF5VmlzaWJsZSA9IGZhbHNlOwogICAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+ewogICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5teVZpZGVvUGxheWVyLmVtcHR5U3JjKCk7CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBoYW5kbGVEZWxldGUoaW5kZXgsIHJvdykgewogICAgICAgICAgICBjb25zb2xlLmxvZyhpbmRleCwgcm93KQogICAgICAgICAgICB0aGlzLiRjb25maXJtKCfmraTmk43kvZzlsIbliKDpmaTpgInkuK3mlbDmja4sIOaYr+WQpue7p+e7rT8nLCAn5o+Q56S6JywgewogICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICAgICAgfSkudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICAvLyDmraTlpITlj6/mt7vliqAtLeWIoOmZpOaOpeWPowogICAgICAgICAgICAgICAgLy8g5Yig6Zmk5oiQ5Yqf6LCD55SoZmV0Y2hEYXRh5pa55rOV5pu05paw5YiX6KGoCiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOaIkOWKnyEnCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnaW5mbycsCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+W3suWPlua2iOWIoOmZpCcKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICAvLyDmibnph4/liKDpmaQKICAgICAgICBiYXRjaERlbGV0ZSgpIHsKICAgICAgICAgICAgaWYgKHRoaXMubXVsdGlwbGVTZWxlY3Rpb24ubGVuZ3RoIDwgMSkgewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+WFiOmAieaLqeimgeWIoOmZpOeahOaVsOaNru+8gScsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVEZWxldGUoKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},null]}