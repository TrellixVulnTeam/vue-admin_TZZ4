{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-manage/src/components/Editor/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-manage/src/components/Editor/index.vue","mtime":1626074721565},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgRSBmcm9tICd3YW5nZWRpdG9yJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogJ0VkaXRvcicsDQogICAgcHJvcHM6IHsNCiAgICAgICAgdmFsdWU6IHsNCiAgICAgICAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgICAgICAgIGRlZmF1bHQ6ICcnDQogICAgICAgIH0sDQogICAgICAgIHBsYWNlaG9sZGVyOiB7DQogICAgICAgICAgICB0eXBlOiBTdHJpbmcsDQogICAgICAgICAgICBkZWZhdWx0OiAnJw0KICAgICAgICB9DQogICAgfSwNCiAgICBkYXRhKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgZWRpdG9yOiBudWxsDQogICAgICAgIH0NCiAgICB9LA0KICAgIHdhdGNoOiB7DQogICAgICAgIHZhbHVlKHZhbCkgew0KICAgICAgICAgICAgdGhpcy5lZGl0b3IudHh0Lmh0bWwodmFsKQ0KICAgICAgICB9DQogICAgfSwNCiAgICBtb3VudGVkKCkgew0KICAgICAgICB0aGlzLmVkaXRvciA9IG5ldyBFKHRoaXMuJHJlZnMuZWRpdG9yRWxlKQ0KICAgICAgICB0aGlzLmVkaXRvci5jdXN0b21Db25maWcub25jaGFuZ2UgPSAoaHRtbCkgPT4gew0KICAgICAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBodG1sKQ0KICAgICAgICB9DQogICAgICAgIHRoaXMuZWRpdG9yLmN1c3RvbUNvbmZpZy51cGxvYWRJbWdTZXJ2ZXIgPSAn5L2g55qE5LiK5Lyg5Zu+54mH55qE5o6l5Y+jJw0KICAgICAgICB0aGlzLmVkaXRvci5jdXN0b21Db25maWcudXBsb2FkRmlsZU5hbWUgPSAn5L2g6Ieq5a6a5LmJ55qE5paH5Lu25ZCNJw0KICAgICAgICAvLyDkuIvpnaLmmK/mnIDph43opoHnmoTnmoTmlrnms5UNCiAgICAgICAgdGhpcy5lZGl0b3IuY3VzdG9tQ29uZmlnLnVwbG9hZEltZ0hvb2tzID0gew0KICAgICAgICAgICAgYmVmb3JlOiBmdW5jdGlvbiAoeGhyLCBlZGl0b3IsIGZpbGVzKSB7DQogICAgICAgICAgICAgICAgLy8g5Zu+54mH5LiK5Lyg5LmL5YmN6Kem5Y+RDQogICAgICAgICAgICAgICAgLy8geGhyIOaYryBYTUxIdHRwUmVxdXN0IOWvueixoe+8jGVkaXRvciDmmK/nvJbovpHlmajlr7nosaHvvIxmaWxlcyDmmK/pgInmi6nnmoTlm77niYfmlofku7YNCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOi/lOWbnueahOe7k+aenOaYryB7cHJldmVudDogdHJ1ZSwgbXNnOiAneHh4eCd9IOWImeihqOekuueUqOaIt+aUvuW8g+S4iuS8oA0KICAgICAgICAgICAgICAgIC8vIHJldHVybiB7DQogICAgICAgICAgICAgICAgLy8gICAgIHByZXZlbnQ6IHRydWUsDQogICAgICAgICAgICAgICAgLy8gICAgIG1zZzogJ+aUvuW8g+S4iuS8oCcNCiAgICAgICAgICAgICAgICAvLyB9DQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHhociwgZWRpdG9yLCByZXN1bHQpIHsNCiAgICAgICAgICAgICAgICAvLyDlm77niYfkuIrkvKDlubbov5Tlm57nu5PmnpzvvIzlm77niYfmj5LlhaXmiJDlip/kuYvlkI7op6blj5ENCiAgICAgICAgICAgICAgICAvLyB4aHIg5pivIFhNTEh0dHBSZXF1c3Qg5a+56LGh77yMZWRpdG9yIOaYr+e8lui+keWZqOWvueixoe+8jHJlc3VsdCDmmK/mnI3liqHlmajnq6/ov5Tlm57nmoTnu5PmnpwNCiAgICAgICAgICAgICAgICB0aGlzLmltZ1VybCA9IE9iamVjdC52YWx1ZXMocmVzdWx0LmRhdGEpLnRvU3RyaW5nKCkNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoeGhyLCBlZGl0b3IsIHJlc3VsdCkgew0KICAgICAgICAgICAgICAgIC8vIOWbvueJh+S4iuS8oOW5tui/lOWbnue7k+aenO+8jOS9huWbvueJh+aPkuWFpemUmeivr+aXtuinpuWPkQ0KICAgICAgICAgICAgICAgIC8vIHhociDmmK8gWE1MSHR0cFJlcXVzdCDlr7nosaHvvIxlZGl0b3Ig5piv57yW6L6R5Zmo5a+56LGh77yMcmVzdWx0IOaYr+acjeWKoeWZqOerr+i/lOWbnueahOe7k+aenA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoeGhyLCBlZGl0b3IpIHsNCiAgICAgICAgICAgICAgICAvLyDlm77niYfkuIrkvKDlh7rplJnml7bop6blj5ENCiAgICAgICAgICAgICAgICAvLyB4aHIg5pivIFhNTEh0dHBSZXF1c3Qg5a+56LGh77yMZWRpdG9yIOaYr+e8lui+keWZqOWvueixoQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHRpbWVvdXQ6IGZ1bmN0aW9uICh4aHIsIGVkaXRvcikgew0KICAgICAgICAgICAgICAgIC8vIOWbvueJh+S4iuS8oOi2heaXtuaXtuinpuWPkQ0KICAgICAgICAgICAgICAgIC8vIHhociDmmK8gWE1MSHR0cFJlcXVzdCDlr7nosaHvvIxlZGl0b3Ig5piv57yW6L6R5Zmo5a+56LGhDQogICAgICAgICAgICB9LA0KDQogICAgICAgICAgICAvLyDlpoLmnpzmnI3liqHlmajnq6/ov5Tlm57nmoTkuI3mmK8ge2Vycm5vOjAsIGRhdGE6IFsuLi5dfSDov5nnp43moLzlvI/vvIzlj6/kvb/nlKjor6XphY3nva4NCiAgICAgICAgICAgIC8vIO+8iOS9huaYr++8jOacjeWKoeWZqOerr+i/lOWbnueahOW/hemhu+aYr+S4gOS4qiBKU09OIOagvOW8j+Wtl+espuS4su+8ge+8ge+8geWQpuWImeS8muaKpemUme+8iQ0KICAgICAgICAgICAgY3VzdG9tSW5zZXJ0OiBmdW5jdGlvbiAoaW5zZXJ0SW1nLCByZXN1bHQsIGVkaXRvcikgew0KICAgICAgICAgICAgICAgIC8vIOWbvueJh+S4iuS8oOW5tui/lOWbnue7k+aenO+8jOiHquWumuS5ieaPkuWFpeWbvueJh+eahOS6i+S7tu+8iOiAjOS4jeaYr+e8lui+keWZqOiHquWKqOaPkuWFpeWbvueJh++8ge+8ge+8ge+8iQ0KICAgICAgICAgICAgICAgIC8vIGluc2VydEltZyDmmK/mj5LlhaXlm77niYfnmoTlh73mlbDvvIxlZGl0b3Ig5piv57yW6L6R5Zmo5a+56LGh77yMcmVzdWx0IOaYr+acjeWKoeWZqOerr+i/lOWbnueahOe7k+aenA0KDQogICAgICAgICAgICAgICAgLy8g5Li+5L6L77ya5YGH5aaC5LiK5Lyg5Zu+54mH5oiQ5Yqf5ZCO77yM5pyN5Yqh5Zmo56uv6L+U5Zue55qE5pivIHt1cmw6Jy4uLi4nfSDov5nnp43moLzlvI/vvIzljbPlj6/ov5nmoLfmj5LlhaXlm77niYfvvJoNCiAgICAgICAgICAgICAgICAvLyByZXN1bHQuZGF0YeWwseaYr+acjeWKoeWZqOi/lOWbnueahOWbvueJh+WQjeWtl+WSjOmTvuaOpQ0KICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IE9iamVjdC52YWx1ZXMocmVzdWx0LmRhdGEpDQogICAgICAgICAgICAgICAgLy8g5Zyo6L+Z6YeM6L2s5oiQSlNPTuagvOW8jw0KICAgICAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHVybCkNCiAgICAgICAgICAgICAgICBpbnNlcnRJbWcodXJsKQ0KICAgICAgICAgICAgICAgIC8vIHJlc3VsdCDlv4XpobvmmK/kuIDkuKogSlNPTiDmoLzlvI/lrZfnrKbkuLLvvIHvvIHvvIHlkKbliJnmiqXplJkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIC8vIOWIm+W7uuWvjOaWh+acrOWunuS+iw0KICAgICAgICB0aGlzLmVkaXRvci5jcmVhdGUoKQ0KICAgICAgICB0aGlzLmVkaXRvci50eHQuaHRtbCh0aGlzLnBsYWNlaG9sZGVyKQ0KICAgIH0sDQogICAgYmVmb3JlRGVzdHJveSgpIHsNCiAgICAgICAgdGhpcy5lZGl0b3IuZGVzdHJveSgpDQogICAgfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Editor","sourcesContent":["<template>\r\n    <div class=\"editor-wrapper\">\r\n        <div ref=\"editorEle\" class=\"editor-container\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport E from 'wangeditor'\r\n\r\nexport default {\r\n    name: 'Editor',\r\n    props: {\r\n        value: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        placeholder: {\r\n            type: String,\r\n            default: ''\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            editor: null\r\n        }\r\n    },\r\n    watch: {\r\n        value(val) {\r\n            this.editor.txt.html(val)\r\n        }\r\n    },\r\n    mounted() {\r\n        this.editor = new E(this.$refs.editorEle)\r\n        this.editor.customConfig.onchange = (html) => {\r\n            this.$emit('input', html)\r\n        }\r\n        this.editor.customConfig.uploadImgServer = '你的上传图片的接口'\r\n        this.editor.customConfig.uploadFileName = '你自定义的文件名'\r\n        // 下面是最重要的的方法\r\n        this.editor.customConfig.uploadImgHooks = {\r\n            before: function (xhr, editor, files) {\r\n                // 图片上传之前触发\r\n                // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，files 是选择的图片文件\r\n\r\n                // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\r\n                // return {\r\n                //     prevent: true,\r\n                //     msg: '放弃上传'\r\n                // }\r\n            },\r\n            success: function (xhr, editor, result) {\r\n                // 图片上传并返回结果，图片插入成功之后触发\r\n                // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果\r\n                this.imgUrl = Object.values(result.data).toString()\r\n            },\r\n            fail: function (xhr, editor, result) {\r\n                // 图片上传并返回结果，但图片插入错误时触发\r\n                // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果\r\n            },\r\n            error: function (xhr, editor) {\r\n                // 图片上传出错时触发\r\n                // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象\r\n            },\r\n            timeout: function (xhr, editor) {\r\n                // 图片上传超时时触发\r\n                // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象\r\n            },\r\n\r\n            // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置\r\n            // （但是，服务器端返回的必须是一个 JSON 格式字符串！！！否则会报错）\r\n            customInsert: function (insertImg, result, editor) {\r\n                // 图片上传并返回结果，自定义插入图片的事件（而不是编辑器自动插入图片！！！）\r\n                // insertImg 是插入图片的函数，editor 是编辑器对象，result 是服务器端返回的结果\r\n\r\n                // 举例：假如上传图片成功后，服务器端返回的是 {url:'....'} 这种格式，即可这样插入图片：\r\n                // result.data就是服务器返回的图片名字和链接\r\n                const url = Object.values(result.data)\r\n                // 在这里转成JSON格式\r\n                JSON.stringify(url)\r\n                insertImg(url)\r\n                // result 必须是一个 JSON 格式字符串！！！否则报错\r\n            }\r\n        }\r\n\r\n        // 创建富文本实例\r\n        this.editor.create()\r\n        this.editor.txt.html(this.placeholder)\r\n    },\r\n    beforeDestroy() {\r\n        this.editor.destroy()\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.editor-wrapper {\r\n    .editor-container {\r\n        text-align: left;\r\n        box-shadow: rgba(0, 0, 0, 0.1) 0 2px 12px 0;\r\n\r\n        .w-e-toolbar {\r\n            padding: 5px;\r\n            border: none !important;\r\n        }\r\n\r\n        .w-e-text-container {\r\n            min-height: 450px !important;\r\n            border: none !important;\r\n\r\n            .w-e-text {\r\n                padding: 10px;\r\n                overflow-y: auto;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n"]}]}