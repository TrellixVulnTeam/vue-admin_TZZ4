{"remainingRequest":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js??vue-loader-options!/home/mengy/Documents/iwork/kafo/vue-admin-design/src/views/image/ImageCropper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/src/views/image/ImageCropper.vue","mtime":1624500048824},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFZ1ZUNyb3BwZXIgfSBmcm9tICd2dWUtY3JvcHBlcicKaW1wb3J0IEhpbnRzIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvSGludHMnCmltcG9ydCBVcGxvYWRJbWFnZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL1VwbG9hZEltYWdlJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdJbWFnZUNyb3BwZXInLAogIGNvbXBvbmVudHM6IHsgSGludHMsIFZ1ZUNyb3BwZXIsIFVwbG9hZEltYWdlIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbmZpZ09iajogewogICAgICAgIGltZ1NyYzogJ2h0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9iYWltaW5neHVhbi9tZWRpYS1zdG9yZS9pbWFnZXMvaW1nMDIuanBnJywKICAgICAgICBjYW5Nb3ZlOiBmYWxzZSwKICAgICAgICBhdXRvQ3JvcDogdHJ1ZSwKICAgICAgICBjZW50ZXJCb3g6IHRydWUsCiAgICAgICAgaW5mb1RydWU6IHRydWUsCiAgICAgICAgZnVsbDogdHJ1ZSwKICAgICAgICBhdXRvQ3JvcFdpZHRoOiAzMDAsCiAgICAgICAgYXV0b0Nyb3BIZWlnaHQ6IDIwMCwKICAgICAgICBvdXRwdXRUeXBlOiAncG5nJwogICAgICB9LAogICAgICBkb3duSW1nOiAnIycsCiAgICAgIHByZXZpZXdzOiB7fQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlU3VjY2VzcyhkYXRhKSB7CiAgICAgIHRoaXMuY29uZmlnT2JqLmltZ1NyYyA9IGRhdGEKICAgIH0sCiAgICByZWFsVGltZShkYXRhKSB7CiAgICAgIHRoaXMucHJldmlld3MgPSBkYXRhCiAgICB9LAogICAgZG93bmxvYWRJbWFnZSgpIHsKICAgICAgdGhpcy4kcmVmcy5jcm9wcGVyLmdldENyb3BCbG9iKGRhdGEgPT4gewogICAgICAgIHRoaXMuZG93bkltZyA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGRhdGEpCiAgICAgICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3IubXNTYXZlQmxvYikgewogICAgICAgICAgY29uc3QgYmxvYk9iamVjdCA9IG5ldyBCbG9iKFtkYXRhXSkKICAgICAgICAgIHdpbmRvdy5uYXZpZ2F0b3IubXNTYXZlQmxvYihibG9iT2JqZWN0LCAnZGVtby5wbmcnKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuJHJlZnMuZG93bmxvYWREb20uY2xpY2soKQogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ImageCropper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImageCropper.vue","sourceRoot":"src/views/image","sourcesContent":["<template>\n  <div class=\"image-cropper-wrapper\">\n    <Hints>\n      <template slot=\"hintName\">图片裁剪插件</template>\n      <template slot=\"hintInfo\">\n        <p>Vue-Cropper：一个优雅的图片裁剪插件，可实现图片裁剪、图片生成等功能，并支持生成png、jpeg、webp等图片格式</p>\n        <p>github地址：访问 <el-link type=\"success\" href=\"https://github.com/xyxiao001/vue-cropper\" target=\"_blank\">Vue-Cropper</el-link></p>\n      </template>\n    </Hints>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"10\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">裁剪区域</div>\n          <div class=\"content-box\" style=\" height: 400px;\">\n            <VueCropper\n              ref=\"cropper\"\n              :img=\"configObj.imgSrc\"\n              :can-move=\"configObj.canMove\"\n              :auto-crop=\"configObj.autoCrop\"\n              :center-box=\"configObj.centerBox\"\n              :info-true=\"configObj.infoTrue\"\n              :full=\"configObj.full\"\n              :auto-crop-width=\"configObj.autoCropWidth\"\n              :auto-crop-height=\"configObj.autoCropHeight\"\n              :output-type=\"configObj.outputType\"\n              @realTime=\"realTime\"\n            />\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"4\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">设置区域</div>\n          <div class=\"content-box\" style=\" height: 400px;\">\n            <div style=\"height: 100px;\">\n              <UploadImage @on-success=\"handleSuccess\" />\n              <el-button size=\"small\" type=\"primary\" style=\"margin-top: 20px\">\n                <a @click=\"downloadImage\">生成图片</a>\n              </el-button>\n              <a ref=\"downloadDom\" :href=\"downImg\" download=\"demo.png\" />\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"10\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">预览区域</div>\n          <div class=\"content-box\" style=\"height: 400px;\">\n            <div class=\"show-preview\" :style=\"{'width': previews.w + 'px', 'height': previews.h + 'px', 'overflow': 'hidden', 'zoom': (400 / previews.h)}\">\n              <div :style=\"previews.div\">\n                <img :src=\"previews.url\" :style=\"previews.img\" alt=\"预览\">\n              </div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { VueCropper } from 'vue-cropper'\nimport Hints from '../../components/Hints'\nimport UploadImage from '../../components/UploadImage'\n\nexport default {\n  name: 'ImageCropper',\n  components: { Hints, VueCropper, UploadImage },\n  data() {\n    return {\n      configObj: {\n        imgSrc: 'https://cdn.jsdelivr.net/gh/baimingxuan/media-store/images/img02.jpg',\n        canMove: false,\n        autoCrop: true,\n        centerBox: true,\n        infoTrue: true,\n        full: true,\n        autoCropWidth: 300,\n        autoCropHeight: 200,\n        outputType: 'png'\n      },\n      downImg: '#',\n      previews: {}\n    }\n  },\n  methods: {\n    handleSuccess(data) {\n      this.configObj.imgSrc = data\n    },\n    realTime(data) {\n      this.previews = data\n    },\n    downloadImage() {\n      this.$refs.cropper.getCropBlob(data => {\n        this.downImg = window.URL.createObjectURL(data)\n        if (window.navigator.msSaveBlob) {\n          const blobObject = new Blob([data])\n          window.navigator.msSaveBlob(blobObject, 'demo.png')\n        } else {\n          this.$nextTick(() => {\n            this.$refs.downloadDom.click()\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}