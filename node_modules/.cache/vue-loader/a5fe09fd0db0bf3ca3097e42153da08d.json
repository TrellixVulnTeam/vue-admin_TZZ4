{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/anchor/dialog/anchor-info.vue?vue&type=template&id=66af6089&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/anchor/dialog/anchor-info.vue","mtime":1630663072702},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}