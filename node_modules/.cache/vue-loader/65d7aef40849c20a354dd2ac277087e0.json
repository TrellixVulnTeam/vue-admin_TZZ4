{"remainingRequest":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/Documents/iwork/kafo/vue-admin-design/src/views/tree/EleTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/src/views/tree/EleTree.vue","mtime":1624500048824},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBIaW50cyBmcm9tICcuLi8uLi9jb21wb25lbnRzL0hpbnRzJwppbXBvcnQgeyB0cmVlRGF0YSB9IGZyb20gJy4vZGF0YScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRWxlVHJlZScsCiAgY29tcG9uZW50czogeyBIaW50cyB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0cmVlRGF0YSwKICAgICAgcHJvcHM6IHsKICAgICAgICBsYWJlbDogJ25hbWUnLAogICAgICAgIGNoaWxkcmVuOiAnem9uZXMnLAogICAgICAgIGlzTGVhZjogJ2xlYWYnCiAgICAgIH0sCiAgICAgIGRlZmF1bHRQcm9wczogewogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLAogICAgICAgIGxhYmVsOiAnbGFiZWwnCiAgICAgIH0sCiAgICAgIGNvdW50OiAxCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBsb2FkTm9kZShub2RlLCByZXNvbHZlKSB7CiAgICAgIGlmIChub2RlLmxldmVsID09PSAwKSB7CiAgICAgICAgcmV0dXJuIHJlc29sdmUoW3sgbmFtZTogJ3JlZ2lvbjEnIH0sIHsgbmFtZTogJ3JlZ2lvbjInIH1dKQogICAgICB9CiAgICAgIGlmIChub2RlLmxldmVsID4gMikgcmV0dXJuIHJlc29sdmUoW10pCgogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICBjb25zdCBkYXRhID0gW3sKICAgICAgICAgIG5hbWU6ICd6b25lJyArIHRoaXMuY291bnQrKywKICAgICAgICAgIGxlYWY6IHRydWUKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAnem9uZScgKyB0aGlzLmNvdW50KysKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAnem9uZScgKyB0aGlzLmNvdW50KyssCiAgICAgICAgICBsZWFmOiB0cnVlCiAgICAgICAgfV0KCiAgICAgICAgcmVzb2x2ZShkYXRhKQogICAgICB9LCA1MDApCiAgICB9LAogICAgaGFuZGxlQ2hlY2tDaGFuZ2UoZGF0YSwgY2hlY2tlZCwgaW5kZXRlcm1pbmF0ZSkgewogICAgICBjb25zb2xlLmxvZyhkYXRhLCBjaGVja2VkLCBpbmRldGVybWluYXRlKQogICAgfQogIH0KfQo="},{"version":3,"sources":["EleTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EleTree.vue","sourceRoot":"src/views/tree","sourcesContent":["<template>\n  <div class=\"ele-tree-wrapper\">\n    <Hints>\n      <template slot=\"hintName\">Tree树形控件</template>\n      <template slot=\"hintInfo\">\n        <p>element-tree：基于elementUI的Tree组件，可用于清晰的层级结构展示信息，并能展开或折叠</p>\n        <p>地址：访问 <el-link type=\"success\" href=\"https://element.eleme.cn/#/zh-CN/component/tree\" target=\"_blank\">element-tree</el-link></p>\n      </template>\n    </Hints>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"8\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">可选择节点</div>\n          <div style=\"height: 360px;\">\n            <el-tree\n              :data=\"treeData\"\n              node-key=\"id\"\n              show-checkbox\n              default-expand-all\n              :default-checked-keys=\"[5]\"\n              :props=\"defaultProps\"\n              @check-change=\"handleCheckChange\"\n            />\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">懒加载节点</div>\n          <div style=\"height: 360px;\">\n            <el-tree\n              :props=\"props\"\n              :load=\"loadNode\"\n              lazy\n              show-checkbox\n              @check-change=\"handleCheckChange\"\n            />\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">可拖拽节点</div>\n          <div style=\"height: 360px;\">\n            <el-tree\n              :data=\"treeData\"\n              node-key=\"id\"\n              default-expand-all\n              :props=\"defaultProps\"\n              draggable\n            />\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport Hints from '../../components/Hints'\nimport { treeData } from './data'\n\nexport default {\n  name: 'EleTree',\n  components: { Hints },\n  data() {\n    return {\n      treeData,\n      props: {\n        label: 'name',\n        children: 'zones',\n        isLeaf: 'leaf'\n      },\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      count: 1\n    }\n  },\n  methods: {\n    loadNode(node, resolve) {\n      if (node.level === 0) {\n        return resolve([{ name: 'region1' }, { name: 'region2' }])\n      }\n      if (node.level > 2) return resolve([])\n\n      setTimeout(() => {\n        const data = [{\n          name: 'zone' + this.count++,\n          leaf: true\n        }, {\n          name: 'zone' + this.count++\n        }, {\n          name: 'zone' + this.count++,\n          leaf: true\n        }]\n\n        resolve(data)\n      }, 500)\n    },\n    handleCheckChange(data, checked, indeterminate) {\n      console.log(data, checked, indeterminate)\n    }\n  }\n}\n</script>\n"]}]}