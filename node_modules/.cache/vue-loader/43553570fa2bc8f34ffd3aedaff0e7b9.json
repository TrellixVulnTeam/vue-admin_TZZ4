{"remainingRequest":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js??vue-loader-options!/home/mengy/Documents/iwork/kafo/vue-admin-design/src/components/Charts/ChartsLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/src/components/Charts/ChartsLine.vue","mtime":1624500048818},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KDQppbXBvcnQgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdDaGFydHNMaW5lJywNCiAgcHJvcHM6IHsNCiAgICB0aXRsZTogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogJycNCiAgICB9LA0KICAgIGRhdGE6IHsNCiAgICAgIHR5cGU6IE9iamVjdCwNCiAgICAgIGRlZmF1bHQ6ICgpID0+IHt9DQogICAgfQ0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBkb206IG51bGwNCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5kcmF3aW5nKCkNCiAgfSwNCiAgYmVmb3JlRGVzdHJveSgpIHsNCiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5yZXNpemUpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICByZXNpemUoKSB7DQogICAgICB0aGlzLmRvbS5yZXNpemUoKQ0KICAgIH0sDQogICAgZHJhd2luZygpIHsNCiAgICAgIGNvbnN0IHhBeGlzRGF0YSA9IE9iamVjdC5rZXlzKHRoaXMuZGF0YSkNCiAgICAgIGNvbnN0IHNlcmllc0RhdGEgPSBPYmplY3QudmFsdWVzKHRoaXMuZGF0YSkNCiAgICAgIGNvbnN0IG9wdGlvbnMgPSB7DQogICAgICAgIC8vIOagh+mimA0KICAgICAgICB0aXRsZTogew0KICAgICAgICAgIHRleHQ6IHRoaXMudGl0bGUsDQogICAgICAgICAgbGVmdDogJ2NlbnRlcicsDQogICAgICAgICAgdG9wOiAxNSwNCiAgICAgICAgICB0ZXh0U3R5bGU6IHsNCiAgICAgICAgICAgIGZvbnRTaXplOiAxNiwNCiAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdub3JtYWwnDQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICAvLyDlt6Xlhbfmj5DnpLoNCiAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywNCiAgICAgICAgICBmb3JtYXR0ZXI6ICd7Yn0gPGJyLz57YX0gOiB7Y30nLA0KICAgICAgICAgIGF4aXNQb2ludGVyOiB7DQogICAgICAgICAgICB0eXBlOiAnbGluZScNCiAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICBsZWZ0OiAnMyUnLA0KICAgICAgICAgIHJpZ2h0OiAnNCUnLA0KICAgICAgICAgIGJvdHRvbTogJzMlJywNCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUNCiAgICAgICAgfSwNCiAgICAgICAgeEF4aXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLA0KICAgICAgICAgICAgZGF0YTogeEF4aXNEYXRhLA0KICAgICAgICAgICAgYXhpc1RpY2s6IHsNCiAgICAgICAgICAgICAgYWxpZ25XaXRoTGFiZWw6IHRydWUNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIF0sDQogICAgICAgIHlBeGlzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJywNCiAgICAgICAgICAgIG1heDogdmFsdWUgPT4gew0KICAgICAgICAgICAgICByZXR1cm4gTWF0aC5jZWlsKHZhbHVlLm1heCAvIDEwMCkgKiAxMDAgKyAzMDANCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIF0sDQogICAgICAgIC8vIOminOiJsumFjee9rg0KICAgICAgICBjb2xvcjogWycjOWE2NmU0J10sDQogICAgICAgIC8vIOexu+Wei+mFjee9rg0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBuYW1lOiAn55u05o6l6K6/6ZeuJywNCiAgICAgICAgICAgIC8vIOexu+Wei+mFjee9rg0KICAgICAgICAgICAgdHlwZTogJ2xpbmUnLA0KICAgICAgICAgICAgLy8g5pWw5o2u6YWN572uDQogICAgICAgICAgICBkYXRhOiBzZXJpZXNEYXRhLA0KICAgICAgICAgICAgaXRlbVN0eWxlOiB7DQogICAgICAgICAgICAgIG5vcm1hbDogew0KICAgICAgICAgICAgICAgIGxhYmVsOiB7DQogICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLA0KICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDE0LA0KICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3AnLA0KICAgICAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne2N9Jw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgXQ0KICAgICAgfQ0KICAgICAgdGhpcy5kb20gPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5kb20pDQogICAgICB0aGlzLmRvbS5zZXRPcHRpb24ob3B0aW9ucykNCiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnJlc2l6ZSkNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["ChartsLine.vue"],"names":[],"mappingsfile":"ChartsLine.vue","sourceRoot":"src/components/Charts","sourcesContent":["<template>\r\n  <div ref=\"dom\" class=\"charts-line\" />\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\n\r\nexport default {\r\n  name: 'ChartsLine',\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    data: {\r\n      type: Object,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      dom: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawing()\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.resize)\r\n  },\r\n  methods: {\r\n    resize() {\r\n      this.dom.resize()\r\n    },\r\n    drawing() {\r\n      const xAxisData = Object.keys(this.data)\r\n      const seriesData = Object.values(this.data)\r\n      const options = {\r\n        // 标题\r\n        title: {\r\n          text: this.title,\r\n          left: 'center',\r\n          top: 15,\r\n          textStyle: {\r\n            fontSize: 16,\r\n            fontWeight: 'normal'\r\n          }\r\n        },\r\n        // 工具提示\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b} <br/>{a} : {c}',\r\n          axisPointer: {\r\n            type: 'line'\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: xAxisData,\r\n            axisTick: {\r\n              alignWithLabel: true\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            max: value => {\r\n              return Math.ceil(value.max / 100) * 100 + 300\r\n            }\r\n          }\r\n        ],\r\n        // 颜色配置\r\n        color: ['#9a66e4'],\r\n        // 类型配置\r\n        series: [\r\n          {\r\n            name: '直接访问',\r\n            // 类型配置\r\n            type: 'line',\r\n            // 数据配置\r\n            data: seriesData,\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true,\r\n                  fontSize: 14,\r\n                  position: 'top',\r\n                  formatter: '{c}'\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.dom = echarts.init(this.$refs.dom)\r\n      this.dom.setOption(options)\r\n      window.addEventListener('resize', this.resize)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n\r\n</style>\r\n"]}]}