{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/transaction-record/transactionRecord.vue?vue&type=template&id=591fa958&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/transaction-record/transactionRecord.vue","mtime":1634526285501},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1634111096329},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1634111096162},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1634111096329},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":1634111096162}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}