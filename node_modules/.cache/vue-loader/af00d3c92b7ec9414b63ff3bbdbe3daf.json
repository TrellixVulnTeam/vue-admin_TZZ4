{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/components/Charts/ChartsBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/components/Charts/ChartsBar.vue","mtime":1635337272532},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBlY2hhcnRzIGZyb20gJ2VjaGFydHMnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnQ2hhcnRzQmFyJywKICAgIHByb3BzOiB7CiAgICAgICAgZGF0YTogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGRvbTogbnVsbAogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMuZHJhd2luZygpCiAgICB9LAogICAgYmVmb3JlRGVzdHJveSgpIHsKICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5yZXNpemUpCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHJlc2l6ZSgpIHsKICAgICAgICAgICAgdGhpcy5kb20ucmVzaXplKCkKICAgICAgICB9LAogICAgICAgIGRyYXdpbmcoKSB7CiAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gdGhpcy5kYXRhLnRpdGxlCiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSB0aGlzLmRhdGEubmFtZQogICAgICAgICAgICBjb25zdCBsZWdlbmREYXRhID0gdGhpcy5kYXRhLmxlZ2VuZAogICAgICAgICAgICBjb25zdCBvc0RhdGEgPSB0aGlzLmRhdGEuZGF0YS5tYXAoaXRlbSA9PiBpdGVtLm9zKQogICAgICAgICAgICBjb25zdCB4QXhpc0RhdGEgPSB0aGlzLmRhdGEuZGF0YS5tYXAoaXRlbSA9PiBpdGVtLnRpdGxlKQogICAgICAgICAgICBjb25zdCBzZXJpZXNEYXRhMSA9IHRoaXMuZGF0YS5kYXRhLm1hcChpdGVtID0+IGl0ZW0udmFsMSkKICAgICAgICAgICAgY29uc3Qgc2VyaWVzRGF0YTIgPSB0aGlzLmRhdGEuZGF0YS5tYXAoaXRlbSA9PiBpdGVtLnZhbDIpCiAgICAgICAgICAgIGNvbnN0IHNlcmllc0RhdGEzID0gdGhpcy5kYXRhLmRhdGEubWFwKGl0ZW0gPT4gaXRlbS52YWwzKQogICAgICAgICAgICBjb25zdCBvcHRpb25zID0gewogICAgICAgICAgICAgICAgLy8g5qCH6aKYCiAgICAgICAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICAgICAgICAgIHRleHQ6IHRpdGxlLAogICAgICAgICAgICAgICAgICAgIHN1YnRleHQ6IG5hbWUsCiAgICAgICAgICAgICAgICAgICAgdG9wOiA1CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgLy8g5bel5YW35o+Q56S6CiAgICAgICAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzaGFkb3cnCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgICAgICAgICAgICBmZWF0dXJlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFWaWV3OiB7c2hvdzogdHJ1ZSwgcmVhZE9ubHk6IGZhbHNlfSwKICAgICAgICAgICAgICAgICAgICAgICAgbWFnaWNUeXBlOiB7c2hvdzogdHJ1ZSwgdHlwZTogWydsaW5lJywgJ2JhciddfSwKICAgICAgICAgICAgICAgICAgICAgICAgcmVzdG9yZToge3Nob3c6IHRydWV9LAogICAgICAgICAgICAgICAgICAgICAgICBzYXZlQXNJbWFnZToge3Nob3c6IHRydWV9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICAgICAgICAgIHRvcDogNSwKICAgICAgICAgICAgICAgICAgICBkYXRhOiBsZWdlbmREYXRhCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZ3JpZDogewogICAgICAgICAgICAgICAgICAgIGxlZnQ6ICczJScsCiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6ICc0JScsCiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAnMyUnLAogICAgICAgICAgICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHhBeGlzOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB4QXhpc0RhdGEsCiAgICAgICAgICAgICAgICAgICAgICAgIGF4aXNUaWNrOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbldpdGhMYWJlbDogdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogZnVuY3Rpb24odmFsdWUsIGluZGV4KXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9zRGF0YVtpbmRleF0gPT09IDEgPyAiIzA4MDgwOCIgOiAiIzQ4NWNlZiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgeUF4aXM6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICAgICAgICAgICAgICAgIHNob3cgIDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfSAlJwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBtYXg6IHZhbHVlID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLmNlaWwodmFsdWUubWF4IC8gMTAwKSAqIDEwMCArIDIwMAogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIC8vIOminOiJsumFjee9rgogICAgICAgICAgICAgICAgY29sb3I6IFsnIzJkOGNmMCddLAogICAgICAgICAgICAgICAgLy8g57G75Z6L6YWN572uCiAgICAgICAgICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGxlZ2VuZERhdGFbMF0sCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgICAgICAgICAgICAgICBzdGFjazogJ3RvdGFsJywKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMmQ4Y2YwJywKICAgICAgICAgICAgICAgICAgICAgICAgYmFyV2lkdGg6ICc0MCUnLAogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXM6ICdzZXJpZXMnCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHNlcmllc0RhdGExCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGxlZ2VuZERhdGFbMV0sCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgICAgICAgICAgICAgICBzdGFjazogJ3RvdGFsJywKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMTliZTZiJywKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzOiAnc2VyaWVzJwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBzZXJpZXNEYXRhMgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBsZWdlbmREYXRhWzJdLAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgICAgICAgICAgICAgICAgc3RhY2s6ICd0b3RhbCcsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI2ZmOTkwMCcsCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1czogJ3NlcmllcycKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogc2VyaWVzRGF0YTMKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5kb20gPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5kb20pCiAgICAgICAgICAgIHRoaXMuZG9tLnNldE9wdGlvbihvcHRpb25zLCB0cnVlKQogICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5yZXNpemUpCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["ChartsBar.vue"],"names":[],"mappingsfile":"ChartsBar.vue","sourceRoot":"src/components/Charts","sourcesContent":["<template>\n    <div ref=\"dom\" class=\"charts-bar\"/>\n</template>\n\n<script>\nimport echarts from 'echarts'\n\nexport default {\n    name: 'ChartsBar',\n    props: {\n        data: {\n            type: Object,\n            default: () => {\n            }\n        }\n    },\n    data() {\n        return {\n            dom: null\n        }\n    },\n    mounted() {\n        this.drawing()\n    },\n    beforeDestroy() {\n        window.removeEventListener('resize', this.resize)\n    },\n    methods: {\n        resize() {\n            this.dom.resize()\n        },\n        drawing() {\n            const title = this.data.title\n            const name = this.data.name\n            const legendData = this.data.legend\n            const osData = this.data.data.map(item => item.os)\n            const xAxisData = this.data.data.map(item => item.title)\n            const seriesData1 = this.data.data.map(item => item.val1)\n            const seriesData2 = this.data.data.map(item => item.val2)\n            const seriesData3 = this.data.data.map(item => item.val3)\n            const options = {\n                // 标题\n                title: {\n                    text: title,\n                    subtext: name,\n                    top: 5\n                },\n                // 工具提示\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'shadow'\n                    }\n                },\n                toolbox: {\n                    feature: {\n                        dataView: {show: true, readOnly: false},\n                        magicType: {show: true, type: ['line', 'bar']},\n                        restore: {show: true},\n                        saveAsImage: {show: true}\n                    }\n                },\n                legend: {\n                    top: 5,\n                    data: legendData\n                },\n                grid: {\n                    left: '3%',\n                    right: '4%',\n                    bottom: '3%',\n                    containLabel: true\n                },\n                xAxis: [\n                    {\n                        type: 'category',\n                        data: xAxisData,\n                        axisTick: {\n                            alignWithLabel: true\n                        },\n                        axisLabel: {\n                            show: true,\n                            textStyle: {\n                                color: function(value, index){\n                                    return osData[index] === 1 ? \"#080808\" : \"#485cef\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                yAxis: [\n                    {\n                        type: 'value',\n                    },\n                    {\n                        type: 'value',\n                        show  : false,\n                        axisLabel: {\n                            formatter: '{value} %'\n                        },\n                        max: value => {\n                            return Math.ceil(value.max / 100) * 100 + 200\n                        }\n                    }\n                ],\n                // 颜色配置\n                color: ['#2d8cf0'],\n                // 类型配置\n                series: [\n                    {\n                        name: legendData[0],\n                        type: 'bar',\n                        stack: 'total',\n                        color: '#2d8cf0',\n                        barWidth: '40%',\n                        label: {\n                            show: true\n                        },\n                        emphasis: {\n                            focus: 'series'\n                        },\n                        data: seriesData1\n                    },\n                    {\n                        name: legendData[1],\n                        type: 'bar',\n                        stack: 'total',\n                        color: '#19be6b',\n                        label: {\n                            show: true\n                        },\n                        emphasis: {\n                            focus: 'series'\n                        },\n                        data: seriesData2\n                    },\n                    {\n                        name: legendData[2],\n                        type: 'bar',\n                        stack: 'total',\n                        color: '#ff9900',\n                        label: {\n                            show: true\n                        },\n                        emphasis: {\n                            focus: 'series'\n                        },\n                        data: seriesData3\n                    }\n                ]\n            }\n            this.dom = echarts.init(this.$refs.dom)\n            this.dom.setOption(options, true)\n            window.addEventListener('resize', this.resize)\n        }\n    }\n}\n</script>\n"]}]}