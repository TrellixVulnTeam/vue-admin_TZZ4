{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/components/TextSetting/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/components/TextSetting/index.vue","mtime":1626074843906},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7YmFzZTY0dG9CbG9ifSBmcm9tICcuLi8uLi91dGlscycKaW1wb3J0IEltYWdlUmljaFRleHQgZnJvbSAnLi4vSW1hZ2VSaWNoVGV4dCcKCmNvbnN0IGZvbnRGYW1pbHlEYXRhID0gWwogICAge3ZhbHVlOiAn6buR5L2TJ30sCiAgICB7dmFsdWU6ICflrovkvZMnfSwKICAgIHt2YWx1ZTogJ+S7v+Wuiyd9LAogICAge3ZhbHVlOiAn5qW35L2TJ30sCiAgICB7dmFsdWU6ICfpmrbkuaYnfSwKICAgIHt2YWx1ZTogJ+W+rui9r+mbhem7kSd9LAogICAge3ZhbHVlOiAn5pa55q2j5aea5L2TJ30KXQpjb25zdCBmb250U2l6ZURhdGEgPSBbCiAgICB7dmFsdWU6ICcxMnB4J30sCiAgICB7dmFsdWU6ICcxNHB4J30sCiAgICB7dmFsdWU6ICcxNnB4J30sCiAgICB7dmFsdWU6ICcxOHB4J30sCiAgICB7dmFsdWU6ICcyNHB4J30sCiAgICB7dmFsdWU6ICczMnB4J30sCiAgICB7dmFsdWU6ICc0OHB4J30KXQoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1RleHRTZXR0aW5nJywKICAgIGNvbXBvbmVudHM6IHtJbWFnZVJpY2hUZXh0fSwKICAgIHByb3BzOiB7CiAgICAgICAgYWN0aXZlRWxlVGV4dDogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGZvbnRGYW1pbHlEYXRhLAogICAgICAgICAgICBmb250U2l6ZURhdGEKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICAvLyDlrZfkvZPmmK/lkKbliqDnspcKICAgICAgICBmb250V2VpZ2h0KCkgewogICAgICAgICAgICBpZiAoK3RoaXMuYWN0aXZlRWxlVGV4dC5zdHlsZS5mb250V2VpZ2h0ID09PSA0MDApIHsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIC8vIOaWh+Wtl+Wkp+Wwj+WPmOWMluaXtuihjOmrmOS4gOi1t+WPmOWMlgogICAgICAgIGFjdGl2ZUVsZVRleHQ6IHsKICAgICAgICAgICAgaGFuZGxlcih2YWwpIHsKICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZlRWxlVGV4dC5zdHlsZS5saW5lSGVpZ2h0ID0gdmFsLnN0eWxlLmZvbnRTaXplCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRlZXA6IHRydWUKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC8vIOiuvue9rueyl+S9kwogICAgICAgIHNldEZvbnRXZWlnaHQoKSB7CiAgICAgICAgICAgIGlmICgrdGhpcy5hY3RpdmVFbGVUZXh0LnN0eWxlLmZvbnRXZWlnaHQgPT09IDQwMCkgewogICAgICAgICAgICAgICAgdGhpcy5hY3RpdmVFbGVUZXh0LnN0eWxlLmZvbnRXZWlnaHQgPSA2MDAKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZlRWxlVGV4dC5zdHlsZS5mb250V2VpZ2h0ID0gNDAwCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIC8vIOiuvue9ruWvuem9kAogICAgICAgIGhhbmRsZUNvbW1hbmQoY29tbWFuZCkgewogICAgICAgICAgICB0aGlzLmFjdGl2ZUVsZVRleHQuc3R5bGUudGV4dEFsaWduID0gY29tbWFuZAogICAgICAgIH0sCiAgICAgICAgLy8g5b2T5YmN5a+56b2Q5pa55byPCiAgICAgICAgc2V0QWxpZ25BY3RpdmUodHlwZSkgewogICAgICAgICAgICBpZiAodGhpcy5hY3RpdmVFbGVUZXh0LnN0eWxlLnRleHRBbGlnbiA9PT0gdHlwZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjNDA5ZWZmJywKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJycsCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMzMzJwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAvLyDmlofmnKznlJ/miJDlm77niYcKICAgICAgICB0ZXh0QmVjb21lSW1nKG9iaikgewogICAgICAgICAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKQogICAgICAgICAgICBjYW52YXMud2lkdGggPSBvYmoudwogICAgICAgICAgICBjYW52YXMuaGVpZ2h0ID0gb2JqLmgKICAgICAgICAgICAgY29uc3QgY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpCiAgICAgICAgICAgIC8vIOe7mOWItuWtl+S9k+i3neemu2NhbnZhc+mhtumDqOWIneWni+eahOmrmOW6pgogICAgICAgICAgICBjb25zdCBpbml0VG9wID0gNAogICAgICAgICAgICBjb25zdCBpbml0TGVmdCA9IDgKICAgICAgICAgICAgLy8g6K6+572u6IOM5pmv6ImyCiAgICAgICAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gb2JqLnN0eWxlLmJhY2tncm91bmRDb2xvciB8fCAndHJhbnNwYXJlbnQnCiAgICAgICAgICAgIGNvbnRleHQuZmlsbFJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KQogICAgICAgICAgICAvLyDorr7nva7mlofmnKzmoLflvI8KICAgICAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSBvYmouc3R5bGUuY29sb3IKICAgICAgICAgICAgY29udGV4dC5mb250ID0gb2JqLnN0eWxlLmZvbnRXZWlnaHQgKyAnICcgKyBvYmouc3R5bGUuZm9udFNpemUgKyAnICcgKyBvYmouc3R5bGUuZm9udEZhbWlseQogICAgICAgICAgICBjb250ZXh0LnRleHRCYXNlbGluZSA9ICd0b3AnCiAgICAgICAgICAgIC8vIOiuvue9ruaWh+acrOWvuem9kOaWueW8jwogICAgICAgICAgICBjb250ZXh0LnRleHRBbGlnbiA9IG9iai5zdHlsZS50ZXh0QWxpZ24KCiAgICAgICAgICAgIGNvbnN0IHRleHRBcnIgPSBvYmoudGV4dC5zcGxpdCgnJykKICAgICAgICAgICAgbGV0IHRlbXBTdHIgPSAnJwogICAgICAgICAgICBjb25zdCByb3dBcnIgPSBbXQogICAgICAgICAgICBjb25zdCBtYXhUZXh0V2lkdGggPSBjYW52YXMud2lkdGggLSAyICogaW5pdExlZnQKCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dEFyci5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgaWYgKGNvbnRleHQubWVhc3VyZVRleHQodGVtcFN0cikud2lkdGggPCBtYXhUZXh0V2lkdGggJiYgY29udGV4dC5tZWFzdXJlVGV4dCh0ZW1wU3RyICsgKHRleHRBcnJbaV0pKS53aWR0aCA8PSBtYXhUZXh0V2lkdGgpIHsKICAgICAgICAgICAgICAgICAgICB0ZW1wU3RyICs9IHRleHRBcnJbaV0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcm93QXJyLnB1c2godGVtcFN0cikKICAgICAgICAgICAgICAgICAgICB0ZW1wU3RyID0gdGV4dEFycltpXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJvd0Fyci5wdXNoKHRlbXBTdHIpCgogICAgICAgICAgICBsZXQgZHJhd0xlZnQKICAgICAgICAgICAgaWYgKGNvbnRleHQudGV4dEFsaWduID09PSAnbGVmdCcpIHsKICAgICAgICAgICAgICAgIGRyYXdMZWZ0ID0gaW5pdExlZnQKICAgICAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0LnRleHRBbGlnbiA9PT0gJ2NlbnRlcicpIHsKICAgICAgICAgICAgICAgIGRyYXdMZWZ0ID0gbWF4VGV4dFdpZHRoIC8gMgogICAgICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQudGV4dEFsaWduID09PSAncmlnaHQnKSB7CiAgICAgICAgICAgICAgICBkcmF3TGVmdCA9IG1heFRleHRXaWR0aAogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJvd0Fyci5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgY29udGV4dC5maWxsVGV4dChyb3dBcnJbaV0sIGRyYXdMZWZ0LCAocGFyc2VJbnQob2JqLnN0eWxlLmZvbnRTaXplKSAqIGkgKyBpbml0VG9wKSwgbWF4VGV4dFdpZHRoKQogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gY2FudmFzLnRvRGF0YVVSTCgnaW1hZ2UvcG5nJykKICAgICAgICB9LAogICAgICAgIC8vIOS4i+i9veeUn+aIkOeahOWbvueJhwogICAgICAgIGRvd25sb2FkSW1hZ2UoKSB7CiAgICAgICAgICAgIGNvbnN0IGltYWdlQmFzZTY0ID0gdGhpcy50ZXh0QmVjb21lSW1nKHRoaXMuYWN0aXZlRWxlVGV4dCkKICAgICAgICAgICAgY29uc3QgaW1hZ2VCbG9iID0gYmFzZTY0dG9CbG9iKGltYWdlQmFzZTY0KQogICAgICAgICAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpCiAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0hUTUxFdmVudHMnKQogICAgICAgICAgICAvLyBpbml0RXZlbnQg5LiN5Yqg5ZCO5Lik5Liq5Y+C5pWw5Lya5Zyo54Gr54uQ5LiL5oql6ZSZIOS6i+S7tuexu+Wei++8jOaYr+WQpuWGkuazoe+8jOaYr+WQpumYu+atoua1j+iniOWZqOeahOm7mOiupOihjOS4ugogICAgICAgICAgICBldmVudC5pbml0RXZlbnQoJ2NsaWNrJywgdHJ1ZSwgdHJ1ZSkKICAgICAgICAgICAgbGluay5kb3dubG9hZCA9ICdpbWFnZS5wbmcnCiAgICAgICAgICAgIGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoaW1hZ2VCbG9iKQogICAgICAgICAgICAvLyDlhbzlrrnngavni5AKICAgICAgICAgICAgbGluay5kaXNwYXRjaEV2ZW50KG5ldyBNb3VzZUV2ZW50KCdjbGljaycsIHtidWJibGVzOiB0cnVlLCBjYW5jZWxhYmxlOiB0cnVlLCB2aWV3OiB3aW5kb3d9KSkKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/TextSetting","sourcesContent":["<template>\n    <div class=\"text-setting-wrapper\">\n        <el-form label-width=\"70px\">\n            <!--文本-->\n            <el-form-item label=\"文本\">\n                <ImageRichText v-model=\"activeEleText.text\" class=\"text-editable\" :active-ele-text=\"activeEleText\"/>\n            </el-form-item>\n            <!--字体-->\n            <el-form-item label=\"字体\">\n                <el-select v-model=\"activeEleText.style.fontFamily\" size=\"small\">\n                    <el-option\n                        v-for=\"item in fontFamilyData\"\n                        :key=\"item.value\"\n                        :label=\"item.value\"\n                        :value=\"item.value\"\n                        :style=\"{'fontFamily': item.value}\"\n                    />\n                </el-select>\n            </el-form-item>\n            <!--字号-->\n            <el-form-item label=\"字号\">\n                <el-select\n                    v-model=\"activeEleText.style.fontSize\"\n                    size=\"small\"\n                >\n                    <el-option\n                        v-for=\"item in fontSizeData\"\n                        :key=\"item.value\"\n                        :label=\"item.value\"\n                        :value=\"item.value\"\n                    />\n                </el-select>\n            </el-form-item>\n            <!--颜色-->\n            <el-form-item label=\"颜色\">\n                <!-- 字体颜色 -->\n                <div class=\"color-box\">\n                    <i class=\"vue-dsn-icon-wenzise color-icon\" :style=\"{'color': activeEleText.style.color}\"/>\n                    <el-color-picker v-model=\"activeEleText.style.color\"/>\n                </div>\n                <!-- 背景颜色 -->\n                <div class=\"color-box\">\n                    <i class=\"vue-dsn-icon-beijingse color-icon icon-bg\"\n                       :style=\"{'color': activeEleText.style.backgroundColor}\"/>\n                    <el-color-picker v-model=\"activeEleText.style.backgroundColor\"/>\n                </div>\n                <div class=\"style-box\">\n                    <!-- 加粗 -->\n                    <span :class=\"['style-item', fontWeight ? 'active' : '']\" @click=\"setFontWeight\">\n            <i class=\"vue-dsn-icon-jiacu style-icon\"/>\n          </span>\n                    <!-- 对齐 -->\n                    <div class=\"style-item\">\n                        <el-dropdown trigger=\"click\" @command=\"handleCommand\">\n                            <i class=\"vue-dsn-icon-duiqi style-icon\"/>\n                            <el-dropdown-menu slot=\"dropdown\">\n                                <el-dropdown-item command=\"left\" :style=\"setAlignActive('left')\">左对齐</el-dropdown-item>\n                                <el-dropdown-item command=\"center\" :style=\"setAlignActive('center')\">居中\n                                </el-dropdown-item>\n                                <el-dropdown-item command=\"right\" :style=\"setAlignActive('right')\">右对齐\n                                </el-dropdown-item>\n                            </el-dropdown-menu>\n                        </el-dropdown>\n                    </div>\n                </div>\n            </el-form-item>\n            <el-form-item>\n                <el-button type=\"primary\" @click=\"downloadImage\">文本生成图片</el-button>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n<script>\nimport {base64toBlob} from '../../utils'\nimport ImageRichText from '../ImageRichText'\n\nconst fontFamilyData = [\n    {value: '黑体'},\n    {value: '宋体'},\n    {value: '仿宋'},\n    {value: '楷体'},\n    {value: '隶书'},\n    {value: '微软雅黑'},\n    {value: '方正姚体'}\n]\nconst fontSizeData = [\n    {value: '12px'},\n    {value: '14px'},\n    {value: '16px'},\n    {value: '18px'},\n    {value: '24px'},\n    {value: '32px'},\n    {value: '48px'}\n]\n\nexport default {\n    name: 'TextSetting',\n    components: {ImageRichText},\n    props: {\n        activeEleText: {\n            type: Object,\n            default: () => {\n            }\n        }\n    },\n    data() {\n        return {\n            fontFamilyData,\n            fontSizeData\n        }\n    },\n    computed: {\n        // 字体是否加粗\n        fontWeight() {\n            if (+this.activeEleText.style.fontWeight === 400) {\n                return false\n            } else {\n                return true\n            }\n        }\n    },\n    watch: {\n        // 文字大小变化时行高一起变化\n        activeEleText: {\n            handler(val) {\n                this.activeEleText.style.lineHeight = val.style.fontSize\n            },\n            deep: true\n        }\n    },\n    methods: {\n        // 设置粗体\n        setFontWeight() {\n            if (+this.activeEleText.style.fontWeight === 400) {\n                this.activeEleText.style.fontWeight = 600\n            } else {\n                this.activeEleText.style.fontWeight = 400\n            }\n        },\n        // 设置对齐\n        handleCommand(command) {\n            this.activeEleText.style.textAlign = command\n        },\n        // 当前对齐方式\n        setAlignActive(type) {\n            if (this.activeEleText.style.textAlign === type) {\n                return {\n                    backgroundColor: '#409eff',\n                    color: '#fff'\n                }\n            } else {\n                return {\n                    backgroundColor: '',\n                    color: '#333'\n                }\n            }\n        },\n        // 文本生成图片\n        textBecomeImg(obj) {\n            const canvas = document.createElement('canvas')\n            canvas.width = obj.w\n            canvas.height = obj.h\n            const context = canvas.getContext('2d')\n            // 绘制字体距离canvas顶部初始的高度\n            const initTop = 4\n            const initLeft = 8\n            // 设置背景色\n            context.fillStyle = obj.style.backgroundColor || 'transparent'\n            context.fillRect(0, 0, canvas.width, canvas.height)\n            // 设置文本样式\n            context.fillStyle = obj.style.color\n            context.font = obj.style.fontWeight + ' ' + obj.style.fontSize + ' ' + obj.style.fontFamily\n            context.textBaseline = 'top'\n            // 设置文本对齐方式\n            context.textAlign = obj.style.textAlign\n\n            const textArr = obj.text.split('')\n            let tempStr = ''\n            const rowArr = []\n            const maxTextWidth = canvas.width - 2 * initLeft\n\n            for (let i = 0; i < textArr.length; i++) {\n                if (context.measureText(tempStr).width < maxTextWidth && context.measureText(tempStr + (textArr[i])).width <= maxTextWidth) {\n                    tempStr += textArr[i]\n                } else {\n                    rowArr.push(tempStr)\n                    tempStr = textArr[i]\n                }\n            }\n            rowArr.push(tempStr)\n\n            let drawLeft\n            if (context.textAlign === 'left') {\n                drawLeft = initLeft\n            } else if (context.textAlign === 'center') {\n                drawLeft = maxTextWidth / 2\n            } else if (context.textAlign === 'right') {\n                drawLeft = maxTextWidth\n            }\n\n            for (let i = 0; i < rowArr.length; i++) {\n                context.fillText(rowArr[i], drawLeft, (parseInt(obj.style.fontSize) * i + initTop), maxTextWidth)\n            }\n\n            return canvas.toDataURL('image/png')\n        },\n        // 下载生成的图片\n        downloadImage() {\n            const imageBase64 = this.textBecomeImg(this.activeEleText)\n            const imageBlob = base64toBlob(imageBase64)\n            const link = document.createElement('a')\n            const event = document.createEvent('HTMLEvents')\n            // initEvent 不加后两个参数会在火狐下报错 事件类型，是否冒泡，是否阻止浏览器的默认行为\n            event.initEvent('click', true, true)\n            link.download = 'image.png'\n            link.href = URL.createObjectURL(imageBlob)\n            // 兼容火狐\n            link.dispatchEvent(new MouseEvent('click', {bubbles: true, cancelable: true, view: window}))\n        }\n    }\n}\n</script>\n\n<style lang=\"less\">\n@import \"../../assets/less/text-setting\";\n</style>\n"]}]}