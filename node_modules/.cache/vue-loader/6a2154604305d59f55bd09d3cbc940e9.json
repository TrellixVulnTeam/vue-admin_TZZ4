{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/aia/dialog/add-robot-dynamic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/aia/dialog/add-robot-dynamic.vue","mtime":1635920208356},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQge2dldE1lc3NhZ2VUeXBlLCBnZXRBcmVhTGlzdCwgZ2V0QXBwTGlzdCwgZ2V0TWVzc2FnZVR5cGVSZWplY3R9IGZyb20gIkAvdXRpbHMvZGlzdCI7DQppbXBvcnQge2dldFRva2VufSBmcm9tICJAL3V0aWxzL2Nvb2tpZSI7DQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOw0KaW1wb3J0IHtpc0VtcHR5fSBmcm9tICJAL2FwaS9hcGkiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIGZvcm06IHsNCg0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHRpdGxlOiAn5paw5aKe5Yqo5oCBJywNCiAgICAgICAgICAgIGZvcm1Mb2FkaW5nOiBmYWxzZSwNCiAgICAgICAgICAgIGltZ0RpYWxvZzogZmFsc2UsDQogICAgICAgICAgICBpbWdVcmk6IHVuZGVmaW5lZCwNCiAgICAgICAgICAgIGltZ1VyaXM6IFtdLA0KICAgICAgICAgICAgdmlkZW9VcmlzOiBbXSwNCiAgICAgICAgICAgIGlzRGlzYWJsZWQ6IGZhbHNlLA0KICAgICAgICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsDQogICAgICAgICAgICBpbWdEaWFsb2dWaXNpYmxlOiBmYWxzZSwNCiAgICAgICAgICAgIG1lc3NhZ2VUeXBlcyA6IGdldE1lc3NhZ2VUeXBlUmVqZWN0KCksDQogICAgICAgICAgICAvL2FyZWFMaXN0OiBnZXRBcmVhTGlzdChmYWxzZSksDQogICAgICAgICAgICBhcHBMaXN0OiBnZXRBcHBMaXN0KCkNCiAgICAgICAgfQ0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgICBpbml0KHJvdywgZW50aXR5SWQpew0KICAgICAgICAgICAgaWYoIWlzRW1wdHkocm93KSl7DQogICAgICAgICAgICAgICAgdGhpcy50aXRsZSA9ICLnvJbovpHliqjmgIEiDQogICAgICAgICAgICAgICAgdGhpcy5mb3JtID0gcm93DQogICAgICAgICAgICAgICAgaWYocm93LmltYWdlcy5sZW5ndGg+MCAmJiAhaXNFbXB0eShyb3cuaW1hZ2VzWzBdKSl7DQogICAgICAgICAgICAgICAgICAgIHJvdy5pbWFnZXMuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW1nVXJpcy5wdXNoKHsidXJsIjogaXRlbX0pDQogICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgfWVsc2Ugew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmltZ1VyaXMgPSB1bmRlZmluZWQNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgaWYoIWlzRW1wdHkocm93LnRodW1iKSl7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudmlkZW9VcmlzLnB1c2goeyJ0aHVtYiI6IHJvdy50aHVtYiwgInVybCI6IHJvdy51cml9KQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB0aGlzLmZvcm0ucHVibGlzaEF0VGltZSA9IG5ldyBEYXRlKHRoaXMuZm9ybS5wdWJsaXNoQXRUaW1lKQ0KICAgICAgICAgICAgfWVsc2V7DQogICAgICAgICAgICAgICAgdGhpcy5mb3JtLmVudGl0eUlkID0gZW50aXR5SWQNCiAgICAgICAgICAgICAgICB0aGlzLmZvcm0uaW1hZ2VzID0gW10NCiAgICAgICAgICAgICAgICB0aGlzLmltZ1VyaXMgPSB1bmRlZmluZWQNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMuaXNEaXNhYmxlZCA9IHRydWUNCiAgICAgICAgfSwNCiAgICAgICAgc3VibWl0Rm9ybSgpIHsNCiAgICAgICAgICAgIGNvbnN0ICR0aGlzID0gdGhpcw0KICAgICAgICAgICAgdGhpcy4kcmVmcy5ydWxlRm9ybS52YWxpZGF0ZSgodmFsaWQpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAodmFsaWQpIHsNCiAgICAgICAgICAgICAgICAgICAgbGV0IHBhcmFtID0gdGhpcy5mb3JtDQogICAgICAgICAgICAgICAgICAgIHBhcmFtLmVudGl0eVR5cGUgPSAyDQogICAgICAgICAgICAgICAgICAgIHBhcmFtLnN0YXR1cyA9IDUNCiAgICAgICAgICAgICAgICAgICAgcGFyYW0ucHVibGlzaEF0ID0gcGFyYW0ucHVibGlzaEF0VGltZS5nZXRUaW1lKCkgLyAxMDAwDQogICAgICAgICAgICAgICAgICAgIHRoaXMuJHNlcnZpY2Uucm9ib3Quc2F2ZU1vbWVudChwYXJhbSwgZnVuY3Rpb24gKHJlc3VsdCl7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5L+d5a2Y5oiQ5YqfISIpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMuY2xvc2VEaWFsb2coKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy4kbWVzc2FnZS5lcnJvcigi5L+d5a2Y5aSx6LSlISIpDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pDQogICAgICAgIH0sDQogICAgICAgIHJlc2V0Rm9ybSgpIHsNCiAgICAgICAgICAgIHRoaXMuJHJlZnMucnVsZUZvcm0ucmVzZXRGaWVsZHMoKQ0KICAgICAgICB9LA0KICAgICAgICBjbG9zZURpYWxvZygpIHsNCiAgICAgICAgICAgIC8vIHRoaXMuZm9ybUxvYWRpbmcgPSBmYWxzZQ0KICAgICAgICAgICAgLy8gdGhpcy5mb3JtLnZpZGVvID0gdW5kZWZpbmVkDQogICAgICAgICAgICAvLyB0aGlzLmZvcm0uaW1hZ2VzID0gW10NCiAgICAgICAgICAgIC8vIHRoaXMuZm9ybS5lbnRpdHlJZCA9IHVuZGVmaW5lZA0KICAgICAgICAgICAgdGhpcy5mb3JtID0ge30NCiAgICAgICAgICAgIHRoaXMuaW1nVXJpcyA9IFtdDQogICAgICAgICAgICB0aGlzLnZpZGVvVXJpcyA9IFtdDQogICAgICAgICAgICB0aGlzLmlzRGlzYWJsZWQgPSBmYWxzZQ0KICAgICAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2UNCiAgICAgICAgICAgIHRoaXMuZm9ybUxvYWRpbmcgPSBmYWxzZQ0KICAgICAgICAgICAgdGhpcy5yZXNldEZvcm0oKQ0KICAgICAgICAgICAgdGhpcy4kZW1pdCgnZmV0Y2hEYXRhJyk7DQogICAgICAgIH0sDQogICAgICAgIGltZ1ByZXZpZXcoZmlsZSkgew0KICAgICAgICAgICAgdGhpcy5pbWdEaWFsb2cgPSB0cnVlOw0KICAgICAgICAgICAgdGhpcy5pbWdVcmkgPSBmaWxlLnVybA0KICAgICAgICB9LA0KICAgICAgICBzdWNjZXNzUGhvdG8oZmlsZSkgew0KICAgICAgICAgICAgbGV0ICR0aGlzID0gdGhpcw0KICAgICAgICAgICAgdGhpcy5mb3JtTG9hZGluZyA9IHRydWUNCiAgICAgICAgICAgIHRoaXMuaW1nVXBsb2FkKGZpbGUucmF3LCAxLCBmdW5jdGlvbiAoZGF0YSl7DQogICAgICAgICAgICAgICAgJHRoaXMuZm9ybS5pbWFnZXMucHVzaChkYXRhLnVyaSkNCiAgICAgICAgICAgICAgICAkdGhpcy5mb3JtTG9hZGluZyA9IGZhbHNlDQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBzdWNjZXNzVmlkZW8oZmlsZSkgew0KICAgICAgICAgICAgY29uc3QgJHRoaXMgPSB0aGlzDQogICAgICAgICAgICB0aGlzLmZvcm1Mb2FkaW5nID0gdHJ1ZQ0KICAgICAgICAgICAgdGhpcy5pbWdVcGxvYWQoZmlsZS5yYXcsIDIsIGZ1bmN0aW9uIChkYXRhKXsNCiAgICAgICAgICAgICAgICAkdGhpcy5mb3JtLnZpZGVvID0gZGF0YS51cmkNCiAgICAgICAgICAgICAgICAkdGhpcy5mb3JtLnRodW1iID0gZGF0YS50aHVtYg0KICAgICAgICAgICAgICAgICR0aGlzLmZvcm1Mb2FkaW5nID0gZmFsc2UNCiAgICAgICAgICAgIH0pDQogICAgICAgIH0sDQogICAgICAgIHJlbW92ZVBob3RvKGZpbGUsIGZpbGVMaXN0KXsNCiAgICAgICAgICAgIGxldCBhcnIgPSB0aGlzLmZvcm0uaW1hZ2VzDQogICAgICAgICAgICBsZXQgdmFsID0gZmlsZS51cmwNCiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgICBpZihhcnJbaV0gPT09IHZhbCkgew0KICAgICAgICAgICAgICAgICAgICBhcnIuc3BsaWNlKGksIDEpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmZvcm0uaW1hZ2VzID0gYXJyLmxlbmd0aCA9PT0gMCA/IHVuZGVmaW5lZCA6IGFycg0KICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIHJlbW92ZVZpZGVvKGZpbGUsIGZpbGVMaXN0KXsNCiAgICAgICAgICAgIHRoaXMuZm9ybS52aWRlbyA9IHVuZGVmaW5lZA0KICAgICAgICB9LA0KICAgICAgICBpbWdVcGxvYWQoZmlsZSwgdHlwZSwgY2FsbGJhY2spew0KICAgICAgICAgICAgbGV0IGhlYWRlcnMgPSB7DQogICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJywNCiAgICAgICAgICAgICAgICAidG9rZW4iIDogZ2V0VG9rZW4oKSwNCiAgICAgICAgICAgICAgICAiYXJlYS1pZCIgOiAxLA0KICAgICAgICAgICAgICAgICJmaWxlLXR5cGUiIDogdHlwZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKQ0KICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgZmlsZSkNCiAgICAgICAgICAgIGF4aW9zKHsNCiAgICAgICAgICAgICAgICB1cmw6IHByb2Nlc3MuZW52LlZVRV9BUFBfVVBMT0FEX1VSSSwNCiAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywNCiAgICAgICAgICAgICAgICBkYXRhOiBmb3JtRGF0YSwNCiAgICAgICAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJzDQogICAgICAgICAgICB9KS50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhDQogICAgICAgICAgICAgICAgY2FsbGJhY2soZGF0YSkNCiAgICAgICAgICAgIH0pDQogICAgICAgIH0NCiAgICB9DQp9DQo="},null]}