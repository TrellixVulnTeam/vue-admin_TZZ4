{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/aia/dialog/add-robot-dynamic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/aia/dialog/add-robot-dynamic.vue","mtime":1634889415952},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBnZXRNZXNzYWdlVHlwZSwgZ2V0QXJlYUxpc3QsIGdldEFwcExpc3QgfSBmcm9tICJAL3V0aWxzL2Rpc3QiOw0KaW1wb3J0IHtnZXRUb2tlbn0gZnJvbSAiQC91dGlscy9jb29raWUiOw0KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsNCmltcG9ydCB7aXNFbXB0eX0gZnJvbSAiQC9hcGkvYXBpIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIGRhdGEoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICBmb3JtOiB7DQogICAgICAgICAgICAgICAgaW1hZ2VzOiBbXQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHRpdGxlOiAn5paw5aKe5Yqo5oCBJywNCiAgICAgICAgICAgIGZvcm1Mb2FkaW5nOiBmYWxzZSwNCiAgICAgICAgICAgIGltZ0RpYWxvZzogZmFsc2UsDQogICAgICAgICAgICBpbWdVcmk6IHVuZGVmaW5lZCwNCiAgICAgICAgICAgIGltZ1VyaXM6IFtdLA0KICAgICAgICAgICAgdmlkZW9VcmlzOiBbXSwNCiAgICAgICAgICAgIGlzRGlzYWJsZWQ6IGZhbHNlLA0KICAgICAgICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsDQogICAgICAgICAgICBpbWdEaWFsb2dWaXNpYmxlOiBmYWxzZSwNCiAgICAgICAgICAgIG1lc3NhZ2VUeXBlcyA6IGdldE1lc3NhZ2VUeXBlKCksDQogICAgICAgICAgICBhcmVhTGlzdDogZ2V0QXJlYUxpc3QoZmFsc2UpLA0KICAgICAgICAgICAgYXBwTGlzdDogZ2V0QXBwTGlzdCgpDQogICAgICAgIH0NCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgaW5pdChyb3csIGVudGl0eUlkKXsNCiAgICAgICAgICAgIGlmKCFpc0VtcHR5KHJvdykpew0KICAgICAgICAgICAgICAgIHRoaXMudGl0bGUgPSAi57yW6L6R5Yqo5oCBIg0KICAgICAgICAgICAgICAgIHRoaXMuZm9ybSA9IHJvdw0KICAgICAgICAgICAgICAgIGlmKHJvdy5pbWFnZXMubGVuZ3RoPjAgJiYgIWlzRW1wdHkocm93LmltYWdlc1swXSkpew0KICAgICAgICAgICAgICAgICAgICByb3cuaW1hZ2VzLmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmltZ1VyaXMucHVzaCh7InVybCI6IGl0ZW19KQ0KICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIH1lbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbWdVcmlzID0gdW5kZWZpbmVkDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmKCFpc0VtcHR5KHJvdy50aHVtYikpew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnZpZGVvVXJpcy5wdXNoKHsidGh1bWIiOiByb3cudGh1bWIsICJ1cmwiOiByb3cudXJpfSkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5mb3JtLnB1Ymxpc2hBdFRpbWUgPSBuZXcgRGF0ZSh0aGlzLmZvcm0ucHVibGlzaEF0VGltZSkNCiAgICAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgICAgIHRoaXMuZm9ybS5lbnRpdHlJZCA9IGVudGl0eUlkDQogICAgICAgICAgICAgICAgdGhpcy5pbWdVcmlzID0gdW5kZWZpbmVkDQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLmlzRGlzYWJsZWQgPSB0cnVlDQogICAgICAgIH0sDQogICAgICAgIHN1Ym1pdEZvcm0oKSB7DQogICAgICAgICAgICBjb25zdCAkdGhpcyA9IHRoaXMNCiAgICAgICAgICAgIHRoaXMuJHJlZnMucnVsZUZvcm0udmFsaWRhdGUoKHZhbGlkKSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKHZhbGlkKSB7DQogICAgICAgICAgICAgICAgICAgIGxldCBwYXJhbSA9IHRoaXMuZm9ybQ0KICAgICAgICAgICAgICAgICAgICBwYXJhbS5lbnRpdHlUeXBlID0gMg0KICAgICAgICAgICAgICAgICAgICBwYXJhbS5zdGF0dXMgPSA1DQogICAgICAgICAgICAgICAgICAgIHBhcmFtLnB1Ymxpc2hBdCA9IHBhcmFtLnB1Ymxpc2hBdFRpbWUuZ2V0VGltZSgpIC8gMTAwMA0KICAgICAgICAgICAgICAgICAgICB0aGlzLiRzZXJ2aWNlLnJvYm90LnNhdmVNb21lbnQocGFyYW0sIGZ1bmN0aW9uIChyZXN1bHQpew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuS/neWtmOaIkOWKnyEiKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLmNsb3NlRGlhbG9nKCkNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuS/neWtmOWksei0pSEiKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICByZXNldEZvcm0oKSB7DQogICAgICAgICAgICB0aGlzLiRyZWZzLnJ1bGVGb3JtLnJlc2V0RmllbGRzKCkNCiAgICAgICAgfSwNCiAgICAgICAgY2xvc2VEaWFsb2coKSB7DQogICAgICAgICAgICB0aGlzLmZvcm1Mb2FkaW5nID0gZmFsc2UNCiAgICAgICAgICAgIHRoaXMuZm9ybS52aWRlbyA9IHVuZGVmaW5lZA0KICAgICAgICAgICAgdGhpcy5mb3JtLmltYWdlcyA9IFtdDQogICAgICAgICAgICB0aGlzLmltZ1VyaXMgPSBbXQ0KICAgICAgICAgICAgdGhpcy52aWRlb1VyaXMgPSBbXQ0KICAgICAgICAgICAgdGhpcy5mb3JtLmVudGl0eUlkID0gdW5kZWZpbmVkDQogICAgICAgICAgICB0aGlzLmlzRGlzYWJsZWQgPSBmYWxzZQ0KICAgICAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2UNCiAgICAgICAgICAgIHRoaXMucmVzZXRGb3JtKCkNCiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2ZldGNoRGF0YScpOw0KICAgICAgICB9LA0KICAgICAgICBpbWdQcmV2aWV3KGZpbGUpIHsNCiAgICAgICAgICAgIHRoaXMuaW1nRGlhbG9nID0gdHJ1ZTsNCiAgICAgICAgICAgIHRoaXMuaW1nVXJpID0gZmlsZS51cmwNCiAgICAgICAgfSwNCiAgICAgICAgc3VjY2Vzc1Bob3RvKGZpbGUpIHsNCiAgICAgICAgICAgIGxldCAkdGhpcyA9IHRoaXMNCiAgICAgICAgICAgIHRoaXMuZm9ybUxvYWRpbmcgPSB0cnVlDQogICAgICAgICAgICB0aGlzLmltZ1VwbG9hZChmaWxlLnJhdywgMSwgZnVuY3Rpb24gKGRhdGEpew0KICAgICAgICAgICAgICAgICR0aGlzLmZvcm0uaW1hZ2VzLnB1c2goZGF0YS51cmkpDQogICAgICAgICAgICAgICAgJHRoaXMuZm9ybUxvYWRpbmcgPSBmYWxzZQ0KICAgICAgICAgICAgfSkNCiAgICAgICAgfSwNCiAgICAgICAgc3VjY2Vzc1ZpZGVvKGZpbGUpIHsNCiAgICAgICAgICAgIGNvbnN0ICR0aGlzID0gdGhpcw0KICAgICAgICAgICAgdGhpcy5mb3JtTG9hZGluZyA9IHRydWUNCiAgICAgICAgICAgIHRoaXMuaW1nVXBsb2FkKGZpbGUucmF3LCAyLCBmdW5jdGlvbiAoZGF0YSl7DQogICAgICAgICAgICAgICAgJHRoaXMuZm9ybS52aWRlbyA9IGRhdGEudXJpDQogICAgICAgICAgICAgICAgJHRoaXMuZm9ybS50aHVtYiA9IGRhdGEudGh1bWINCiAgICAgICAgICAgICAgICAkdGhpcy5mb3JtTG9hZGluZyA9IGZhbHNlDQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICByZW1vdmVQaG90byhmaWxlLCBmaWxlTGlzdCl7DQogICAgICAgICAgICBsZXQgYXJyID0gdGhpcy5mb3JtLmltYWdlcw0KICAgICAgICAgICAgbGV0IHZhbCA9IGZpbGUudXJsDQogICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICAgICAgaWYoYXJyW2ldID09PSB2YWwpIHsNCiAgICAgICAgICAgICAgICAgICAgYXJyLnNwbGljZShpLCAxKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5mb3JtLmltYWdlcyA9IGFyci5sZW5ndGggPT09IDAgPyB1bmRlZmluZWQgOiBhcnINCiAgICAgICAgICAgICAgICAgICAgYWxlcnQodGhpcy5mb3JtLmltYWdlcykNCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICByZW1vdmVWaWRlbyhmaWxlLCBmaWxlTGlzdCl7DQogICAgICAgICAgICB0aGlzLmZvcm0udmlkZW8gPSB1bmRlZmluZWQNCiAgICAgICAgfSwNCiAgICAgICAgaW1nVXBsb2FkKGZpbGUsIHR5cGUsIGNhbGxiYWNrKXsNCiAgICAgICAgICAgIGxldCBoZWFkZXJzID0gew0KICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScsDQogICAgICAgICAgICAgICAgInRva2VuIiA6IGdldFRva2VuKCksDQogICAgICAgICAgICAgICAgImFyZWEtaWQiIDogMSwNCiAgICAgICAgICAgICAgICAiZmlsZS10eXBlIiA6IHR5cGUNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCkNCiAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIGZpbGUpDQogICAgICAgICAgICBheGlvcyh7DQogICAgICAgICAgICAgICAgdXJsOiAnaHR0cDovLzEwMS4zMy4xMTguMjMyOjgxMDEvZmlsZS91cGxvYWQnLA0KICAgICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLA0KICAgICAgICAgICAgICAgIGRhdGE6IGZvcm1EYXRhLA0KICAgICAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMNCiAgICAgICAgICAgIH0pLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGENCiAgICAgICAgICAgICAgICBjYWxsYmFjayhkYXRhKQ0KICAgICAgICAgICAgfSkNCiAgICAgICAgfQ0KICAgIH0NCn0NCg=="},null]}