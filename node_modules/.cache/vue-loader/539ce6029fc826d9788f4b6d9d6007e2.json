{"remainingRequest":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/Documents/iwork/kafo/vue-admin-design/src/views/video/VideoMark.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/src/views/video/VideoMark.vue","mtime":1624500048824},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBIaW50cyBmcm9tICcuLi8uLi9jb21wb25lbnRzL0hpbnRzJwppbXBvcnQgRWxlbWVudERyciBmcm9tICcuLi8uLi9jb21wb25lbnRzL0VsZW1lbnREcnInCmltcG9ydCBJbWFnZVJpY2hUZXh0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvSW1hZ2VSaWNoVGV4dCcKaW1wb3J0IFRleHRTZXR0aW5nIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVGV4dFNldHRpbmcnCmltcG9ydCBVcGxvYWRJbWFnZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL1VwbG9hZEltYWdlJwppbXBvcnQgeyBjYWxjSW1hZ2VTaXplIH0gZnJvbSAnLi4vLi4vdXRpbHMnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1ZpZGVvTWFyaycsCiAgY29tcG9uZW50czogeyBIaW50cywgRWxlbWVudERyciwgSW1hZ2VSaWNoVGV4dCwgVGV4dFNldHRpbmcsIFVwbG9hZEltYWdlIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpZGVvU3JjOiAnaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2JhaW1pbmd4dWFuL21lZGlhLXN0b3JlL3ZpZGVvcy9ob3VsYW5nLm1wNCcsCiAgICAgIGVsZW1lbnRzOiBbXSwgLy8g5Y+g5Yqg57uE5Lu25pWw57uECiAgICAgIGFjdGl2ZUVsZToge30sIC8vIOW9k+WJjeWbvueJh+S4iuiBmueEpueahOWPoOWKoOe7hOS7tgogICAgICBlbGVOdW06IDAKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyDpgInmi6nnmoTmlofmnKwKICAgIGFjdGl2ZUVsZVRleHQoKSB7CiAgICAgIGlmICh0aGlzLmFjdGl2ZUVsZS50eXBlID09PSAndGV4dCcpIHsKICAgICAgICByZXR1cm4gdGhpcy5hY3RpdmVFbGUKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuYWRkVGV4dCgpCiAgICB0aGlzLmFkZEltYWdlKHsKICAgICAgYWN0aXZlOiBmYWxzZSwKICAgICAgc3JjOiAnaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2JhaW1pbmd4dWFuL21lZGlhLXN0b3JlL2ltYWdlcy9pbWcwNi5qcGcnLAogICAgICBzaXplOiA1MzI0OCwKICAgICAgd2lkdGg6IDEzMiwKICAgICAgaGVpZ2h0OiAxMzIKICAgIH0pCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDmi5bliqjlhYPntKDmiormn4QKICAgIGRyYWdIYW5kbGVzKHR5cGUpIHsKICAgICAgaWYgKHR5cGUgPT09ICd0ZXh0JykgewogICAgICAgIHJldHVybiBbJ2UnLCAndyddCiAgICAgIH0KICAgIH0sCiAgICAvLyDlhYPntKDlsYLnuqfmjpLluo8KICAgIGVsZW1lbnRaSW5kZXgodHlwZSkgewogICAgICBsZXQgekluZGV4ID0gMQogICAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgICBjYXNlICd0ZXh0JzoKICAgICAgICAgIHpJbmRleCA9IDMKICAgICAgICAgIGJyZWFrCiAgICAgICAgY2FzZSAnaW1hZ2UnOgogICAgICAgICAgekluZGV4ID0gMgogICAgICAgICAgYnJlYWsKICAgICAgfQogICAgICByZXR1cm4gewogICAgICAgIHpJbmRleDogekluZGV4CiAgICAgIH0KICAgIH0sCiAgICAvLyDmt7vliqDmlofmnKwKICAgIGFkZFRleHQoKSB7CiAgICAgIGNvbnN0IHRhZ051bSA9ICsrdGhpcy5lbGVOdW0KICAgICAgY29uc3QgdGV4dCA9IHsKICAgICAgICBhY3RpdmU6IHRydWUsCiAgICAgICAgdGV4dDogJ+ivt+i+k+WFpeaWh+acrCcsCiAgICAgICAgdHlwZTogJ3RleHQnLAogICAgICAgIHRhZzogJ3RleHRfJyArIHRhZ051bSwKICAgICAgICB4OiAzMDAsCiAgICAgICAgeTogODAsCiAgICAgICAgdzogMTgwLAogICAgICAgIGg6IDM2LAogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICB0ZXh0QWxpZ246ICdsZWZ0JywKICAgICAgICAgIGxpbmVIZWlnaHQ6ICcyNHB4JywKICAgICAgICAgIGZvbnRTaXplOiAnMjRweCcsCiAgICAgICAgICBmb250RmFtaWx5OiAn5b6u6L2v6buR5L2TJywKICAgICAgICAgIGZvbnRXZWlnaHQ6IDQwMCwKICAgICAgICAgIGNvbG9yOiAnIzY4NzY4NCcsCiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjOWFjOGQ4JywKICAgICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJwogICAgICAgIH0KICAgICAgfQogICAgICBpZiAodGhpcy5lbGVtZW50cy5sZW5ndGggPiA0KSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCflm77niYfkuIrmnIDlpJrlj6DliqA15Liq5YWD57Sg77yBJykKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmVsZW1lbnRzLnB1c2godGV4dCkKICAgICAgICB0aGlzLnVwZGF0ZUFjdGl2ZUVsZSh0ZXh0KQogICAgICB9CiAgICB9LAogICAgLy8g5re75Yqg5Zu+54mHCiAgICBhZGRJbWFnZShpbWdPYmopIHsKICAgICAgY29uc3QgdGFnTnVtID0gKyt0aGlzLmVsZU51bQogICAgICBjb25zdCBpbWFnZSA9IHsKICAgICAgICBhY3RpdmU6IGltZ09iai5hY3RpdmUsCiAgICAgICAgdHlwZTogJ2ltYWdlJywKICAgICAgICB0YWc6ICdpbWFnZV8nICsgdGFnTnVtLAogICAgICAgIHg6IDMyMCwKICAgICAgICB5OiAyNjAsCiAgICAgICAgdzogcGFyc2VJbnQoaW1nT2JqLndpZHRoKSwKICAgICAgICBoOiBwYXJzZUludChpbWdPYmouaGVpZ2h0KSwKICAgICAgICBzcmM6IGltZ09iai5zcmMsCiAgICAgICAgc2l6ZTogaW1nT2JqLnNpemUKICAgICAgfQogICAgICBpZiAodGhpcy5lbGVtZW50cy5sZW5ndGggPiA0KSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCflm77niYfkuIrmnIDlpJrlj6DliqA15Liq5YWD57Sg77yBJykKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmVsZW1lbnRzLnB1c2goaW1hZ2UpCiAgICAgICAgaWYgKGltZ09iai5hY3RpdmUpIHsKICAgICAgICAgIHRoaXMudXBkYXRlQWN0aXZlRWxlKGltYWdlKQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIC8vIOS4iuS8oOWbvueJh+aIkOWKnwogICAgaGFuZGxlQWRkSW1hZ2UoZGF0YSkgewogICAgICBjb25zdCBkYXRhU3RyTGVuID0gZGF0YS5yZXBsYWNlKCdkYXRhOmltYWdlL2pwZWc7YmFzZTY0LCcsICcnKS5sZW5ndGgKICAgICAgY29uc3QgZGF0YVNpemUgPSBwYXJzZUludChkYXRhU3RyTGVuIC0gKGRhdGFTdHJMZW4gLyA4KSAqIDIpCiAgICAgIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpCiAgICAgIGltZy5zcmMgPSBkYXRhCiAgICAgIGltZy5vbmxvYWQgPSAoKSA9PiB7CiAgICAgICAgY29uc3QgaW1hZ2VTaXplID0gY2FsY0ltYWdlU2l6ZShpbWcud2lkdGgsIGltZy5oZWlnaHQsIHBhcnNlSW50KDg1MCAvIDQpLCBwYXJzZUludCg0NzggLyA0KSkKICAgICAgICB0aGlzLmFkZEltYWdlKHsKICAgICAgICAgIGFjdGl2ZTogdHJ1ZSwKICAgICAgICAgIHNyYzogZGF0YSwKICAgICAgICAgIHNpemU6IGRhdGFTaXplLAogICAgICAgICAgd2lkdGg6IGltYWdlU2l6ZS53aWR0aCwKICAgICAgICAgIGhlaWdodDogaW1hZ2VTaXplLmhlaWdodAogICAgICAgIH0pCiAgICAgIH0KICAgIH0sCiAgICAvLyDmm7TmlrDlvZPliY3pgInkuK3nmoTlhYPntKAKICAgIHVwZGF0ZUFjdGl2ZUVsZShlbGVtZW50KSB7CiAgICAgIHRoaXMuYWN0aXZlRWxlID0gZWxlbWVudAogICAgfSwKICAgIC8vIOWIoOmZpOWbvueJh+S4iuW9k+WJjemAieaLqeeahOWFg+e0oAogICAgZGVsZXRlQWN0aXZlRWxlKCkgewogICAgICBjb25zdCBuZXdFbGVtZW50cyA9IHRoaXMuZWxlbWVudHMuZmlsdGVyKGl0ZW0gPT4gewogICAgICAgIHJldHVybiBpdGVtLnRhZyAhPT0gdGhpcy5hY3RpdmVFbGUudGFnCiAgICAgIH0pCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLmVsZW1lbnRzID0gbmV3RWxlbWVudHMKICAgICAgfSkKICAgICAgdGhpcy51cGRhdGVBY3RpdmVFbGUoe30pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["VideoMark.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"VideoMark.vue","sourceRoot":"src/views/video","sourcesContent":["<template>\n  <div class=\"video-mark-wrapper\">\n    <Hints>\n      <template slot=\"hintName\">视频水印</template>\n      <template slot=\"hintInfo\">\n        <p>基于VueDRR拖拽功能，在视频上通过叠加图片、文字等，实现视频添加水印的功能</p>\n        <p>VueDRR：基于vue-draggable-resizable的vue组件，可以实现拖动、拉伸和旋转功能</p>\n      </template>\n    </Hints>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"16\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">合成区域</div>\n          <div class=\"box-wrapper\">\n            <div class=\"drag-container\">\n              <video :src=\"videoSrc\" controls />\n              <ElementDrr\n                v-for=\"(item, index) in elements\"\n                :key=\"index\"\n                :element=\"item\"\n                :handles=\"dragHandles(item.type)\"\n                :style=\"elementZIndex(item.type)\"\n                @updateActiveEle=\"updateActiveEle\"\n              >\n                <!-- 图片 -->\n                <img v-if=\"item.type==='image'\" :src=\"item.src\" draggable=\"false\">\n                <!-- 文字 -->\n                <ImageRichText v-if=\"item.type === 'text'\" v-model=\"item.text\" :element=\"item\" :active-ele-text=\"activeEleText\" />\n              </ElementDrr>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">设置区域</div>\n          <div class=\"box-content\">\n            <el-form class=\"form-wrapper\" label-width=\"70px\">\n              <el-form-item label=\"添加文本\">\n                <el-button @click=\"addText\">添加文本</el-button>\n              </el-form-item>\n              <el-form-item label=\"添加图片\">\n                <UploadImage @on-success=\"handleAddImage\" />\n              </el-form-item>\n              <el-form-item label=\"删除元素\">\n                <el-button type=\"danger\" @click=\"deleteActiveEle\">删除元素</el-button>\n              </el-form-item>\n            </el-form>\n            <TextSetting v-if=\"activeEle.type === 'text'\" :active-ele-text=\"activeEleText\" />\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport Hints from '../../components/Hints'\nimport ElementDrr from '../../components/ElementDrr'\nimport ImageRichText from '../../components/ImageRichText'\nimport TextSetting from '../../components/TextSetting'\nimport UploadImage from '../../components/UploadImage'\nimport { calcImageSize } from '../../utils'\n\nexport default {\n  name: 'VideoMark',\n  components: { Hints, ElementDrr, ImageRichText, TextSetting, UploadImage },\n  data() {\n    return {\n      videoSrc: 'https://cdn.jsdelivr.net/gh/baimingxuan/media-store/videos/houlang.mp4',\n      elements: [], // 叠加组件数组\n      activeEle: {}, // 当前图片上聚焦的叠加组件\n      eleNum: 0\n    }\n  },\n  computed: {\n    // 选择的文本\n    activeEleText() {\n      if (this.activeEle.type === 'text') {\n        return this.activeEle\n      }\n    }\n  },\n  created() {\n    this.addText()\n    this.addImage({\n      active: false,\n      src: 'https://cdn.jsdelivr.net/gh/baimingxuan/media-store/images/img06.jpg',\n      size: 53248,\n      width: 132,\n      height: 132\n    })\n  },\n  methods: {\n    // 拖动元素把柄\n    dragHandles(type) {\n      if (type === 'text') {\n        return ['e', 'w']\n      }\n    },\n    // 元素层级排序\n    elementZIndex(type) {\n      let zIndex = 1\n      switch (type) {\n        case 'text':\n          zIndex = 3\n          break\n        case 'image':\n          zIndex = 2\n          break\n      }\n      return {\n        zIndex: zIndex\n      }\n    },\n    // 添加文本\n    addText() {\n      const tagNum = ++this.eleNum\n      const text = {\n        active: true,\n        text: '请输入文本',\n        type: 'text',\n        tag: 'text_' + tagNum,\n        x: 300,\n        y: 80,\n        w: 180,\n        h: 36,\n        style: {\n          textAlign: 'left',\n          lineHeight: '24px',\n          fontSize: '24px',\n          fontFamily: '微软黑体',\n          fontWeight: 400,\n          color: '#687684',\n          backgroundColor: '#9ac8d8',\n          overflow: 'hidden'\n        }\n      }\n      if (this.elements.length > 4) {\n        this.$message.warning('图片上最多叠加5个元素！')\n      } else {\n        this.elements.push(text)\n        this.updateActiveEle(text)\n      }\n    },\n    // 添加图片\n    addImage(imgObj) {\n      const tagNum = ++this.eleNum\n      const image = {\n        active: imgObj.active,\n        type: 'image',\n        tag: 'image_' + tagNum,\n        x: 320,\n        y: 260,\n        w: parseInt(imgObj.width),\n        h: parseInt(imgObj.height),\n        src: imgObj.src,\n        size: imgObj.size\n      }\n      if (this.elements.length > 4) {\n        this.$message.warning('图片上最多叠加5个元素！')\n      } else {\n        this.elements.push(image)\n        if (imgObj.active) {\n          this.updateActiveEle(image)\n        }\n      }\n    },\n    // 上传图片成功\n    handleAddImage(data) {\n      const dataStrLen = data.replace('data:image/jpeg;base64,', '').length\n      const dataSize = parseInt(dataStrLen - (dataStrLen / 8) * 2)\n      const img = new Image()\n      img.src = data\n      img.onload = () => {\n        const imageSize = calcImageSize(img.width, img.height, parseInt(850 / 4), parseInt(478 / 4))\n        this.addImage({\n          active: true,\n          src: data,\n          size: dataSize,\n          width: imageSize.width,\n          height: imageSize.height\n        })\n      }\n    },\n    // 更新当前选中的元素\n    updateActiveEle(element) {\n      this.activeEle = element\n    },\n    // 删除图片上当前选择的元素\n    deleteActiveEle() {\n      const newElements = this.elements.filter(item => {\n        return item.tag !== this.activeEle.tag\n      })\n      this.$nextTick(() => {\n        this.elements = newElements\n      })\n      this.updateActiveEle({})\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n.video-mark-wrapper {\n  .box-wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 550px;\n    overflow: hidden;\n    .drag-container {\n      position: relative;\n      width: 850px;\n      height: 478px;\n      video {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n      .z-drr-container {\n        border: 1px dashed transparent;\n        &.z-active {\n          border: 1px dashed #2e95ff;\n        }\n      }\n    }\n  }\n  .box-content {\n    height: 550px;\n    overflow: hidden;\n    .form-wrapper {\n      width: 300px;\n      margin: 50px auto 0;\n    }\n    .el-button {\n      width: 210px;\n    }\n  }\n}\n</style>\n"]}]}