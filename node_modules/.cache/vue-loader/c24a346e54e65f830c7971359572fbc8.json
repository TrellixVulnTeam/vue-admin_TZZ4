{"remainingRequest":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js??vue-loader-options!/home/mengy/Documents/iwork/kafo/vue-admin-design/src/components/UploadExcel/index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/src/components/UploadExcel/index.vue","mtime":1624500048821},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_vue-loader@15.9.7@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnVwbG9hZC1leGNlbC13cmFwcGVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAgYWxpZ24tY29udGVudDogY2VudGVyOw0KICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgbWFyZ2luLWJvdHRvbTogMzBweDsNCiAgLmVsLXVwbG9hZC1kcmFnZ2VyIHsNCiAgICB3aWR0aDogNTgwcHg7DQogIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/UploadExcel","sourcesContent":["<template>\r\n  <div class=\"upload-excel-wrapper\">\r\n    <el-upload\r\n      ref=\"uploadExcel\"\r\n      drag\r\n      action=\"\"\r\n      accept=\".xlsx, .xls, .csv\"\r\n      :multiple=\"false\"\r\n      :show-file-list=\"false\"\r\n      :auto-upload=\"false\"\r\n      :limit=\"1\"\r\n      :on-exceed=\"handleLimit\"\r\n      :on-change=\"handleChange\"\n    >\r\n      <i class=\"el-icon-upload\" />\r\n      <div class=\"el-upload__text\">将Excel文件拖到此处，或<em>点击上传</em></div>\r\n    </el-upload>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport excel from '../../utils/excel'\r\n\r\nexport default {\r\n  name: 'UploadExcel',\r\n  methods: {\r\n    handleLimit() {\r\n      this.$message.warning('Excel文件只支持单个上传!')\r\n      return false\r\n    },\r\n    handleChange(file) {\r\n      const rawFile = file.raw\r\n      if (!rawFile) return false\r\n      if (!this.isExcel(rawFile)) {\r\n        this.$message.warning('Excel文件只支持.xlsx, .xls, .csv格式!')\r\n        return false\r\n      }\r\n      if (this.isLimit1M(rawFile)) {\r\n        this.readFile(rawFile)\r\n      }\r\n    },\r\n    isLimit1M(file) {\r\n      const isLimit1M = file.size / 1024 / 1024 < 1\r\n      if (isLimit1M) {\r\n        return true\r\n      } else {\r\n        this.$message.warning('上传的Excel文件大小不能超过1M!')\r\n        return false\r\n      }\r\n    },\r\n    isExcel(file) {\r\n      return /\\.(xlsx|xls|csv)$/.test(file.name)\r\n    },\r\n    readFile(file) {\r\n      const reader = new FileReader()\r\n      reader.onload = e => {\r\n        const data = e.target.result\r\n        const { header, results } = excel.readDataFromExcel(data, 'array')\r\n        this.$emit('on-success', { header, results })\r\n      }\r\n      reader.readAsArrayBuffer(file)\r\n      reader.onerror = e => {\r\n        this.$message.error('Excel文件读取出错!')\r\n      }\r\n      this.$refs.uploadExcel.clearFiles()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.upload-excel-wrapper {\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: center;\r\n  margin-bottom: 30px;\r\n  .el-upload-dragger {\r\n    width: 580px;\r\n  }\r\n}\r\n</style>\r\n"]}]}