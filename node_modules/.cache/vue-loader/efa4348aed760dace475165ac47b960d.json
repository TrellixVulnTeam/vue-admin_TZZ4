{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/components/Charts/ChartsBarLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/components/Charts/ChartsBarLine.vue","mtime":1634266857952},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1634111096329},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":1634111095606},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1634111096329},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":1634111096162}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KDQppbXBvcnQgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogJ0NoYXJ0c0JhcicsDQogICAgcHJvcHM6IHsNCiAgICAgICAgZGF0YTogew0KICAgICAgICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgICAgICAgZGVmYXVsdDogKCkgPT4gew0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfSwNCiAgICBkYXRhKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgZG9tOiBudWxsDQogICAgICAgIH0NCiAgICB9LA0KICAgIG1vdW50ZWQoKSB7DQogICAgICAgIHRoaXMuZHJhd2luZygpDQogICAgfSwNCiAgICBiZWZvcmVEZXN0cm95KCkgew0KICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5yZXNpemUpDQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIHJlc2l6ZSgpIHsNCiAgICAgICAgICAgIHRoaXMuZG9tLnJlc2l6ZSgpDQogICAgICAgIH0sDQogICAgICAgIGRyYXdpbmcoKSB7DQogICAgICAgICAgICBjb25zb2xlLmxvZygi57uE5Lu2Li4uLi4uIikNCiAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gdGhpcy5kYXRhLnRpdGxlDQogICAgICAgICAgICBjb25zdCBuYW1lID0gdGhpcy5kYXRhLm5hbWUNCiAgICAgICAgICAgIGNvbnN0IGxlZ2VuZERhdGEgPSB0aGlzLmRhdGEubGVnZW5kDQogICAgICAgICAgICBjb25zdCB4QXhpc0RhdGEgPSB0aGlzLmRhdGEuZGF0YS5tYXAoaXRlbSA9PiBpdGVtLnRpdGxlKQ0KICAgICAgICAgICAgY29uc3Qgc2VyaWVzRGF0YTEgPSB0aGlzLmRhdGEuZGF0YS5tYXAoaXRlbSA9PiBpdGVtLnZhbDEpDQogICAgICAgICAgICBjb25zdCBzZXJpZXNEYXRhMiA9IHRoaXMuZGF0YS5kYXRhLm1hcChpdGVtID0+IGl0ZW0udmFsMikNCiAgICAgICAgICAgIGNvbnN0IHNlcmllc0RhdGEzID0gdGhpcy5kYXRhLmRhdGEubWFwKGl0ZW0gPT4gaXRlbS52YWwzKQ0KICAgICAgICAgICAgY29uc3Qgc2VyaWVzRGF0YTQgPSB0aGlzLmRhdGEuZGF0YS5tYXAoaXRlbSA9PiBpdGVtLnZhbDQpDQogICAgICAgICAgICBjb25zdCBvcHRpb25zID0gew0KICAgICAgICAgICAgICAgIC8vIOagh+mimA0KICAgICAgICAgICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgICAgICAgICAgIHRleHQ6IHRpdGxlLA0KICAgICAgICAgICAgICAgICAgICBzdWJ0ZXh0OiBuYW1lLA0KICAgICAgICAgICAgICAgICAgICB0b3A6IDUsDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAvLyDlt6Xlhbfmj5DnpLoNCiAgICAgICAgICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywNCiAgICAgICAgICAgICAgICAgICAgYXhpc1BvaW50ZXI6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdjcm9zcycsDQogICAgICAgICAgICAgICAgICAgICAgICBjcm9zc1N0eWxlOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjOTk5Jw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICB0b29sYm94OiB7DQogICAgICAgICAgICAgICAgICAgIGZlYXR1cmU6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFWaWV3OiB7c2hvdzogdHJ1ZSwgcmVhZE9ubHk6IGZhbHNlfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG1hZ2ljVHlwZToge3Nob3c6IHRydWUsIHR5cGU6IFsnbGluZScsICdiYXInXX0sDQogICAgICAgICAgICAgICAgICAgICAgICByZXN0b3JlOiB7c2hvdzogdHJ1ZX0sDQogICAgICAgICAgICAgICAgICAgICAgICBzYXZlQXNJbWFnZToge3Nob3c6IHRydWV9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIGxlZ2VuZDogew0KICAgICAgICAgICAgICAgICAgICB0b3A6IDUsDQogICAgICAgICAgICAgICAgICAgIGRhdGE6IGxlZ2VuZERhdGENCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICAgICAgICAgICAgbGVmdDogJzMlJywNCiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6ICc0JScsDQogICAgICAgICAgICAgICAgICAgIGJvdHRvbTogJzMlJywNCiAgICAgICAgICAgICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICB4QXhpczogWw0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLA0KICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogeEF4aXNEYXRhLA0KICAgICAgICAgICAgICAgICAgICAgICAgYXhpc1BvaW50ZXI6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc2hhZG93Jw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICAgICB5QXhpczogWw0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAndmFsdWUnLA0KICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAndmFsdWUnLA0KICAgICAgICAgICAgICAgICAgICAgICAgc2hvdyAgOiBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGF4aXNMYWJlbDogew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdHRlcjogJ3t2YWx1ZX0gJScNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBtYXg6IHZhbHVlID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5jZWlsKHZhbHVlLm1heCAvIDEwMCkgKiAxMDAgKyAyMDANCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIF0sDQogICAgICAgICAgICAgICAgLy8g57G75Z6L6YWN572uDQogICAgICAgICAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGxlZ2VuZERhdGFbMF0sDQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnYmFyJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YWNrOiAndG90YWwnLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMmQ4Y2YwJywNCiAgICAgICAgICAgICAgICAgICAgICAgIGJhcldpZHRoOiAnNDAlJywNCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVtcGhhc2lzOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXM6ICdzZXJpZXMnDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogc2VyaWVzRGF0YTENCiAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogbGVnZW5kRGF0YVsxXSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdiYXInLA0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhY2s6ICd0b3RhbCcsDQogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyMxOWJlNmInLA0KICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgZW1waGFzaXM6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1czogJ3NlcmllcycNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBzZXJpZXNEYXRhMg0KICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBsZWdlbmREYXRhWzJdLA0KICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2xpbmUnLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMTliZTZiJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHlBeGlzSW5kZXg6IDEsDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBzZXJpZXNEYXRhMw0KICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBsZWdlbmREYXRhWzNdLA0KICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2xpbmUnLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjZmY5OTAwJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHlBeGlzSW5kZXg6IDEsDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBzZXJpZXNEYXRhNA0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5kb20gPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5kb20pDQogICAgICAgICAgICB0aGlzLmRvbS5zZXRPcHRpb24ob3B0aW9ucykNCiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnJlc2l6ZSkNCiAgICAgICAgfQ0KICAgIH0NCn0NCg=="},{"version":3,"sources":["ChartsBarLine.vue"],"names":[],"mappingsfile":"ChartsBarLine.vue","sourceRoot":"src/components/Charts","sourcesContent":["<template>\r\n    <div ref=\"dom\" class=\"charts-bar\"/>\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\n\r\nexport default {\r\n    name: 'ChartsBar',\r\n    props: {\r\n        data: {\r\n            type: Object,\r\n            default: () => {\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            dom: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.drawing()\r\n    },\r\n    beforeDestroy() {\r\n        window.removeEventListener('resize', this.resize)\r\n    },\r\n    methods: {\r\n        resize() {\r\n            this.dom.resize()\r\n        },\r\n        drawing() {\r\n            console.log(\"组件......\")\r\n            const title = this.data.title\r\n            const name = this.data.name\r\n            const legendData = this.data.legend\r\n            const xAxisData = this.data.data.map(item => item.title)\r\n            const seriesData1 = this.data.data.map(item => item.val1)\r\n            const seriesData2 = this.data.data.map(item => item.val2)\r\n            const seriesData3 = this.data.data.map(item => item.val3)\r\n            const seriesData4 = this.data.data.map(item => item.val4)\r\n            const options = {\r\n                // 标题\r\n                title: {\r\n                    text: title,\r\n                    subtext: name,\r\n                    top: 5,\r\n                },\r\n                // 工具提示\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        type: 'cross',\r\n                        crossStyle: {\r\n                            color: '#999'\r\n                        }\r\n                    }\r\n                },\r\n                toolbox: {\r\n                    feature: {\r\n                        dataView: {show: true, readOnly: false},\r\n                        magicType: {show: true, type: ['line', 'bar']},\r\n                        restore: {show: true},\r\n                        saveAsImage: {show: true}\r\n                    }\r\n                },\r\n                legend: {\r\n                    top: 5,\r\n                    data: legendData\r\n                },\r\n                grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        type: 'category',\r\n                        data: xAxisData,\r\n                        axisPointer: {\r\n                            type: 'shadow'\r\n                        }\r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        type: 'value',\r\n                    },\r\n                    {\r\n                        type: 'value',\r\n                        show  : false,\r\n                        axisLabel: {\r\n                            formatter: '{value} %'\r\n                        },\r\n                        max: value => {\r\n                            return Math.ceil(value.max / 100) * 100 + 200\r\n                        }\r\n                    }\r\n                ],\r\n                // 类型配置\r\n                series: [\r\n                    {\r\n                        name: legendData[0],\r\n                        type: 'bar',\r\n                        stack: 'total',\r\n                        color: '#2d8cf0',\r\n                        barWidth: '40%',\r\n                        label: {\r\n                            show: true\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: seriesData1\r\n                    },\r\n                    {\r\n                        name: legendData[1],\r\n                        type: 'bar',\r\n                        stack: 'total',\r\n                        color: '#19be6b',\r\n                        label: {\r\n                            show: true\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: seriesData2\r\n                    },\r\n                    {\r\n                        name: legendData[2],\r\n                        type: 'line',\r\n                        color: '#19be6b',\r\n                        yAxisIndex: 1,\r\n                        data: seriesData3\r\n                    },\r\n                    {\r\n                        name: legendData[3],\r\n                        type: 'line',\r\n                        color: '#ff9900',\r\n                        yAxisIndex: 1,\r\n                        data: seriesData4\r\n                    }\r\n                ]\r\n            }\r\n            this.dom = echarts.init(this.$refs.dom)\r\n            this.dom.setOption(options)\r\n            window.addEventListener('resize', this.resize)\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]}]}