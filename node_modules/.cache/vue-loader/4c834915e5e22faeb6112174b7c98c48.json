{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/count/real-time.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/count/real-time.vue","mtime":1634698483044},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["real-time.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"real-time.vue","sourceRoot":"src/views/manage/count","sourcesContent":["<template>\n    <div class=\"home-wrapper\">\n        <el-row class=\"date-box\" :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <el-form\n                        ref=\"searchForm\"\n                        :inline=\"true\"\n                        :model=\"search\"\n                        label-width=\"90px\"\n                        class=\"search-form\"\n                    >\n                        <el-form-item label=\"区域\">\n                            <el-select v-model=\"search.areaId\" :disabled=\"authAreaId !== 0\" placeholder=\"请选择\">\n                                <el-option v-for=\"item in areaList\"\n                                           :key=\"item.value\"\n                                           :label=\"item.label\"\n                                           :value=\"item.value\">\n                                </el-option>\n                            </el-select>\n                        </el-form-item>\n                        <el-form-item label=\"时间\" prop=\"createdStart\">\n                            <el-date-picker\n                                v-model=\"search.date\"\n                                type=\"daterange\"\n                                range-separator=\"至\"\n                                start-placeholder=\"开始日期\"\n                                end-placeholder=\"结束日期\">\n                            </el-date-picker>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button type=\"danger\" @click=\"onSearch\" icon=\"el-icon-refresh\">刷 新</el-button>\n                        </el-form-item>\n                    </el-form>\n                </el-card>\n            </el-col>\n        </el-row>\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsCountLine :data=\"userData\" :key=\"userKey\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsCountLine :data=\"callingData\" :key=\"callingKey\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsCountLine :data=\"callData\" :key=\"callKey\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsCountLine :data=\"expenseData\" :key=\"expenseKey\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsCountLine :data=\"depositData\" :key=\"depositKey\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsCountLine :data=\"payData\" :key=\"payKey\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport CountTo from 'vue-count-to'\nimport ChartsBarLine from '../../../components/Charts/ChartsBarLine'\nimport ChartsBar from '../../../components/Charts/ChartsBar'\nimport ChartsCountLine from '../../../components/Charts/ChartsCountLine'\nimport {getAreaList, getCurrentUserAreaId} from \"@/utils/dist\";\nimport {endUnix, getCurrentDate, startUnix} from \"@/utils/util\";\n\nexport default {\n    name: 'Home',\n    components: {CountTo, ChartsBar, ChartsBarLine, ChartsCountLine},\n    data() {\n        return {\n            userKey: 20,\n            callingKey: 40,\n            callKey: 60,\n            expenseKey: 80,\n            depositKey: 100,\n            payKey: 120,\n            minDate: getCurrentDate(-3),\n            search: {\n                areaId: undefined,\n                date: [\n                    getCurrentDate(),\n                    getCurrentDate()\n                ]\n            },\n            fmt: '',\n            interval: undefined,\n            authAreaId: getCurrentUserAreaId(),\n            areaList: getAreaList(false),\n            userData: {\n                title: '实时用户',\n                legend: ['在线用户', '新用户', '付费用户', '空闲主播', '通话主播'],\n                keys: [],\n                values: []\n            },\n            callingData: {\n                title: '实时通话',\n                legend: ['AIB发起', '用户发起', '主播发起'],\n                keys: [],\n                values: []\n            },\n            callData: {\n                title: '实时呼叫',\n                legend: ['整体呼叫', 'AIB呼叫', '用户呼叫', '主播呼叫'],\n                keys: [],\n                values: []\n            },\n            expenseData: {\n                title: '实时消耗',\n                legend: ['全部用户'],\n                keys: [],\n                values: []\n            },\n            depositData: {\n                title: '实时充值',\n                legend: ['全部用户'],\n                keys: [],\n                values: []\n            },\n            payData: {\n                title: '渠道收入',\n                legend: ['Google', 'Apple', '三方渠道'],\n                keys: [],\n                values: []\n            }\n        }\n    },\n    created() {\n        this.search.areaId = this.authAreaId === 0 ? this.areaList[0].value : this.authAreaId\n        this.initData()\n    },\n    methods: {\n        onSearch() {\n            this.initData()\n        },\n        initData(){\n            const $this = this\n            let param = this.handleParam()\n            this.$service.home.getAreaStat(param, function (result){\n                let statList = result.getStatsList()\n                $this.toFmt(param)\n                $this.handleUserData(statList)\n                $this.handleCallingData(statList)\n                $this.handleCallData(statList)\n                $this.handleExpenseData(statList)\n                $this.handleDepositData(statList)\n                $this.handlePayData(statList)\n            });\n        },\n        handleParam(){\n            let param = this.search;\n            if (param.date.length > 0){\n                param.startAt = startUnix(this.search.date[0])\n                param.endAt = endUnix(this.search.date[1])\n            }\n            return param\n        },\n        handleUserData(statList){\n            let keys = []\n            let values = []\n            let onlineUser = []\n            let newUser = []\n            let payUser = []\n            let idleAnchor = []\n            let busyAnchor = []\n            let len = statList.length\n            statList.forEach((item, index) => {\n                let startAt = item.getStartAt()\n                keys.push(new Date(startAt * 1000).format(this.fmt))\n                onlineUser.push(item.getOnlineUser())\n                newUser.push(item.getNewUser())\n                payUser.push(item.getPayUser())\n                idleAnchor.push(item.getIdleAnchor())\n                busyAnchor.push(item.getBusyAnchor())\n            })\n\n            values.push(onlineUser)\n            values.push(newUser)\n            values.push(payUser)\n            values.push(idleAnchor)\n            values.push(busyAnchor)\n\n            this.userData.keys = keys\n            this.userData.values = values\n            this.userData.interval = this.interval\n            ++this.userKey\n        },\n        handleCallingData(statList){\n            let keys = []\n            let values = []\n            let aiCalling = []\n            let userCalling = []\n            let anchorCalling = []\n            statList.forEach((item, index) => {\n                let startAt = item.getStartAt()\n                keys.push(new Date(startAt * 1000).format(this.fmt))\n                aiCalling.push(item.getAiCalling())\n                userCalling.push(item.getUserCalling())\n                anchorCalling.push(item.getAnchorCalling())\n            })\n            values.push(aiCalling)\n            values.push(userCalling)\n            values.push(anchorCalling)\n\n            this.callingData.keys = keys\n            this.callingData.values = values\n            this.userData.interval = this.interval\n            ++this.callingKey\n        },\n        handleCallData(statList){\n            let keys = []\n            let values = []\n            let aiCall = []\n            let userCall = []\n            let anchorCall = []\n            statList.forEach((item, index) => {\n                let startAt = item.getStartAt()\n                keys.push(new Date(startAt * 1000).format(this.fmt))\n                aiCall.push(item.getAiCall())\n                userCall.push(item.getUserCall())\n                anchorCall.push(item.getAnchorCall())\n            })\n            values.push(aiCall)\n            values.push(userCall)\n            values.push(anchorCall)\n\n            this.callData.keys = keys\n            this.callData.values = values\n            this.userData.interval = this.interval\n            ++this.callKey\n        },\n        handleExpenseData(statList){\n            let keys = []\n            let values = []\n            let expense = []\n            statList.forEach((item, index) => {\n                let startAt = item.getStartAt()\n                keys.push(new Date(startAt * 1000).format(this.fmt))\n                expense.push(item.getExpense())\n            })\n            values.push(expense)\n            this.expenseData.values = values\n            this.expenseData.keys = keys\n            this.userData.interval = this.interval\n            ++this.expenseKey\n        },\n        handleDepositData(statList){\n            let keys = []\n            let values = []\n            let deposit = []\n            statList.forEach((item, index) => {\n                let startAt = item.getStartAt()\n                keys.push(new Date(startAt * 1000).format(this.fmt))\n                deposit.push(item.getDeposit())\n            })\n            values.push(deposit)\n            this.depositData.values = values\n            this.depositData.keys = keys\n            this.userData.interval = this.interval\n            ++this.depositKey\n        },\n        handlePayData(statList){\n            let keys = []\n            let values = []\n            let googlePay = []\n            let applePay = []\n            let otherPay = []\n            statList.forEach((item, index) => {\n                let startAt = item.getStartAt()\n                keys.push(new Date(startAt * 1000).format(this.fmt))\n                googlePay.push(item.getGooglePay()/100)\n                applePay.push(item.getApplePay()/100)\n                otherPay.push(item.getOtherPay()/100)\n            })\n            values.push(googlePay)\n            values.push(applePay)\n            values.push(otherPay)\n            this.payData.values = values\n            this.payData.keys = keys\n            this.userData.interval = this.interval\n            ++this.payKey\n        },\n        toFmt(param){\n            let startDate = param.date[0]\n            let endDate = param.date[1]\n            if(startDate.getTime() === endDate.getTime()){\n                this.fmt = \"hh:mm\"\n                this.interval = 10\n            }else{\n                this.fmt = \"MM-dd hh:mm\"\n                this.interval = undefined\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"less\">\n@import \"../../../assets/less/home\";\n</style>\n"]}]}