{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin-design/src/views/image/ImageCompress.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/src/views/image/ImageCompress.vue","mtime":1624500048824},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuLi8uLi9hc3NldHMvbGVzcy9pbWFnZS1jb21wcmVzcyI7Cg=="},{"version":3,"sources":["ImageCompress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA","file":"ImageCompress.vue","sourceRoot":"src/views/image","sourcesContent":["<template>\n  <div class=\"image-compress\">\n    <Hints>\n      <template slot=\"hintName\">图片压缩</template>\n      <template slot=\"hintInfo\">\n        <p>纯JS实现对图片的等比压缩和放大的功能，并对图片进行下载</p>\n      </template>\n    </Hints>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"16\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">图片区域</div>\n          <div class=\"box-wrapper\">\n            <div class=\"image-container\" :style=\"imageStyle\" />\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">设置区域</div>\n          <div class=\"box-content\">\n            <el-form label-width=\"82px\" label-position=\"left\">\n              <el-form-item label=\"选择图片：\">\n                <UploadImage class=\"select-image\" btn-name=\"选择图片\" @on-success=\"handleSuccess\" />\n              </el-form-item>\n              <el-form-item label=\"图片尺寸：\">\n                <div class=\"ratio-size\">\n                  <el-input v-model.number=\"imageObj.width\" @keyup.native=\"bindInput('h')\" />\n                  <i class=\"vue-dsn-icon-edit-img-size-locking icon-link\" />\n                  <el-input v-model.number=\"imageObj.height\" @keyup.native=\"bindInput('w')\" />\n                  <ul class=\"ratio-type clearfix\">\n                    <li>宽</li>\n                    <li>高</li>\n                  </ul>\n                </div>\n              </el-form-item>\n              <el-form-item label=\"压缩比例：\" class=\"item-ratio\">\n                <el-input v-model.number=\"imageObj.ratio\" disabled />\n              </el-form-item>\n              <el-form-item label=\"图片质量：\">\n                <el-select v-model=\"imageObj.quality\" placeholder=\"请选择\">\n                  <el-option\n                    v-for=\"item in qualityOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  />\n                </el-select>\n              </el-form-item>\n              <div>\n                <el-button class=\"btn-compress\" type=\"primary\" @click=\"compressImage\">压缩图片</el-button>\n              </div>\n            </el-form>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport Hints from '../../components/Hints'\nimport UploadImage from '../../components/UploadImage'\nimport { base64toBlob, calcImageSize } from '../../utils'\nconst qualityOptions = [\n  { label: 100, value: 1 },\n  { label: 90, value: 0.9 },\n  { label: 80, value: 0.8 },\n  { label: 70, value: 0.7 },\n  { label: 60, value: 0.6 },\n  { label: 50, value: 0.5 }\n]\n\nexport default {\n  name: 'ImageCompress',\n  components: { Hints, UploadImage },\n  data() {\n    return {\n      // 图片对象\n      image: {\n        width: 1920,\n        height: 1080,\n        src: 'https://cdn.jsdelivr.net/gh/baimingxuan/media-store/images/img03.jpg'\n      },\n      // 图片显示对象\n      imageShow: {\n        width: 0,\n        height: 0,\n        imgSrc: ''\n      },\n      // 图片压缩的值对象\n      imageObj: {\n        width: 0,\n        height: 0,\n        ratio: 100 + '%',\n        quality: 1\n      },\n      qualityOptions\n    }\n  },\n  computed: {\n    // 图片显示区样式\n    imageStyle() {\n      return {\n        width: this.imageShow.width + 'px',\n        height: this.imageShow.height + 'px',\n        backgroundImage: 'url(\\'' + this.imageShow.imgSrc + '\\')'\n      }\n    },\n    // 图片宽高比率\n    imageRatio() {\n      return this.image.width / this.image.height\n    }\n  },\n  watch: {\n    image: {\n      handler(val) {\n        this.getDragContainerSize(val.width, val.height)\n        this.imageShow.imgSrc = val.src\n        this.imageObj.width = val.width\n        this.imageObj.height = val.height\n        this.imageObj.ratio = 100 + '%'\n        this.imageObj.quality = 1\n      },\n      deep: true\n    }\n  },\n  created() {\n    this.getDragContainerSize(this.image.width, this.image.height)\n    this.imageShow.imgSrc = this.image.src\n    this.imageObj.width = this.image.width\n    this.imageObj.height = this.image.height\n  },\n  methods: {\n    // 输入宽高关联\n    bindInput(type) {\n      if (type === 'h') {\n        this.imageObj.height = Math.round(this.imageObj.width / this.imageRatio).toFixed(0)\n      } else if (type === 'w') {\n        this.imageObj.width = Math.round(this.imageObj.height * this.imageRatio).toFixed(0)\n      }\n      this.imageObj.ratio = (this.imageObj.width / this.image.width * 100).toFixed(2) + '%'\n    },\n    // 计算图片显示宽高\n    getDragContainerSize(imageW, imageH) {\n      const [showAreaW, showAreaH] = [850, 550]\n      const sizeObj = calcImageSize(imageW, imageH, showAreaW, showAreaH)\n      // 更新图片展示区宽高\n      this.imageShow.width = sizeObj.width\n      this.imageShow.height = sizeObj.height\n    },\n    handleSuccess(data) {\n      this.image.src = data\n      const image = new Image()\n      image.src = data\n      image.onload = () => {\n        this.image.width = image.width\n        this.image.height = image.height\n      }\n    },\n    // 图片压缩\n    compressImage() {\n      const width = this.imageObj.width\n      const height = this.imageObj.height\n      const quality = this.imageObj.quality\n      const img = new Image()\n      img.src = this.image.src\n      img.onload = () => {\n        // 创建canvas\n        const canvas = document.createElement('canvas')\n        const ctx = canvas.getContext('2d')\n        // 创建属性节点\n        const anw = document.createAttribute('width')\n        anw.nodeValue = width\n        const anh = document.createAttribute('height')\n        anh.nodeValue = height\n        canvas.setAttributeNode(anw)\n        canvas.setAttributeNode(anh)\n        // 绘制图片\n        ctx.fillRect(0, 0, width, height)\n        ctx.drawImage(img, 0, 0, width, height)\n        // 生成base64图片\n        const imageBase64 = canvas.toDataURL('image/png', quality)\n        this.downloadImage(imageBase64)\n      }\n    },\n    // 下载压缩的图片\n    downloadImage(imageBase64) {\n      const imageBlob = base64toBlob(imageBase64)\n      const link = document.createElement('a')\n      const event = document.createEvent('HTMLEvents')\n      // initEvent 不加后两个参数会在火狐下报错 事件类型，是否冒泡，是否阻止浏览器的默认行为\n      event.initEvent('click', true, true)\n      link.download = 'image.png'\n      link.href = URL.createObjectURL(imageBlob)\n      // 兼容火狐\n      link.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }))\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import \"../../assets/less/image-compress\";\n</style>\n"]}]}