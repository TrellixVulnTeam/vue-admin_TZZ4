{"remainingRequest":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/Documents/iwork/kafo/vue-admin-design/src/views/form-table/TableInlineEdit.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/src/views/form-table/TableInlineEdit.vue","mtime":1624500048824},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/Documents/iwork/kafo/vue-admin-design/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudGFibGUtaW5saW5lLWVkaXQgew0KICAuZWwtdGFibGUgdGhlYWQgew0KICAgIGZvbnQtd2VpZ2h0OiA2MDA7DQogICAgdGggew0KICAgICAgcGFkZGluZzogMTZweCAwIDE1cHghaW1wb3J0YW50Ow0KICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjNmNzsNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["TableInlineEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TableInlineEdit.vue","sourceRoot":"src/views/form-table","sourcesContent":["<template>\r\n  <div class=\"table-inline-edit\">\r\n    <Hints>\r\n      <template slot=\"hintName\">Table表格组件(行内编辑)</template>\r\n      <template slot=\"hintInfo\">\r\n        <p>element-Table：使用elementUI的Table组件，可用于展示多条结构类似的数据，并对其进行行内编辑操作</p>\r\n        <p>地址：访问 <el-link type=\"success\" href=\"https://element.eleme.cn/2.13/TableClassic.vue#/zh-CN/component/table\" target=\"_blank\">element-Table</el-link></p>\r\n      </template>\r\n    </Hints>\r\n    <el-card shadow=\"always\">\r\n      <el-table v-loading=\"listLoading\" :data=\"tableList\" tooltip-effect=\"dark\" style=\"width: 100%\" size=\"medium\">\r\n        <el-table-column prop=\"id\" label=\"编号\" align=\"center\" width=\"120\" />\r\n        <el-table-column prop=\"name\" label=\"姓名\" align=\"center\" />\r\n        <el-table-column label=\"性别\" align=\"center\">\r\n          <template slot-scope=\"{row}\">{{ row.sex }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"爱好\" align=\"center\" min-width=\"300px\">\r\n          <template slot-scope=\"{row}\">\r\n            <template v-if=\"row.editable\">\r\n              <el-input v-model=\"row.hobby\" style=\"width: 300px;\" />\r\n              <el-button class=\"cancel-btn\" type=\"warning\" @click=\"cancelEdit(row)\">取消</el-button>\r\n            </template>\r\n            <span v-else>{{ row.hobby }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"education\" label=\"学历\" align=\"center\" />\r\n        <el-table-column align=\"center\" label=\"操作\" width=\"200\">\r\n          <template slot-scope=\"{row}\">\r\n            <el-button v-if=\"row.editable\" type=\"success\" size=\"small\" @click=\"confirmEdit(row)\">保存</el-button>\r\n            <el-button v-else type=\"primary\" size=\"small\" @click=\"row.editable = !row.editable\">编辑</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getTableList } from '../../api'\r\nimport Hints from '../../components/Hints'\r\n\r\nexport default {\r\n  name: 'TableInlineEdit',\r\n  components: { Hints },\r\n  data() {\r\n    return {\r\n      listLoading: true,\r\n      tableList: [],\r\n      listQuery: {\r\n        currentPage: 1,\r\n        pageSize: 10\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    // 获取数据列表\r\n    fetchData() {\r\n      this.listLoading = true\r\n      // 获取数据列表接口\r\n      getTableList(this.listQuery).then(res => {\r\n        const data = res.data\r\n        if (data.code === 0) {\r\n          this.tableList = data.data.list.map(item => {\r\n            this.$set(item, 'editable', false)\r\n            item.originalHobby = item.hobby\r\n            return item\r\n          })\r\n          console.log(this.tableList)\r\n          this.listLoading = false\r\n        }\r\n      }).catch(() => {\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    cancelEdit(row) {\r\n      row.hobby = row.originalHobby\r\n      row.editable = false\r\n    },\r\n    confirmEdit(row) {\r\n      row.editable = false\r\n      row.originalHobby = row.hobby\r\n      // 此处添加 后端保存数据接口\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.table-inline-edit {\r\n  .el-table thead {\r\n    font-weight: 600;\r\n    th {\r\n      padding: 16px 0 15px!important;\r\n      background-color: #f2f3f7;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}