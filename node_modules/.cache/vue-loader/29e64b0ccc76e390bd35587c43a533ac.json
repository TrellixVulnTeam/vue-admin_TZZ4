{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/audit/video-audit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/audit/video-audit.vue","mtime":1635158084334},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvUGFnaW5hdGlvbicKaW1wb3J0IHtnZXRBcHBMaXN0LCBnZXRBcHBOYW1lLCBnZXRBcmVhTGlzdCwgZ2V0QXJyTmFtZSwgZ2V0Q3VycmVudFVzZXJBcmVhSWQsIGdldFJldmlld1N0YXR1c30gZnJvbSAiQC91dGlscy9kaXN0IgppbXBvcnQgdmlkZW9MaXN0IGZyb20gJy4vZGlhbG9nL2FuY2hvci12aWRlby1saXN0JwppbXBvcnQge2VuZFVuaXgsIHN0YXJ0VW5peCwgdG9UaW1lfSBmcm9tICJAL3V0aWxzL3V0aWwiCmltcG9ydCBWdWVWaWRlb1BsYXllciBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL1Z1ZVZpZGVvUGxheWVyJwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1RhYmxlJywKICAgIGNvbXBvbmVudHM6IHtQYWdpbmF0aW9uLCB2aWRlb0xpc3QsIFZ1ZVZpZGVvUGxheWVyfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgLy8g5pWw5o2u5YiX6KGo5Yqg6L295Yqo55S7CiAgICAgICAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICAgICAgICAvLyDmn6Xor6LliJfooajlj4LmlbDlr7nosaEKICAgICAgICAgICAgc2VhcmNoOiB7CiAgICAgICAgICAgICAgICBhcmVhSWQ6IHVuZGVmaW5lZCwKICAgICAgICAgICAgICAgIHJldmlld1N0YXR1czogMiwKICAgICAgICAgICAgICAgIGRhdGU6IFtdLAogICAgICAgICAgICAgICAgcGFnZTogewogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICAgICAgICAgICAgICAgIHBhZ2VTaXplOiAxMAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAvLyDmlbDmja7mgLvmnaHmlbAKICAgICAgICAgICAgdG90YWw6IDAsCiAgICAgICAgICAgIGF1dGhBcmVhSWQ6IGdldEN1cnJlbnRVc2VyQXJlYUlkKCksCiAgICAgICAgICAgIHRhYmxlRGF0YTogW10sCiAgICAgICAgICAgIG11bHRpcGxlU2VsZWN0aW9uOiBbXSwKICAgICAgICAgICAgcGxheVZpc2libGU6IGZhbHNlLAogICAgICAgICAgICBhcmVhRGF0YTogZ2V0QXJlYUxpc3QoZmFsc2UpLAogICAgICAgICAgICByZXZpZXdTdGF0dXM6IGdldFJldmlld1N0YXR1cygpLAogICAgICAgICAgICBhcHBMaXN0QWxsOiBnZXRBcHBMaXN0KGZhbHNlKQogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuc2VhcmNoLmFyZWFJZCA9IHRoaXMuYXV0aEFyZWFJZCA9PT0gMCA/IHRoaXMuYXJlYURhdGFbMF0udmFsdWUgOiB0aGlzLmF1dGhBcmVhSWQKICAgICAgICB0aGlzLmZldGNoRGF0YSgpCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC8vIOiOt+WPluaVsOaNruWIl+ihqAogICAgICAgIGZldGNoRGF0YSgpIHsKICAgICAgICAgICAgY29uc3QgJHRoaXMgPSB0aGlzCiAgICAgICAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlCiAgICAgICAgICAgIHRoaXMuJHNlcnZpY2UuYXVkaXQuZ2V0TGl2ZUxpc3QodGhpcy5oYW5kbGVQYXJhbSgpLCBmdW5jdGlvbiAocmVzdWx0KXsKICAgICAgICAgICAgICAgIGNvbnN0IGxpc3QgPSByZXN1bHQuZ2V0UmVjb3Jkc0xpc3QoKQogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IFtdCiAgICAgICAgICAgICAgICBsaXN0LmZvckVhY2goKGl0ZW0sIGluZGV4KT0+ewogICAgICAgICAgICAgICAgICAgIGNvbnN0IGpzb24gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICJpZCIgOiBpdGVtLmdldElkKCksCiAgICAgICAgICAgICAgICAgICAgICAgICJhcHBJZCIgOiBpdGVtLmdldEFwcElkKCksCiAgICAgICAgICAgICAgICAgICAgICAgICJhcHAiIDogZ2V0QXBwTmFtZSgkdGhpcy5hcHBMaXN0QWxsLCBpdGVtLmdldEFwcElkKCkpLAogICAgICAgICAgICAgICAgICAgICAgICAiYXJlYUlkIiA6IGl0ZW0uZ2V0QXJlYUlkKCksCiAgICAgICAgICAgICAgICAgICAgICAgICJhcmVhTmFtZSIgOiBnZXRBcnJOYW1lKCR0aGlzLmFyZWFEYXRhLCBpdGVtLmdldEFyZWFJZCgpKSwKICAgICAgICAgICAgICAgICAgICAgICAgIm93bmVySWQiIDogaXRlbS5nZXRPd25lcklkKCksCiAgICAgICAgICAgICAgICAgICAgICAgICJvd25lclR5cGUiIDogaXRlbS5nZXRPd25lclR5cGUoKSwKICAgICAgICAgICAgICAgICAgICAgICAgInRodW1iIiA6IGl0ZW0uZ2V0VGh1bWIoKSwKICAgICAgICAgICAgICAgICAgICAgICAgImxpa2VzIiA6IGl0ZW0uZ2V0TGlrZXMoKSwKICAgICAgICAgICAgICAgICAgICAgICAgInVyaSIgOiBpdGVtLmdldFVyaSgpLAogICAgICAgICAgICAgICAgICAgICAgICAic3RhdHVzIiA6IGdldFJldmlld1N0YXR1cyhpdGVtLmdldFN0YXR1cygpKSwKICAgICAgICAgICAgICAgICAgICAgICAgImNyZWF0ZWRBdCIgOiB0b1RpbWUoaXRlbS5nZXRDcmVhdGVkQXQoKSkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZGF0YS5wdXNoKGpzb24pCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgJHRoaXMudG90YWwgPSByZXN1bHQuZ2V0VG90YWxDb3VudCgpCiAgICAgICAgICAgICAgICAkdGhpcy50YWJsZURhdGEgPSBkYXRhCiAgICAgICAgICAgICAgICAkdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlCiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgaGFuZGxlUGFyYW0oKXsKICAgICAgICAgICAgbGV0IHBhcmFtID0gdGhpcy5zZWFyY2g7CiAgICAgICAgICAgIGlmIChwYXJhbS5kYXRlLmxlbmd0aCA+IDApewogICAgICAgICAgICAgICAgcGFyYW0uY3JlYXRlZFN0YXJ0VWludCA9IHN0YXJ0VW5peCh0aGlzLnNlYXJjaC5kYXRlWzBdKQogICAgICAgICAgICAgICAgcGFyYW0uY3JlYXRlZEVuZFVpbnQgPSBlbmRVbml4KHRoaXMuc2VhcmNoLmRhdGVbMV0pCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHBhcmFtCiAgICAgICAgfSwKICAgICAgICAvLyDmn6Xor6LmlbDmja4KICAgICAgICBvblN1Ym1pdCgpIHsKICAgICAgICAgICAgdGhpcy5zZWFyY2guY3VycmVudFBhZ2UgPSAxCiAgICAgICAgICAgIHRoaXMuZmV0Y2hEYXRhKCkKICAgICAgICB9LAogICAgICAgIC8vIOWkmumAieaTjeS9nAogICAgICAgIGhhbmRsZVNlbGVjdGlvbkNoYW5nZSh2YWwpIHsKICAgICAgICAgICAgdGhpcy5tdWx0aXBsZVNlbGVjdGlvbiA9IHZhbAogICAgICAgIH0sCiAgICAgICAgLy8g5by55qGGCiAgICAgICAgdG9EaWFsb2coY29tcG9uZW50LCByb3cpewogICAgICAgICAgICB0aGlzLiRyZWZzW2NvbXBvbmVudF0uZGlhbG9nVmlzaWJsZSA9IHRydWUKICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PnsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnNbY29tcG9uZW50XS5pbml0KHJvdyk7CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBjaGFuZ2VQYWdlU2l6ZShtc2cpewogICAgICAgICAgICB0aGlzLnNlYXJjaC5wYWdlLnBhZ2VTaXplID0gbXNnLmxpbWl0CiAgICAgICAgfSwKICAgICAgICBwbGF5KHJvdykgewogICAgICAgICAgICB0aGlzLnBsYXlWaXNpYmxlID0gdHJ1ZTsKICAgICAgICAgICAgbGV0IHNyYyA9IHJvdy51cmkKICAgICAgICAgICAgY29uc29sZS5sb2coIuaSreaUvuinhumikSIpCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJvdykKICAgICAgICAgICAgY29uc29sZS5sb2cocm93LnVyaSkKICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PnsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMubXlWaWRlb1BsYXllci5pbml0U3JjKHNyYyk7CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBjbG9zZVZpZGVvKCl7CiAgICAgICAgICAgIHRoaXMucGxheVZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PnsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMubXlWaWRlb1BsYXllci5lbXB0eVNyYygpOwogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgcGFzc2VkKHJvdykgewogICAgICAgICAgICBjb25zdCAkdGhpcyA9IHRoaXMKICAgICAgICAgICAgbGV0IHBhcmFtID0gewogICAgICAgICAgICAgICAgImlkIiA6IHJvdy5pZCwKICAgICAgICAgICAgICAgICJzdGF0dXMiIDogNQogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuJHNlcnZpY2UuYXVkaXQucHJvY2Vzc0xpdmUocGFyYW0sIGZ1bmN0aW9uIChyZXN1bHQpewogICAgICAgICAgICAgICAgcmVzdWx0ID8gJHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5a6h5qC46YCa6L+HICEiKSA6ICR0aGlzLiRtZXNzYWdlLmVycm9yKCLlrqHmoLjlpLHotKUgISIpCiAgICAgICAgICAgICAgICAkdGhpcy5mZXRjaERhdGEoKQogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIC8vIOWIoOmZpAogICAgICAgIGRlbFZpZGVvKHJvdykgewogICAgICAgICAgICBjb25zdCAkdGhpcyA9IHRoaXMKICAgICAgICAgICAgbGV0IHBhcmFtID0gewogICAgICAgICAgICAgICAgImlkIiA6IHJvdy5pZCwKICAgICAgICAgICAgICAgICJzdGF0dXMiIDogNAogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuJHNlcnZpY2UuYXVkaXQucHJvY2Vzc0xpdmUocGFyYW0sIGZ1bmN0aW9uIChyZXN1bHQpewogICAgICAgICAgICAgICAgcmVzdWx0ID8gJHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5bey5Yig6ZmkICEiKSA6ICR0aGlzLiRtZXNzYWdlLmVycm9yKCLmi5Lnu53liKDpmaQgISIpCiAgICAgICAgICAgICAgICAkdGhpcy5mZXRjaERhdGEoKQogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIGJhdGNoUGFzc2VkKCl7CiAgICAgICAgICAgIHRoaXMubXVsdGlwbGVTZWxlY3Rpb24uZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgICAgICAgIHRoaXMucGFzc2VkKGl0ZW0pCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBiYXRjaERlbGUoKXsKICAgICAgICAgICAgdGhpcy5tdWx0aXBsZVNlbGVjdGlvbi5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICAgICAgdGhpcy5kZWxWaWRlbyhpdGVtKQogICAgICAgICAgICB9KQogICAgICAgIH0KICAgIH0KfQo="},null]}