{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-manage/src/components/OrgTree/ZoomController.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-manage/src/components/OrgTree/ZoomController.vue","mtime":1626074721835},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouem9vbS1jb250cm9sbGVyIHsNCiAgICAuaWNvbiB7DQogICAgICAgIGZvbnQtc2l6ZTogMjBweDsNCiAgICAgICAgY29sb3I6ICM5ZGEyYWM7DQoNCiAgICAgICAgJjpob3ZlciB7DQogICAgICAgICAgICBjb2xvcjogIzQwOWVmZjsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIHNwYW4gew0KICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7DQogICAgfQ0KfQ0K"},{"version":3,"sources":["ZoomController.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ZoomController.vue","sourceRoot":"src/components/OrgTree","sourcesContent":["<template>\r\n    <div class=\"zoom-controller\">\r\n        <el-button type=\"text\" @click=\"scale('cut')\">\r\n            <i class=\"icon el-icon-remove\"/>\r\n        </el-button>\r\n        <span>{{ value }}%</span>\r\n        <el-button type=\"text\" @click=\"scale('add')\">\r\n            <i class=\"icon el-icon-circle-plus\"/>\r\n        </el-button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ZoomController',\r\n    props: {\r\n        value: {\r\n            type: Number,\r\n            default: 100\r\n        },\r\n        diff: {\r\n            type: Number,\r\n            default: 10\r\n        },\r\n        min: {\r\n            type: Number,\r\n            default: 50\r\n        },\r\n        max: {\r\n            type: Number,\r\n            default: 150\r\n        }\r\n    },\r\n    methods: {\r\n        scale(type) {\r\n            const zoom = this.value + (type === 'cut' ? -this.diff : this.diff)\r\n            if ((zoom < this.min && type === 'cut') || (zoom > this.max && type === 'add')) {\r\n                return false\r\n            }\r\n            this.$emit('input', zoom)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.zoom-controller {\r\n    .icon {\r\n        font-size: 20px;\r\n        color: #9da2ac;\r\n\r\n        &:hover {\r\n            color: #409eff;\r\n        }\r\n    }\r\n\r\n    span {\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n    }\r\n}\r\n</style>\r\n"]}]}