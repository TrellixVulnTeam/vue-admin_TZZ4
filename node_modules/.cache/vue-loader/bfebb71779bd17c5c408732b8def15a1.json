{"remainingRequest":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/count/real-time.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/mengy/develop/iwork/kafo/vue-admin/src/views/manage/count/real-time.vue","mtime":1633415297079},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mengy/develop/iwork/kafo/vue-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uLy4uL2Fzc2V0cy9sZXNzL2hvbWUiOwo="},{"version":3,"sources":["real-time.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA","file":"real-time.vue","sourceRoot":"src/views/manage/count","sourcesContent":["<template>\n    <div class=\"home-wrapper\">\n        <el-row class=\"date-box\" :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <el-form\n                        ref=\"searchForm\"\n                        :inline=\"true\"\n                        :model=\"search\"\n                        label-width=\"90px\"\n                        class=\"search-form\"\n                    >\n                        <el-form-item label=\"区域\">\n                            <el-select v-model=\"search.areaId\" :disabled=\"authAreaId !== 0\" placeholder=\"请选择\">\n                                <el-option v-for=\"item in areaList\"\n                                           :key=\"item.value\"\n                                           :label=\"item.label\"\n                                           :value=\"item.value\">\n                                </el-option>\n                            </el-select>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button type=\"danger\" @click=\"onSearch\" icon=\"el-icon-refresh\">刷 新</el-button>\n                        </el-form-item>\n                    </el-form>\n                </el-card>\n            </el-col>\n        </el-row>\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsLine :data=\"userData\" v-if=\"userData.values\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsLine :data=\"callingData\" v-if=\"callingData.values\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <el-row class=\"date-box\" :gutter=\"30\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" :body-style=\"{padding: '10px', paddingTop:'20px'}\">\n                    <ChartsLine :data=\"callData\" v-if=\"callData.values\" class=\"data-chart\"/>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport CountTo from 'vue-count-to'\nimport ChartsBarLine from '../../../components/Charts/ChartsBarLine'\nimport ChartsBar from '../../../components/Charts/ChartsBar'\nimport ChartsLine from '../../../components/Charts/ChartsLine'\nimport {getAreaList, getCurrentUserAreaId} from \"@/utils/dist\";\n\nexport default {\n    name: 'Home',\n    components: {CountTo, ChartsBar, ChartsBarLine, ChartsLine},\n    data() {\n        return {\n            search: {\n                areaId: getCurrentUserAreaId()\n            },\n            areaList: getAreaList(true),\n            userData: {\n                title: '实时用户',\n                legend: ['在线用户', '新用户', '付费用户', '空闲主播', '通话主播'],\n                keys: [],\n                values: undefined\n            },\n            callingData: {\n                title: '实时通话',\n                legend: ['AIB发起', '用户发起', '主播发起'],\n                keys: [],\n                values: undefined\n            },\n            callData: {\n                title: '实时呼叫',\n                legend: ['整体呼叫', 'AIB呼叫', '用户呼叫', '主播呼叫'],\n                keys: [],\n                values: undefined\n            }\n        }\n    },\n    created() {\n        this.initData()\n    },\n    methods: {\n        onSearch() {\n            this.initData()\n        },\n        initData(){\n            const $this = this\n            let param = this.search\n            param.startAt = this.startUnix(new Date())\n            param.endAt = this.endUnix(new Date())\n            this.$service.home.getAreaStat(this.search, function (result){\n                let statList = result.getStatsList()\n                $this.handleUserData(statList)\n                $this.handleCallingData(statList)\n                $this.handleCallData(statList)\n            });\n        },\n        handleUserData(statList){\n            let keys = []\n            let values = []\n            let onlineUser = []\n            let newUser = []\n            let payUser = []\n            let idleAnchor = []\n            let busyAnchor = []\n            statList.forEach((item, index) => {\n                let startAt = item.getStartAt()\n                keys.push(new Date(startAt * 1000).format(\"HH:mm\"))\n                onlineUser.push(item.getOnlineUser())\n                newUser.push(item.getNewUser())\n                payUser.push(item.getPayUser())\n                idleAnchor.push(item.getIdleAnchor())\n                busyAnchor.push(item.getBusyAnchor())\n            })\n\n            values.push(onlineUser)\n            values.push(newUser)\n            values.push(payUser)\n            values.push(idleAnchor)\n            values.push(busyAnchor)\n\n            this.userData.keys = keys\n            this.userData.values = values\n        },\n        handleCallingData(statList){\n            let keys = []\n            let values = []\n            let aiCalling = []\n            let userCalling = []\n            let anchorCalling = []\n            statList.forEach((item, index) => {\n                let startAt = item.getStartAt()\n                keys.push(new Date(startAt * 1000).format(\"HH:mm\"))\n                aiCalling.push(item.getAiCalling())\n                userCalling.push(item.getUserCalling())\n                anchorCalling.push(item.getAnchorCalling())\n            })\n            values.push(aiCalling)\n            values.push(userCalling)\n            values.push(anchorCalling)\n\n            this.callingData.keys = keys\n            this.callingData.values = values\n        },\n        handleCallData(statList){\n            let keys = []\n            let values = []\n            let aiCall = []\n            let userCall = []\n            let anchorCall = []\n            statList.forEach((item, index) => {\n                let startAt = item.getStartAt()\n                keys.push(new Date(startAt * 1000).format(\"HH:mm\"))\n                aiCall.push(item.getAiCall())\n                userCall.push(item.getUserCall())\n                anchorCall.push(item.getAnchorCall())\n            })\n            values.push(aiCall)\n            values.push(userCall)\n            values.push(anchorCall)\n\n            this.callData.keys = keys\n            this.callData.values = values\n        },\n        startUnix($date) {\n            return new Date($date.toLocaleDateString()).getTime() / 1000\n        },\n        endUnix($date) {\n            return this.startUnix($date) + 24 * 60 * 60 - 1\n        }\n    }\n}\n</script>\n\n<style lang=\"less\">\n@import \"../../../assets/less/home\";\n</style>\n"]}]}